

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Thu Mar 23 12:28:46 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     	;# 
    11  0001                     	;# 
    12  0002                     	;# 
    13  0003                     	;# 
    14  0004                     	;# 
    15  0005                     	;# 
    16  0006                     	;# 
    17  0007                     	;# 
    18  0008                     	;# 
    19  0009                     	;# 
    20  000A                     	;# 
    21  000B                     	;# 
    22  000C                     	;# 
    23  000D                     	;# 
    24  000E                     	;# 
    25  000E                     	;# 
    26  000F                     	;# 
    27  0010                     	;# 
    28  0011                     	;# 
    29  0012                     	;# 
    30  0013                     	;# 
    31  0014                     	;# 
    32  0015                     	;# 
    33  0015                     	;# 
    34  0016                     	;# 
    35  0017                     	;# 
    36  0018                     	;# 
    37  0019                     	;# 
    38  001A                     	;# 
    39  001B                     	;# 
    40  001B                     	;# 
    41  001C                     	;# 
    42  001D                     	;# 
    43  001E                     	;# 
    44  001F                     	;# 
    45  0081                     	;# 
    46  0085                     	;# 
    47  0086                     	;# 
    48  0087                     	;# 
    49  0088                     	;# 
    50  0089                     	;# 
    51  008C                     	;# 
    52  008D                     	;# 
    53  008E                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0093                     	;# 
    57  0094                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009C                     	;# 
    61  009D                     	;# 
    62  009E                     	;# 
    63  009F                     	;# 
    64  010C                     	;# 
    65  010D                     	;# 
    66  010E                     	;# 
    67  010F                     	;# 
    68  018C                     	;# 
    69  018D                     	;# 
    70  0006                     _PORTB	set	6
    71  0019                     _TXREG	set	25
    72  0034                     _RB4	set	52
    73  00C7                     _SPEN	set	199
    74  0099                     _SPBRG	set	153
    75  04C2                     _BRGH	set	1218
    76  04C4                     _SYNC	set	1220
    77  04C1                     _TRMT	set	1217
    78  04C6                     _TX9	set	1222
    79  04C5                     _TXEN	set	1221
    80                           
    81                           	psect	text0
    82  0000                     __ptext0:	
    83                           ; #config settings
    84                           
    85                           
    86                           ;psect for function _delay
    87  0000                     
    88                           	psect	cinit
    89  07FC                     start_initialization:	
    90  07FC                     __initialization:	
    91  07FC                     end_of_initialization:	
    92                           ;End of C runtime variable initialization code
    93                           
    94  07FC                     __end_of__initialization:	
    95  07FC  0183               	clrf	3
    96  07FD  120A  118A  2F75   	ljmp	_main	;jump to C main() function
    97                           
    98                           	psect	cstackCOMMON
    99  0070                     __pcstackCOMMON:	
   100  0070                     ?_delay:	
   101  0070                     ?_main:	
   102                           ; 0 bytes @ 0x0
   103                           
   104  0070                     delay@ms_Count:	
   105                           ; 0 bytes @ 0x0
   106                           
   107                           
   108                           ; 2 bytes @ 0x0
   109  0070                     	ds	2
   110  0072                     ??_delay:	
   111  0072                     delay@i:	
   112                           ; 0 bytes @ 0x2
   113                           
   114                           
   115                           ; 2 bytes @ 0x2
   116  0072                     	ds	2
   117  0074                     delay@j:	
   118                           
   119                           ; 2 bytes @ 0x4
   120  0074                     	ds	2
   121  0076                     ??_main:	
   122                           
   123                           ; 0 bytes @ 0x6
   124  0076                     	ds	1
   125  0077                     main@x:	
   126                           
   127                           ; 2 bytes @ 0x7
   128  0077                     	ds	2
   129  0079                     main@VAL:	
   130                           
   131                           ; 1 bytes @ 0x9
   132  0079                     	ds	1
   133                           
   134                           	psect	maintext
   135  0775                     __pmaintext:	
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 25 in file "D:\JinBus\CpE 3201\Practical Activity #6\CpE 3201-LE6-4\dumalaganDa_LE6-4-TX.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;  x               2    7[COMMON] int 
   146 ;;  VAL             1    9[COMMON] unsigned char 
   147 ;; Return value:  Size  Location     Type
   148 ;;		None               void
   149 ;; Registers used:
   150 ;;		wreg, status,2, status,0, pclath, cstack
   151 ;; Tracked objects:
   152 ;;		On entry : 17F/0
   153 ;;		On exit  : 0/0
   154 ;;		Unchanged: 0/0
   155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   156 ;;      Params:         0       0       0       0       0
   157 ;;      Locals:         3       0       0       0       0
   158 ;;      Temps:          1       0       0       0       0
   159 ;;      Totals:         4       0       0       0       0
   160 ;;Total ram usage:        4 bytes
   161 ;; Hardware stack levels required when called:    1
   162 ;; This function calls:
   163 ;;		_delay
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           
   170                           ;psect for function _main
   171  0775                     _main:	
   172                           
   173                           ;dumalaganDa_LE6-4-TX.c: 26: SPBRG = 0x19;
   174                           
   175                           ;incstack = 0
   176                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   177  0775  3019               	movlw	25
   178  0776  1683               	bsf	3,5	;RP0=1, select bank1
   179  0777  1303               	bcf	3,6	;RP1=0, select bank1
   180  0778  0099               	movwf	25	;volatile
   181                           
   182                           ;dumalaganDa_LE6-4-TX.c: 28: SYNC = 0;
   183  0779  1218               	bcf	24,4	;volatile
   184                           
   185                           ;dumalaganDa_LE6-4-TX.c: 29: SPEN = 1;
   186  077A  1283               	bcf	3,5	;RP0=0, select bank0
   187  077B  1303               	bcf	3,6	;RP1=0, select bank0
   188  077C  1798               	bsf	24,7	;volatile
   189                           
   190                           ;dumalaganDa_LE6-4-TX.c: 30: TX9 = 0;
   191  077D  1683               	bsf	3,5	;RP0=1, select bank1
   192  077E  1303               	bcf	3,6	;RP1=0, select bank1
   193  077F  1318               	bcf	24,6	;volatile
   194                           
   195                           ;dumalaganDa_LE6-4-TX.c: 31: BRGH = 1;
   196  0780  1518               	bsf	24,2	;volatile
   197                           
   198                           ;dumalaganDa_LE6-4-TX.c: 32: TXEN = 1;
   199  0781  1698               	bsf	24,5	;volatile
   200                           
   201                           ;dumalaganDa_LE6-4-TX.c: 34: PORTB = 0xFF;
   202  0782  30FF               	movlw	255
   203  0783  1283               	bcf	3,5	;RP0=0, select bank0
   204  0784  1303               	bcf	3,6	;RP1=0, select bank0
   205  0785  0086               	movwf	6	;volatile
   206  0786                     l530:	
   207                           ;dumalaganDa_LE6-4-TX.c: 35: unsigned char VAL;
   208                           ;dumalaganDa_LE6-4-TX.c: 36: int x;
   209                           ;dumalaganDa_LE6-4-TX.c: 38: for(;;) {
   210                           
   211                           
   212                           ;dumalaganDa_LE6-4-TX.c: 39: delay(15);
   213  0786  300F               	movlw	15
   214  0787  00F0               	movwf	delay@ms_Count
   215  0788  3000               	movlw	0
   216  0789  00F1               	movwf	delay@ms_Count+1
   217  078A  120A  118A  274E  120A  118A  	fcall	_delay
   218                           
   219                           ;dumalaganDa_LE6-4-TX.c: 40: if(RB4 == 1) {
   220  078F  1283               	bcf	3,5	;RP0=0, select bank0
   221  0790  1303               	bcf	3,6	;RP1=0, select bank0
   222  0791  1E06               	btfss	6,4	;volatile
   223  0792  2F86               	goto	l530
   224                           
   225                           ;dumalaganDa_LE6-4-TX.c: 41: VAL = PORTB & 0x0F;
   226  0793  0806               	movf	6,w	;volatile
   227  0794  390F               	andlw	15
   228  0795  00F6               	movwf	??_main
   229  0796  0876               	movf	??_main,w
   230  0797  00F9               	movwf	main@VAL
   231                           
   232                           ;dumalaganDa_LE6-4-TX.c: 42: if(VAL == 0x00)
   233  0798  08F9               	movf	main@VAL,f
   234  0799  1D03               	skipz
   235  079A  2F9F               	goto	l33
   236                           
   237                           ;dumalaganDa_LE6-4-TX.c: 43: x = 0x01;
   238  079B  3001               	movlw	1
   239  079C  00F7               	movwf	main@x
   240  079D  3000               	movlw	0
   241  079E  00F8               	movwf	main@x+1
   242  079F                     l33:	
   243                           
   244                           ;dumalaganDa_LE6-4-TX.c: 44: if(VAL == 0x01)
   245  079F  0879               	movf	main@VAL,w
   246  07A0  3A01               	xorlw	1
   247  07A1  1D03               	skipz
   248  07A2  2FA7               	goto	l34
   249                           
   250                           ;dumalaganDa_LE6-4-TX.c: 45: x = 0x02;
   251  07A3  3002               	movlw	2
   252  07A4  00F7               	movwf	main@x
   253  07A5  3000               	movlw	0
   254  07A6  00F8               	movwf	main@x+1
   255  07A7                     l34:	
   256                           
   257                           ;dumalaganDa_LE6-4-TX.c: 46: if(VAL == 0x02)
   258  07A7  0879               	movf	main@VAL,w
   259  07A8  3A02               	xorlw	2
   260  07A9  1D03               	skipz
   261  07AA  2FAF               	goto	l35
   262                           
   263                           ;dumalaganDa_LE6-4-TX.c: 47: x = 0x03;
   264  07AB  3003               	movlw	3
   265  07AC  00F7               	movwf	main@x
   266  07AD  3000               	movlw	0
   267  07AE  00F8               	movwf	main@x+1
   268  07AF                     l35:	
   269                           
   270                           ;dumalaganDa_LE6-4-TX.c: 48: if(VAL == 0x04)
   271  07AF  0879               	movf	main@VAL,w
   272  07B0  3A04               	xorlw	4
   273  07B1  1D03               	skipz
   274  07B2  2FB7               	goto	l36
   275                           
   276                           ;dumalaganDa_LE6-4-TX.c: 49: x = 0x04;
   277  07B3  3004               	movlw	4
   278  07B4  00F7               	movwf	main@x
   279  07B5  3000               	movlw	0
   280  07B6  00F8               	movwf	main@x+1
   281  07B7                     l36:	
   282                           
   283                           ;dumalaganDa_LE6-4-TX.c: 50: if(VAL == 0x05)
   284  07B7  0879               	movf	main@VAL,w
   285  07B8  3A05               	xorlw	5
   286  07B9  1D03               	skipz
   287  07BA  2FBF               	goto	l37
   288                           
   289                           ;dumalaganDa_LE6-4-TX.c: 51: x = 0x05;
   290  07BB  3005               	movlw	5
   291  07BC  00F7               	movwf	main@x
   292  07BD  3000               	movlw	0
   293  07BE  00F8               	movwf	main@x+1
   294  07BF                     l37:	
   295                           
   296                           ;dumalaganDa_LE6-4-TX.c: 52: if(VAL == 0x06)
   297  07BF  0879               	movf	main@VAL,w
   298  07C0  3A06               	xorlw	6
   299  07C1  1D03               	skipz
   300  07C2  2FC7               	goto	l38
   301                           
   302                           ;dumalaganDa_LE6-4-TX.c: 53: x = 0x06;
   303  07C3  3006               	movlw	6
   304  07C4  00F7               	movwf	main@x
   305  07C5  3000               	movlw	0
   306  07C6  00F8               	movwf	main@x+1
   307  07C7                     l38:	
   308                           
   309                           ;dumalaganDa_LE6-4-TX.c: 54: if(VAL == 0x08)
   310  07C7  0879               	movf	main@VAL,w
   311  07C8  3A08               	xorlw	8
   312  07C9  1D03               	skipz
   313  07CA  2FCF               	goto	l39
   314                           
   315                           ;dumalaganDa_LE6-4-TX.c: 55: x = 0x07;
   316  07CB  3007               	movlw	7
   317  07CC  00F7               	movwf	main@x
   318  07CD  3000               	movlw	0
   319  07CE  00F8               	movwf	main@x+1
   320  07CF                     l39:	
   321                           
   322                           ;dumalaganDa_LE6-4-TX.c: 56: if(VAL == 0x09)
   323  07CF  0879               	movf	main@VAL,w
   324  07D0  3A09               	xorlw	9
   325  07D1  1D03               	skipz
   326  07D2  2FD7               	goto	l40
   327                           
   328                           ;dumalaganDa_LE6-4-TX.c: 57: x = 0x08;
   329  07D3  3008               	movlw	8
   330  07D4  00F7               	movwf	main@x
   331  07D5  3000               	movlw	0
   332  07D6  00F8               	movwf	main@x+1
   333  07D7                     l40:	
   334                           
   335                           ;dumalaganDa_LE6-4-TX.c: 58: if(VAL == 0x0A)
   336  07D7  0879               	movf	main@VAL,w
   337  07D8  3A0A               	xorlw	10
   338  07D9  1D03               	skipz
   339  07DA  2FDF               	goto	l41
   340                           
   341                           ;dumalaganDa_LE6-4-TX.c: 59: x = 0x09;
   342  07DB  3009               	movlw	9
   343  07DC  00F7               	movwf	main@x
   344  07DD  3000               	movlw	0
   345  07DE  00F8               	movwf	main@x+1
   346  07DF                     l41:	
   347                           
   348                           ;dumalaganDa_LE6-4-TX.c: 60: if(VAL == 0x0D || VAL == 0x0C || VAL == 0x0E)
   349  07DF  0879               	movf	main@VAL,w
   350  07E0  3A0D               	xorlw	13
   351  07E1  1903               	skipnz
   352  07E2  2FEB               	goto	l560
   353  07E3  0879               	movf	main@VAL,w
   354  07E4  3A0C               	xorlw	12
   355  07E5  1903               	skipnz
   356  07E6  2FEB               	goto	l560
   357  07E7  0879               	movf	main@VAL,w
   358  07E8  3A0E               	xorlw	14
   359  07E9  1D03               	skipz
   360  07EA  2FED               	goto	l562
   361  07EB                     l560:	
   362                           
   363                           ;dumalaganDa_LE6-4-TX.c: 61: x = 0x00;
   364  07EB  01F7               	clrf	main@x
   365  07EC  01F8               	clrf	main@x+1
   366  07ED                     l562:	
   367                           
   368                           ;dumalaganDa_LE6-4-TX.c: 62: x += 48;
   369  07ED  3030               	movlw	48
   370  07EE  07F7               	addwf	main@x,f
   371  07EF  1803               	skipnc
   372  07F0  0AF8               	incf	main@x+1,f
   373  07F1  3000               	movlw	0
   374  07F2  07F8               	addwf	main@x+1,f
   375  07F3                     l45:	
   376                           ;dumalaganDa_LE6-4-TX.c: 63: while(!TRMT);
   377                           
   378  07F3  1683               	bsf	3,5	;RP0=1, select bank1
   379  07F4  1303               	bcf	3,6	;RP1=0, select bank1
   380  07F5  1C98               	btfss	24,1	;volatile
   381  07F6  2FF3               	goto	l45
   382                           
   383                           ;dumalaganDa_LE6-4-TX.c: 64: TXREG = (char)x;
   384  07F7  0877               	movf	main@x,w
   385  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   386  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   387  07FA  0099               	movwf	25	;volatile
   388                           
   389                           ;dumalaganDa_LE6-4-TX.c: 65: }
   390                           ;dumalaganDa_LE6-4-TX.c: 66: }
   391  07FB  2F86               	goto	l530
   392  07FC                     __end_of_main:	
   393                           
   394                           	psect	text1
   395  074E                     __ptext1:	
   396 ;; *************** function _delay *****************
   397 ;; Defined at:
   398 ;;		line 18 in file "D:\JinBus\CpE 3201\Practical Activity #6\CpE 3201-LE6-4\dumalaganDa_LE6-4-TX.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;  ms_Count        2    0[COMMON] unsigned int 
   401 ;; Auto vars:     Size  Location     Type
   402 ;;  j               2    4[COMMON] unsigned int 
   403 ;;  i               2    2[COMMON] unsigned int 
   404 ;; Return value:  Size  Location     Type
   405 ;;		None               void
   406 ;; Registers used:
   407 ;;		wreg, status,2
   408 ;; Tracked objects:
   409 ;;		On entry : 0/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   413 ;;      Params:         2       0       0       0       0
   414 ;;      Locals:         4       0       0       0       0
   415 ;;      Temps:          0       0       0       0       0
   416 ;;      Totals:         6       0       0       0       0
   417 ;;Total ram usage:        6 bytes
   418 ;; Hardware stack levels used:    1
   419 ;; This function calls:
   420 ;;		Nothing
   421 ;; This function is called by:
   422 ;;		_main
   423 ;; This function uses a non-reentrant model
   424 ;;
   425                           
   426                           
   427                           ;psect for function _delay
   428  074E                     _delay:	
   429                           
   430                           ;dumalaganDa_LE6-4-TX.c: 19: unsigned int i,j;
   431                           ;dumalaganDa_LE6-4-TX.c: 20: for(i=0;i<ms_Count;i++) {
   432                           
   433                           ;incstack = 0
   434                           ; Regs used in _delay: [wreg+status,2]
   435  074E  01F2               	clrf	delay@i
   436  074F  01F3               	clrf	delay@i+1
   437  0750                     l23:	
   438  0750  0871               	movf	delay@ms_Count+1,w
   439  0751  0273               	subwf	delay@i+1,w
   440  0752  1D03               	skipz
   441  0753  2F56               	goto	u35
   442  0754  0870               	movf	delay@ms_Count,w
   443  0755  0272               	subwf	delay@i,w
   444  0756                     u35:	
   445  0756  1803               	btfsc	3,0
   446  0757  0008               	return
   447                           
   448                           ;dumalaganDa_LE6-4-TX.c: 21: for(j=0;j<1000;j++);
   449  0758  01F4               	clrf	delay@j
   450  0759  01F5               	clrf	delay@j+1
   451  075A  3003               	movlw	3
   452  075B  0275               	subwf	delay@j+1,w
   453  075C  30E8               	movlw	232
   454  075D  1903               	skipnz
   455  075E  0274               	subwf	delay@j,w
   456  075F  1803               	btfsc	3,0
   457  0760  2F6E               	goto	l516
   458  0761                     l514:	
   459  0761  3001               	movlw	1
   460  0762  07F4               	addwf	delay@j,f
   461  0763  1803               	skipnc
   462  0764  0AF5               	incf	delay@j+1,f
   463  0765  3000               	movlw	0
   464  0766  07F5               	addwf	delay@j+1,f
   465  0767  3003               	movlw	3
   466  0768  0275               	subwf	delay@j+1,w
   467  0769  30E8               	movlw	232
   468  076A  1903               	skipnz
   469  076B  0274               	subwf	delay@j,w
   470  076C  1C03               	skipc
   471  076D  2F61               	goto	l514
   472  076E                     l516:	
   473  076E  3001               	movlw	1
   474  076F  07F2               	addwf	delay@i,f
   475  0770  1803               	skipnc
   476  0771  0AF3               	incf	delay@i+1,f
   477  0772  3000               	movlw	0
   478  0773  07F3               	addwf	delay@i+1,f
   479  0774  2F50               	goto	l23
   480  0775                     __end_of_delay:	
   481  007E                     btemp	set	126	;btemp
   482  007E                     wtemp	set	126
   483  007E                     wtemp0	set	126
   484  0080                     wtemp1	set	128
   485  0082                     wtemp2	set	130
   486  0084                     wtemp3	set	132
   487  0086                     wtemp4	set	134
   488  0088                     wtemp5	set	136
   489  007F                     wtemp6	set	127
   490  007E                     ttemp	set	126
   491  007E                     ttemp0	set	126
   492  0081                     ttemp1	set	129
   493  0084                     ttemp2	set	132
   494  0087                     ttemp3	set	135
   495  007F                     ttemp4	set	127
   496  007E                     ltemp	set	126
   497  007E                     ltemp0	set	126
   498  0082                     ltemp1	set	130
   499  0086                     ltemp2	set	134
   500  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     298
                                              6 COMMON     4     4      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _delay                                                6     4      2     103
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Thu Mar 23 12:28:46 2023

            __CFG_CP$OFF 0000                       l23 0750                       l40 07D7  
                     l41 07DF                       l33 079F                       l34 07A7  
                     l35 07AF                       l36 07B7                       l45 07F3  
                     l37 07BF                       l38 07C7                       l39 07CF  
                     u35 0756                      l514 0761                      l530 0786  
                    l516 076E                      l560 07EB                      l562 07ED  
                    _RB4 0034             __CFG_CPD$OFF 0000                      _TX9 04C6  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     _BRGH 04C2  
                   _SPEN 00C7                     _TRMT 04C1                     _TXEN 04C5  
                   _SYNC 04C4             __CFG_WRT$OFF 0000                     _main 0775  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _SPBRG 0099  
                  _PORTB 0006                    _TXREG 0019            __CFG_PWRTE$ON 0000  
                  _delay 074E                    main@x 0077                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
                  ttemp0 007E                    ttemp1 0081                    ttemp2 0084  
                  ttemp3 0087                    ttemp4 007F                    status 0003  
                  wtemp0 007E                    wtemp1 0080                    wtemp2 0082  
                  wtemp3 0084                    wtemp4 0086                    wtemp5 0088  
                  wtemp6 007F          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0076                   ?_delay 0070                   delay@i 0072  
                 delay@j 0074  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_delay 0775                  ??_delay 0072               __pmaintext 0775  
                __ptext0 0000                  __ptext1 074E            delay@ms_Count 0070  
                main@VAL 0079     end_of_initialization 07FC      start_initialization 07FC  
              ___latbits 0002           __size_of_delay 0027            __size_of_main 0087  
