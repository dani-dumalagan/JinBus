

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Mar 07 22:42:26 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  0008                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000D                     	;# 
    36  000E                     	;# 
    37  000E                     	;# 
    38  000F                     	;# 
    39  0010                     	;# 
    40  0011                     	;# 
    41  0012                     	;# 
    42  0013                     	;# 
    43  0014                     	;# 
    44  0015                     	;# 
    45  0015                     	;# 
    46  0016                     	;# 
    47  0017                     	;# 
    48  0018                     	;# 
    49  0019                     	;# 
    50  001A                     	;# 
    51  001B                     	;# 
    52  001B                     	;# 
    53  001C                     	;# 
    54  001D                     	;# 
    55  001E                     	;# 
    56  001F                     	;# 
    57  0081                     	;# 
    58  0085                     	;# 
    59  0086                     	;# 
    60  0087                     	;# 
    61  0088                     	;# 
    62  0089                     	;# 
    63  008C                     	;# 
    64  008D                     	;# 
    65  008E                     	;# 
    66  0091                     	;# 
    67  0092                     	;# 
    68  0093                     	;# 
    69  0094                     	;# 
    70  0098                     	;# 
    71  0099                     	;# 
    72  009C                     	;# 
    73  009D                     	;# 
    74  009E                     	;# 
    75  009F                     	;# 
    76  010C                     	;# 
    77  010D                     	;# 
    78  010E                     	;# 
    79  010F                     	;# 
    80  018C                     	;# 
    81  018D                     	;# 
    82                           
    83                           	psect	idataBANK0
    84  02F7                     __pidataBANK0:	
    85                           
    86                           ;initializer for _digit
    87  02F7  3430               	retlw	48
    88  02F8  3431               	retlw	49
    89  02F9  3432               	retlw	50
    90  02FA  3433               	retlw	51
    91  02FB  3434               	retlw	52
    92  02FC  3435               	retlw	53
    93  02FD  3436               	retlw	54
    94  02FE  3437               	retlw	55
    95  02FF  3438               	retlw	56
    96  0300  3439               	retlw	57
    97  0015                     _CCPR1	set	21
    98  000E                     _TMR1	set	14
    99  0017                     _CCP1CON	set	23
   100  0006                     _PORTB	set	6
   101  0010                     _T1CON	set	16
   102  0062                     _CCP1IF	set	98
   103  005F                     _GIE	set	95
   104  005E                     _PEIE	set	94
   105  0040                     _RD0	set	64
   106  0041                     _RD1	set	65
   107  0042                     _RD2	set	66
   108  0080                     _TMR1ON	set	128
   109  0086                     _TRISB	set	134
   110  0087                     _TRISC	set	135
   111  0088                     _TRISD	set	136
   112  0462                     _CCP1IE	set	1122
   113                           
   114                           ; #config settings
   115  0000                     
   116                           	psect	cinit
   117  0015                     start_initialization:	
   118  0015                     __initialization:	
   119                           
   120                           ; Clear objects allocated to BANK0
   121  0015  01BC               	clrf	__pbssBANK0& (0+127)
   122  0016  01BD               	clrf	(__pbssBANK0+1)& (0+127)
   123                           
   124                           ; Initialize objects allocated to BANK0
   125  0017  1383               	bcf	3,7	;select IRP bank0
   126  0018  303C               	movlw	low (__pdataBANK0+10)
   127  0019  00FD               	movwf	btemp+-1
   128  001A  3002               	movlw	high __pidataBANK0
   129  001B  00FE               	movwf	btemp
   130  001C  30F7               	movlw	low __pidataBANK0
   131  001D  00FF               	movwf	btemp+1
   132  001E  3032               	movlw	low __pdataBANK0
   133  001F  0084               	movwf	4
   134  0020  120A  118A  22EA   	fcall	init_ram0
   135  0023                     end_of_initialization:	
   136                           ;End of C runtime variable initialization code
   137                           
   138  0023                     __end_of__initialization:	
   139  0023  0183               	clrf	3
   140  0024  120A  118A  2827   	ljmp	_main	;jump to C main() function
   141                           
   142                           	psect	bssBANK0
   143  003C                     __pbssBANK0:	
   144  003C                     _period_global:	
   145  003C                     	ds	2
   146                           
   147                           	psect	dataBANK0
   148  0032                     __pdataBANK0:	
   149  0032                     _digit:	
   150  0032                     	ds	10
   151                           
   152                           	psect	inittext
   153  02E6                     init_fetch0:	
   154                           ;	Called with low address in FSR and high address in W
   155                           
   156  02E6  087E               	movf	126,w
   157  02E7  008A               	movwf	10
   158  02E8  087F               	movf	127,w
   159  02E9  0082               	movwf	2
   160  02EA                     init_ram0:	
   161                           ;Called with:
   162                           ;	high address of idata address in btemp 
   163                           ;	low address of idata address in btemp+1 
   164                           ;	low address of data in FSR
   165                           ;	high address + 1 of data in btemp-1
   166                           
   167  02EA  22E6  120A  118A   	fcall	init_fetch0
   168  02ED  0080               	movwf	0
   169  02EE  0A84               	incf	4,f
   170  02EF  0804               	movf	4,w
   171  02F0  067D               	xorwf	125,w
   172  02F1  1903               	btfsc	3,2
   173  02F2  3400               	retlw	0
   174  02F3  0AFF               	incf	127,f
   175  02F4  1903               	btfsc	3,2
   176  02F5  0AFE               	incf	126,f
   177  02F6  2AEA               	goto	init_ram0
   178                           
   179                           	psect	cstackCOMMON
   180  0070                     __pcstackCOMMON:	
   181  0070                     ?_instCtrl:	
   182  0070                     ?_initLCD:	
   183                           ; 0 bytes @ 0x0
   184                           
   185  0070                     ?_dataCtrl:	
   186                           ; 0 bytes @ 0x0
   187                           
   188  0070                     ?_ISR:	
   189                           ; 0 bytes @ 0x0
   190                           
   191  0070                     ?_main:	
   192                           ; 0 bytes @ 0x0
   193                           
   194  0070                     ?___lwdiv:	
   195                           ; 0 bytes @ 0x0
   196                           
   197  0070                     ___lwdiv@divisor:	
   198                           ; 2 bytes @ 0x0
   199                           
   200                           
   201                           ; 2 bytes @ 0x0
   202  0070                     	ds	2
   203  0072                     ___lwdiv@dividend:	
   204                           
   205                           ; 2 bytes @ 0x2
   206  0072                     	ds	2
   207  0074                     ??___lwdiv:	
   208                           
   209                           ; 0 bytes @ 0x4
   210  0074                     	ds	1
   211  0075                     ___lwdiv@quotient:	
   212                           
   213                           ; 2 bytes @ 0x5
   214  0075                     	ds	2
   215  0077                     ___lwdiv@counter:	
   216                           
   217                           ; 1 bytes @ 0x7
   218  0077                     	ds	1
   219  0078                     ??_ISR:	
   220                           
   221                           ; 0 bytes @ 0x8
   222  0078                     	ds	6
   223                           
   224                           	psect	cstackBANK0
   225  0020                     __pcstackBANK0:	
   226  0020                     ISR@period:	
   227                           
   228                           ; 2 bytes @ 0x0
   229  0020                     	ds	2
   230  0022                     ?_delay:	
   231  0022                     ?___awmod:	
   232                           ; 0 bytes @ 0x2
   233                           
   234  0022                     delay@cnt:	
   235                           ; 2 bytes @ 0x2
   236                           
   237  0022                     ___awmod@divisor:	
   238                           ; 2 bytes @ 0x2
   239                           
   240                           
   241                           ; 2 bytes @ 0x2
   242  0022                     	ds	2
   243  0024                     ??_delay:	
   244  0024                     delay@i:	
   245                           ; 0 bytes @ 0x4
   246                           
   247  0024                     ___awmod@dividend:	
   248                           ; 2 bytes @ 0x4
   249                           
   250                           
   251                           ; 2 bytes @ 0x4
   252  0024                     	ds	2
   253  0026                     ??___awmod:	
   254  0026                     delay@j:	
   255                           ; 0 bytes @ 0x6
   256                           
   257                           
   258                           ; 2 bytes @ 0x6
   259  0026                     	ds	1
   260  0027                     ___awmod@counter:	
   261                           
   262                           ; 1 bytes @ 0x7
   263  0027                     	ds	1
   264  0028                     ??_instCtrl:	
   265  0028                     ??_dataCtrl:	
   266                           ; 0 bytes @ 0x8
   267                           
   268  0028                     instCtrl@INST:	
   269                           ; 0 bytes @ 0x8
   270                           
   271  0028                     dataCtrl@DATA:	
   272                           ; 1 bytes @ 0x8
   273                           
   274  0028                     ___awmod@sign:	
   275                           ; 1 bytes @ 0x8
   276                           
   277                           
   278                           ; 1 bytes @ 0x8
   279  0028                     	ds	1
   280  0029                     ??_initLCD:	
   281  0029                     ?___awdiv:	
   282                           ; 0 bytes @ 0x9
   283                           
   284  0029                     ___awdiv@divisor:	
   285                           ; 2 bytes @ 0x9
   286                           
   287                           
   288                           ; 2 bytes @ 0x9
   289  0029                     	ds	2
   290  002B                     ___awdiv@dividend:	
   291                           
   292                           ; 2 bytes @ 0xB
   293  002B                     	ds	2
   294  002D                     ??___awdiv:	
   295                           
   296                           ; 0 bytes @ 0xD
   297  002D                     	ds	1
   298  002E                     ___awdiv@counter:	
   299                           
   300                           ; 1 bytes @ 0xE
   301  002E                     	ds	1
   302  002F                     ___awdiv@sign:	
   303                           
   304                           ; 1 bytes @ 0xF
   305  002F                     	ds	1
   306  0030                     ___awdiv@quotient:	
   307                           
   308                           ; 2 bytes @ 0x10
   309  0030                     	ds	2
   310  0032                     ??_main:	
   311                           
   312                           	psect	maintext
   313  0027                     __pmaintext:	
   314                           ; 0 bytes @ 0x12
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 69 in file "D:\JinBus\CpE 3201\Practical Activity #4\CpE 3201-LE4-6\LE4-6.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;		None
   323 ;; Auto vars:     Size  Location     Type
   324 ;;		None
   325 ;; Return value:  Size  Location     Type
   326 ;;		None               void
   327 ;; Registers used:
   328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   329 ;; Tracked objects:
   330 ;;		On entry : 17F/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   334 ;;      Params:         0       0       0       0       0
   335 ;;      Locals:         0       0       0       0       0
   336 ;;      Temps:          0       0       0       0       0
   337 ;;      Totals:         0       0       0       0       0
   338 ;;Total ram usage:        0 bytes
   339 ;; Hardware stack levels required when called:    5
   340 ;; This function calls:
   341 ;;		___awdiv
   342 ;;		___awmod
   343 ;;		_dataCtrl
   344 ;;		_initLCD
   345 ;;		_instCtrl
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           
   352                           ;psect for function _main
   353  0027                     _main:	
   354                           
   355                           ;LE4-6.c: 70: TRISB = 0x00;
   356                           
   357                           ;incstack = 0
   358                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   359  0027  1683               	bsf	3,5	;RP0=1, select bank1
   360  0028  1303               	bcf	3,6	;RP1=0, select bank1
   361  0029  0186               	clrf	6	;volatile
   362                           
   363                           ;LE4-6.c: 71: TRISD = 0x00;
   364  002A  0188               	clrf	8	;volatile
   365                           
   366                           ;LE4-6.c: 74: TRISC = 0x04;
   367  002B  3004               	movlw	4
   368  002C  0087               	movwf	7	;volatile
   369                           
   370                           ;LE4-6.c: 75: T1CON = 0x30;
   371  002D  3030               	movlw	48
   372  002E  1283               	bcf	3,5	;RP0=0, select bank0
   373  002F  1303               	bcf	3,6	;RP1=0, select bank0
   374  0030  0090               	movwf	16	;volatile
   375                           
   376                           ;LE4-6.c: 76: CCP1CON = 0x05;
   377  0031  3005               	movlw	5
   378  0032  0097               	movwf	23	;volatile
   379                           
   380                           ;LE4-6.c: 77: CCP1IE = 1;
   381  0033  1683               	bsf	3,5	;RP0=1, select bank1
   382  0034  1303               	bcf	3,6	;RP1=0, select bank1
   383  0035  150C               	bsf	12,2	;volatile
   384                           
   385                           ;LE4-6.c: 78: CCP1IF = 0;
   386  0036  1283               	bcf	3,5	;RP0=0, select bank0
   387  0037  1303               	bcf	3,6	;RP1=0, select bank0
   388  0038  110C               	bcf	12,2	;volatile
   389                           
   390                           ;LE4-6.c: 79: PEIE = 1;
   391  0039  170B               	bsf	11,6	;volatile
   392                           
   393                           ;LE4-6.c: 80: GIE = 1;
   394  003A  178B               	bsf	11,7	;volatile
   395                           
   396                           ;LE4-6.c: 81: TMR1ON = 1;
   397  003B  1410               	bsf	16,0	;volatile
   398                           
   399                           ;LE4-6.c: 83: initLCD();
   400  003C  120A  118A  2298  120A  118A  	fcall	_initLCD
   401                           
   402                           ;LE4-6.c: 85: instCtrl(0x80);
   403  0041  3080               	movlw	128
   404  0042  120A  118A  22C0  120A  118A  	fcall	_instCtrl
   405                           
   406                           ;LE4-6.c: 86: dataCtrl('P');
   407  0047  3050               	movlw	80
   408  0048  120A  118A  22D3  120A  118A  	fcall	_dataCtrl
   409                           
   410                           ;LE4-6.c: 87: dataCtrl('e');
   411  004D  3065               	movlw	101
   412  004E  120A  118A  22D3  120A  118A  	fcall	_dataCtrl
   413                           
   414                           ;LE4-6.c: 88: dataCtrl('r');
   415  0053  3072               	movlw	114
   416  0054  120A  118A  22D3  120A  118A  	fcall	_dataCtrl
   417                           
   418                           ;LE4-6.c: 89: dataCtrl('i');
   419  0059  3069               	movlw	105
   420  005A  120A  118A  22D3  120A  118A  	fcall	_dataCtrl
   421                           
   422                           ;LE4-6.c: 90: dataCtrl('o');
   423  005F  306F               	movlw	111
   424  0060  120A  118A  22D3  120A  118A  	fcall	_dataCtrl
   425                           
   426                           ;LE4-6.c: 91: dataCtrl('d');
   427  0065  3064               	movlw	100
   428  0066  120A  118A  22D3  120A  118A  	fcall	_dataCtrl
   429                           
   430                           ;LE4-6.c: 92: dataCtrl(':');
   431  006B  303A               	movlw	58
   432  006C                     L1:	
   433  006C  120A  118A  22D3  120A  118A  	fcall	_dataCtrl
   434                           
   435                           ;LE4-6.c: 96: instCtrl(0xC0);
   436                           
   437                           ;LE4-6.c: 95: for(;;) {
   438  0071  30C0               	movlw	192
   439  0072  120A  118A  22C0  120A  118A  	fcall	_instCtrl
   440                           
   441                           ;LE4-6.c: 97: dataCtrl(digit[period_global/10000]);
   442  0077  3010               	movlw	16
   443  0078  1283               	bcf	3,5	;RP0=0, select bank0
   444  0079  1303               	bcf	3,6	;RP1=0, select bank0
   445  007A  00A9               	movwf	___awdiv@divisor
   446  007B  3027               	movlw	39
   447  007C  00AA               	movwf	___awdiv@divisor+1
   448  007D  083D               	movf	_period_global+1,w
   449  007E  01AC               	clrf	___awdiv@dividend+1
   450  007F  07AC               	addwf	___awdiv@dividend+1,f
   451  0080  083C               	movf	_period_global,w
   452  0081  01AB               	clrf	___awdiv@dividend
   453  0082  07AB               	addwf	___awdiv@dividend,f
   454  0083  120A  118A  2137  120A  118A  	fcall	___awdiv
   455  0088  1283               	bcf	3,5	;RP0=0, select bank0
   456  0089  1303               	bcf	3,6	;RP1=0, select bank0
   457  008A  0829               	movf	?___awdiv,w
   458  008B  3E32               	addlw	_digit& (0+255)
   459  008C  0084               	movwf	4
   460  008D  1383               	bcf	3,7	;select IRP bank0
   461  008E  0800               	movf	0,w
   462  008F  120A  118A  22D3  120A  118A  	fcall	_dataCtrl
   463                           
   464                           ;LE4-6.c: 98: dataCtrl(digit[(period_global%10000)/1000]);
   465  0094  30E8               	movlw	232
   466  0095  1283               	bcf	3,5	;RP0=0, select bank0
   467  0096  1303               	bcf	3,6	;RP1=0, select bank0
   468  0097  00A9               	movwf	___awdiv@divisor
   469  0098  3003               	movlw	3
   470  0099  00AA               	movwf	___awdiv@divisor+1
   471  009A  083D               	movf	_period_global+1,w
   472  009B  01A5               	clrf	___awmod@dividend+1
   473  009C  07A5               	addwf	___awmod@dividend+1,f
   474  009D  083C               	movf	_period_global,w
   475  009E  01A4               	clrf	___awmod@dividend
   476  009F  07A4               	addwf	___awmod@dividend,f
   477  00A0  3010               	movlw	16
   478  00A1  00A2               	movwf	___awmod@divisor
   479  00A2  3027               	movlw	39
   480  00A3  00A3               	movwf	___awmod@divisor+1
   481  00A4  120A  118A  2194  120A  118A  	fcall	___awmod
   482  00A9  1283               	bcf	3,5	;RP0=0, select bank0
   483  00AA  1303               	bcf	3,6	;RP1=0, select bank0
   484  00AB  0823               	movf	?___awmod+1,w
   485  00AC  01AC               	clrf	___awdiv@dividend+1
   486  00AD  07AC               	addwf	___awdiv@dividend+1,f
   487  00AE  0822               	movf	?___awmod,w
   488  00AF  01AB               	clrf	___awdiv@dividend
   489  00B0  07AB               	addwf	___awdiv@dividend,f
   490  00B1  120A  118A  2137  120A  118A  	fcall	___awdiv
   491  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   492  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   493  00B8  0829               	movf	?___awdiv,w
   494  00B9  3E32               	addlw	_digit& (0+255)
   495  00BA  0084               	movwf	4
   496  00BB  1383               	bcf	3,7	;select IRP bank0
   497  00BC  0800               	movf	0,w
   498  00BD  120A  118A  22D3  120A  118A  	fcall	_dataCtrl
   499                           
   500                           ;LE4-6.c: 99: dataCtrl(digit[(period_global%1000)/100]);
   501  00C2  3064               	movlw	100
   502  00C3  1283               	bcf	3,5	;RP0=0, select bank0
   503  00C4  1303               	bcf	3,6	;RP1=0, select bank0
   504  00C5  00A9               	movwf	___awdiv@divisor
   505  00C6  3000               	movlw	0
   506  00C7  00AA               	movwf	___awdiv@divisor+1
   507  00C8  083D               	movf	_period_global+1,w
   508  00C9  01A5               	clrf	___awmod@dividend+1
   509  00CA  07A5               	addwf	___awmod@dividend+1,f
   510  00CB  083C               	movf	_period_global,w
   511  00CC  01A4               	clrf	___awmod@dividend
   512  00CD  07A4               	addwf	___awmod@dividend,f
   513  00CE  30E8               	movlw	232
   514  00CF  00A2               	movwf	___awmod@divisor
   515  00D0  3003               	movlw	3
   516  00D1  00A3               	movwf	___awmod@divisor+1
   517  00D2  120A  118A  2194  120A  118A  	fcall	___awmod
   518  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   519  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   520  00D9  0823               	movf	?___awmod+1,w
   521  00DA  01AC               	clrf	___awdiv@dividend+1
   522  00DB  07AC               	addwf	___awdiv@dividend+1,f
   523  00DC  0822               	movf	?___awmod,w
   524  00DD  01AB               	clrf	___awdiv@dividend
   525  00DE  07AB               	addwf	___awdiv@dividend,f
   526  00DF  120A  118A  2137  120A  118A  	fcall	___awdiv
   527  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   528  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   529  00E6  0829               	movf	?___awdiv,w
   530  00E7  3E32               	addlw	_digit& (0+255)
   531  00E8  0084               	movwf	4
   532  00E9  1383               	bcf	3,7	;select IRP bank0
   533  00EA  0800               	movf	0,w
   534  00EB  120A  118A  22D3  120A  118A  	fcall	_dataCtrl
   535                           
   536                           ;LE4-6.c: 100: dataCtrl(digit[(period_global%100)/10]);
   537  00F0  300A               	movlw	10
   538  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   539  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   540  00F3  00A9               	movwf	___awdiv@divisor
   541  00F4  3000               	movlw	0
   542  00F5  00AA               	movwf	___awdiv@divisor+1
   543  00F6  083D               	movf	_period_global+1,w
   544  00F7  01A5               	clrf	___awmod@dividend+1
   545  00F8  07A5               	addwf	___awmod@dividend+1,f
   546  00F9  083C               	movf	_period_global,w
   547  00FA  01A4               	clrf	___awmod@dividend
   548  00FB  07A4               	addwf	___awmod@dividend,f
   549  00FC  3064               	movlw	100
   550  00FD  00A2               	movwf	___awmod@divisor
   551  00FE  3000               	movlw	0
   552  00FF  00A3               	movwf	___awmod@divisor+1
   553  0100  120A  118A  2194  120A  118A  	fcall	___awmod
   554  0105  1283               	bcf	3,5	;RP0=0, select bank0
   555  0106  1303               	bcf	3,6	;RP1=0, select bank0
   556  0107  0823               	movf	?___awmod+1,w
   557  0108  01AC               	clrf	___awdiv@dividend+1
   558  0109  07AC               	addwf	___awdiv@dividend+1,f
   559  010A  0822               	movf	?___awmod,w
   560  010B  01AB               	clrf	___awdiv@dividend
   561  010C  07AB               	addwf	___awdiv@dividend,f
   562  010D  120A  118A  2137  120A  118A  	fcall	___awdiv
   563  0112  1283               	bcf	3,5	;RP0=0, select bank0
   564  0113  1303               	bcf	3,6	;RP1=0, select bank0
   565  0114  0829               	movf	?___awdiv,w
   566  0115  3E32               	addlw	_digit& (0+255)
   567  0116  0084               	movwf	4
   568  0117  1383               	bcf	3,7	;select IRP bank0
   569  0118  0800               	movf	0,w
   570  0119  120A  118A  22D3  120A  118A  	fcall	_dataCtrl
   571                           
   572                           ;LE4-6.c: 101: dataCtrl(digit[(period_global%10)]);
   573  011E  300A               	movlw	10
   574  011F  1283               	bcf	3,5	;RP0=0, select bank0
   575  0120  1303               	bcf	3,6	;RP1=0, select bank0
   576  0121  00A2               	movwf	___awmod@divisor
   577  0122  3000               	movlw	0
   578  0123  00A3               	movwf	___awmod@divisor+1
   579  0124  083D               	movf	_period_global+1,w
   580  0125  01A5               	clrf	___awmod@dividend+1
   581  0126  07A5               	addwf	___awmod@dividend+1,f
   582  0127  083C               	movf	_period_global,w
   583  0128  01A4               	clrf	___awmod@dividend
   584  0129  07A4               	addwf	___awmod@dividend,f
   585  012A  120A  118A  2194  120A  118A  	fcall	___awmod
   586  012F  1283               	bcf	3,5	;RP0=0, select bank0
   587  0130  1303               	bcf	3,6	;RP1=0, select bank0
   588  0131  0822               	movf	?___awmod,w
   589  0132  3E32               	addlw	_digit& (0+255)
   590  0133  0084               	movwf	4
   591  0134  1383               	bcf	3,7	;select IRP bank0
   592  0135  0800               	movf	0,w
   593  0136  286C               	goto	L1
   594  0137                     __end_of_main:	
   595                           ;LE4-6.c: 102: }
   596                           
   597                           
   598                           	psect	text1
   599  0298                     __ptext1:	
   600 ;; *************** function _initLCD *****************
   601 ;; Defined at:
   602 ;;		line 33 in file "D:\JinBus\CpE 3201\Practical Activity #4\CpE 3201-LE4-6\LE4-6.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;		None
   605 ;; Auto vars:     Size  Location     Type
   606 ;;		None
   607 ;; Return value:  Size  Location     Type
   608 ;;		None               void
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0       0       0       0       0
   618 ;;      Temps:          0       0       0       0       0
   619 ;;      Totals:         0       0       0       0       0
   620 ;;Total ram usage:        0 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    4
   623 ;; This function calls:
   624 ;;		_delay
   625 ;;		_instCtrl
   626 ;; This function is called by:
   627 ;;		_main
   628 ;; This function uses a non-reentrant model
   629 ;;
   630                           
   631                           
   632                           ;psect for function _initLCD
   633  0298                     _initLCD:	
   634                           
   635                           ;LE4-6.c: 34: delay(1);
   636                           
   637                           ;incstack = 0
   638                           ; Regs used in _initLCD: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   639  0298  3001               	movlw	1
   640  0299  1283               	bcf	3,5	;RP0=0, select bank0
   641  029A  1303               	bcf	3,6	;RP1=0, select bank0
   642  029B  00A2               	movwf	delay@cnt
   643  029C  3000               	movlw	0
   644  029D  00A3               	movwf	delay@cnt+1
   645  029E  120A  118A  2263  120A  118A  	fcall	_delay
   646                           
   647                           ;LE4-6.c: 35: instCtrl(0x38);
   648  02A3  3038               	movlw	56
   649  02A4  120A  118A  22C0  120A  118A  	fcall	_instCtrl
   650                           
   651                           ;LE4-6.c: 36: instCtrl(0x08);
   652  02A9  3008               	movlw	8
   653  02AA  120A  118A  22C0  120A  118A  	fcall	_instCtrl
   654                           
   655                           ;LE4-6.c: 37: instCtrl(0x01);
   656  02AF  3001               	movlw	1
   657  02B0  120A  118A  22C0  120A  118A  	fcall	_instCtrl
   658                           
   659                           ;LE4-6.c: 38: instCtrl(0x06);
   660  02B5  3006               	movlw	6
   661  02B6  120A  118A  22C0  120A  118A  	fcall	_instCtrl
   662                           
   663                           ;LE4-6.c: 39: instCtrl(0x0E);
   664  02BB  300E               	movlw	14
   665  02BC  120A  118A  22C0   	fcall	_instCtrl
   666  02BF  0008               	return
   667  02C0                     __end_of_initLCD:	
   668                           
   669                           	psect	text2
   670  02C0                     __ptext2:	
   671 ;; *************** function _instCtrl *****************
   672 ;; Defined at:
   673 ;;		line 24 in file "D:\JinBus\CpE 3201\Practical Activity #4\CpE 3201-LE4-6\LE4-6.c"
   674 ;; Parameters:    Size  Location     Type
   675 ;;  INST            1    wreg     unsigned char 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  INST            1    8[BANK0 ] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;		None               void
   680 ;; Registers used:
   681 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         0       0       0       0       0
   688 ;;      Locals:         0       1       0       0       0
   689 ;;      Temps:          0       0       0       0       0
   690 ;;      Totals:         0       1       0       0       0
   691 ;;Total ram usage:        1 bytes
   692 ;; Hardware stack levels used:    1
   693 ;; Hardware stack levels required when called:    3
   694 ;; This function calls:
   695 ;;		_delay
   696 ;; This function is called by:
   697 ;;		_initLCD
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _instCtrl
   704  02C0                     _instCtrl:	
   705                           
   706                           ;incstack = 0
   707                           ; Regs used in _instCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   708                           ;instCtrl@INST stored from wreg
   709  02C0  1283               	bcf	3,5	;RP0=0, select bank0
   710  02C1  1303               	bcf	3,6	;RP1=0, select bank0
   711  02C2  00A8               	movwf	instCtrl@INST
   712                           
   713                           ;LE4-6.c: 25: PORTB = INST;
   714  02C3  0828               	movf	instCtrl@INST,w
   715  02C4  0086               	movwf	6	;volatile
   716                           
   717                           ;LE4-6.c: 26: RD0 = 0;
   718  02C5  1008               	bcf	8,0	;volatile
   719                           
   720                           ;LE4-6.c: 27: RD1 = 0;
   721  02C6  1088               	bcf	8,1	;volatile
   722                           
   723                           ;LE4-6.c: 28: RD2 = 1;
   724  02C7  1508               	bsf	8,2	;volatile
   725                           
   726                           ;LE4-6.c: 29: delay(1);
   727  02C8  3001               	movlw	1
   728  02C9  00A2               	movwf	delay@cnt
   729  02CA  3000               	movlw	0
   730  02CB  00A3               	movwf	delay@cnt+1
   731  02CC  120A  118A  2263   	fcall	_delay
   732                           
   733                           ;LE4-6.c: 30: RD2 = 0;
   734  02CF  1283               	bcf	3,5	;RP0=0, select bank0
   735  02D0  1303               	bcf	3,6	;RP1=0, select bank0
   736  02D1  1108               	bcf	8,2	;volatile
   737  02D2  0008               	return
   738  02D3                     __end_of_instCtrl:	
   739                           
   740                           	psect	text3
   741  02D3                     __ptext3:	
   742 ;; *************** function _dataCtrl *****************
   743 ;; Defined at:
   744 ;;		line 42 in file "D:\JinBus\CpE 3201\Practical Activity #4\CpE 3201-LE4-6\LE4-6.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  DATA            1    wreg     unsigned char 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  DATA            1    8[BANK0 ] unsigned char 
   749 ;; Return value:  Size  Location     Type
   750 ;;		None               void
   751 ;; Registers used:
   752 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         0       1       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         0       1       0       0       0
   762 ;;Total ram usage:        1 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; Hardware stack levels required when called:    3
   765 ;; This function calls:
   766 ;;		_delay
   767 ;; This function is called by:
   768 ;;		_main
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _dataCtrl
   774  02D3                     _dataCtrl:	
   775                           
   776                           ;incstack = 0
   777                           ; Regs used in _dataCtrl: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   778                           ;dataCtrl@DATA stored from wreg
   779  02D3  1283               	bcf	3,5	;RP0=0, select bank0
   780  02D4  1303               	bcf	3,6	;RP1=0, select bank0
   781  02D5  00A8               	movwf	dataCtrl@DATA
   782                           
   783                           ;LE4-6.c: 43: PORTB = DATA;
   784  02D6  0828               	movf	dataCtrl@DATA,w
   785  02D7  0086               	movwf	6	;volatile
   786                           
   787                           ;LE4-6.c: 44: RD0 = 1;
   788  02D8  1408               	bsf	8,0	;volatile
   789                           
   790                           ;LE4-6.c: 45: RD1 = 0;
   791  02D9  1088               	bcf	8,1	;volatile
   792                           
   793                           ;LE4-6.c: 46: RD2 = 1;
   794  02DA  1508               	bsf	8,2	;volatile
   795                           
   796                           ;LE4-6.c: 47: delay(1);
   797  02DB  3001               	movlw	1
   798  02DC  00A2               	movwf	delay@cnt
   799  02DD  3000               	movlw	0
   800  02DE  00A3               	movwf	delay@cnt+1
   801  02DF  120A  118A  2263   	fcall	_delay
   802                           
   803                           ;LE4-6.c: 48: RD2 = 0;
   804  02E2  1283               	bcf	3,5	;RP0=0, select bank0
   805  02E3  1303               	bcf	3,6	;RP1=0, select bank0
   806  02E4  1108               	bcf	8,2	;volatile
   807  02E5  0008               	return
   808  02E6                     __end_of_dataCtrl:	
   809                           
   810                           	psect	text4
   811  0263                     __ptext4:	
   812 ;; *************** function _delay *****************
   813 ;; Defined at:
   814 ;;		line 17 in file "D:\JinBus\CpE 3201\Practical Activity #4\CpE 3201-LE4-6\LE4-6.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  cnt             2    2[BANK0 ] int 
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  j               2    6[BANK0 ] int 
   819 ;;  i               2    4[BANK0 ] int 
   820 ;; Return value:  Size  Location     Type
   821 ;;		None               void
   822 ;; Registers used:
   823 ;;		wreg, status,2, status,0, btemp+1
   824 ;; Tracked objects:
   825 ;;		On entry : 0/0
   826 ;;		On exit  : 0/0
   827 ;;		Unchanged: 0/0
   828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   829 ;;      Params:         0       2       0       0       0
   830 ;;      Locals:         0       4       0       0       0
   831 ;;      Temps:          0       0       0       0       0
   832 ;;      Totals:         0       6       0       0       0
   833 ;;Total ram usage:        6 bytes
   834 ;; Hardware stack levels used:    1
   835 ;; Hardware stack levels required when called:    2
   836 ;; This function calls:
   837 ;;		Nothing
   838 ;; This function is called by:
   839 ;;		_instCtrl
   840 ;;		_initLCD
   841 ;;		_dataCtrl
   842 ;; This function uses a non-reentrant model
   843 ;;
   844                           
   845                           
   846                           ;psect for function _delay
   847  0263                     _delay:	
   848                           
   849                           ;LE4-6.c: 18: int i, j;
   850                           ;LE4-6.c: 19: for (i=cnt; i!=0; i--) {
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _delay: [wreg+status,2+status,0+btemp+1]
   854  0263  1283               	bcf	3,5	;RP0=0, select bank0
   855  0264  1303               	bcf	3,6	;RP1=0, select bank0
   856  0265  0823               	movf	delay@cnt+1,w
   857  0266  01A5               	clrf	delay@i+1
   858  0267  07A5               	addwf	delay@i+1,f
   859  0268  0822               	movf	delay@cnt,w
   860  0269  01A4               	clrf	delay@i
   861  026A  07A4               	addwf	delay@i,f
   862  026B                     L2:	
   863  026B  0825               	movf	delay@i+1,w
   864  026C  0424               	iorwf	delay@i,w
   865  026D  1903               	btfsc	3,2
   866  026E  0008               	return
   867                           
   868                           ;LE4-6.c: 20: for (j=0; j<1000; j++);
   869  026F  01A6               	clrf	delay@j
   870  0270  01A7               	clrf	delay@j+1
   871  0271  0827               	movf	delay@j+1,w
   872  0272  3A80               	xorlw	128
   873  0273  00FF               	movwf	127
   874  0274  3083               	movlw	131
   875  0275  027F               	subwf	127,w
   876  0276  1D03               	skipz
   877  0277  2A7A               	goto	u335
   878  0278  30E8               	movlw	232
   879  0279  0226               	subwf	delay@j,w
   880  027A                     u335:	
   881  027A  1803               	btfsc	3,0
   882  027B  2A8F               	goto	l754
   883  027C                     l750:	
   884  027C  3001               	movlw	1
   885  027D  1283               	bcf	3,5	;RP0=0, select bank0
   886  027E  1303               	bcf	3,6	;RP1=0, select bank0
   887  027F  07A6               	addwf	delay@j,f
   888  0280  1803               	skipnc
   889  0281  0AA7               	incf	delay@j+1,f
   890  0282  3000               	movlw	0
   891  0283  07A7               	addwf	delay@j+1,f
   892  0284  0827               	movf	delay@j+1,w
   893  0285  3A80               	xorlw	128
   894  0286  00FF               	movwf	127
   895  0287  3083               	movlw	131
   896  0288  027F               	subwf	127,w
   897  0289  1D03               	skipz
   898  028A  2A8D               	goto	u345
   899  028B  30E8               	movlw	232
   900  028C  0226               	subwf	delay@j,w
   901  028D                     u345:	
   902  028D  1C03               	skipc
   903  028E  2A7C               	goto	l750
   904  028F                     l754:	
   905  028F  30FF               	movlw	255
   906  0290  1283               	bcf	3,5	;RP0=0, select bank0
   907  0291  1303               	bcf	3,6	;RP1=0, select bank0
   908  0292  07A4               	addwf	delay@i,f
   909  0293  1803               	skipnc
   910  0294  0AA5               	incf	delay@i+1,f
   911  0295  30FF               	movlw	255
   912  0296  07A5               	addwf	delay@i+1,f
   913  0297  2A6B               	goto	L2
   914  0298                     __end_of_delay:	
   915                           
   916                           	psect	text5
   917  0194                     __ptext5:	
   918 ;; *************** function ___awmod *****************
   919 ;; Defined at:
   920 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
   921 ;; Parameters:    Size  Location     Type
   922 ;;  divisor         2    2[BANK0 ] int 
   923 ;;  dividend        2    4[BANK0 ] int 
   924 ;; Auto vars:     Size  Location     Type
   925 ;;  sign            1    8[BANK0 ] unsigned char 
   926 ;;  counter         1    7[BANK0 ] unsigned char 
   927 ;; Return value:  Size  Location     Type
   928 ;;                  2    2[BANK0 ] int 
   929 ;; Registers used:
   930 ;;		wreg, status,2, status,0
   931 ;; Tracked objects:
   932 ;;		On entry : 0/0
   933 ;;		On exit  : 0/0
   934 ;;		Unchanged: 0/0
   935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   936 ;;      Params:         0       4       0       0       0
   937 ;;      Locals:         0       2       0       0       0
   938 ;;      Temps:          0       1       0       0       0
   939 ;;      Totals:         0       7       0       0       0
   940 ;;Total ram usage:        7 bytes
   941 ;; Hardware stack levels used:    1
   942 ;; Hardware stack levels required when called:    2
   943 ;; This function calls:
   944 ;;		Nothing
   945 ;; This function is called by:
   946 ;;		_main
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           
   951                           ;psect for function ___awmod
   952  0194                     ___awmod:	
   953                           
   954                           ;incstack = 0
   955                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   956  0194  1283               	bcf	3,5	;RP0=0, select bank0
   957  0195  1303               	bcf	3,6	;RP1=0, select bank0
   958  0196  01A8               	clrf	___awmod@sign
   959  0197  1FA5               	btfss	___awmod@dividend+1,7
   960  0198  29A0               	goto	l836
   961  0199  09A4               	comf	___awmod@dividend,f
   962  019A  09A5               	comf	___awmod@dividend+1,f
   963  019B  0AA4               	incf	___awmod@dividend,f
   964  019C  1903               	skipnz
   965  019D  0AA5               	incf	___awmod@dividend+1,f
   966  019E  01A8               	clrf	___awmod@sign
   967  019F  0AA8               	incf	___awmod@sign,f
   968  01A0                     l836:	
   969  01A0  1FA3               	btfss	___awmod@divisor+1,7
   970  01A1  29A7               	goto	l840
   971  01A2  09A2               	comf	___awmod@divisor,f
   972  01A3  09A3               	comf	___awmod@divisor+1,f
   973  01A4  0AA2               	incf	___awmod@divisor,f
   974  01A5  1903               	skipnz
   975  01A6  0AA3               	incf	___awmod@divisor+1,f
   976  01A7                     l840:	
   977  01A7  0823               	movf	___awmod@divisor+1,w
   978  01A8  0422               	iorwf	___awmod@divisor,w
   979  01A9  1903               	skipnz
   980  01AA  29D4               	goto	l858
   981  01AB  01A7               	clrf	___awmod@counter
   982  01AC  0AA7               	incf	___awmod@counter,f
   983  01AD                     l848:	
   984  01AD  1BA3               	btfsc	___awmod@divisor+1,7
   985  01AE  29BB               	goto	l850
   986  01AF  3001               	movlw	1
   987  01B0                     u495:	
   988  01B0  1003               	clrc
   989  01B1  0DA2               	rlf	___awmod@divisor,f
   990  01B2  0DA3               	rlf	___awmod@divisor+1,f
   991  01B3  3EFF               	addlw	-1
   992  01B4  1D03               	skipz
   993  01B5  29B0               	goto	u495
   994  01B6  3001               	movlw	1
   995  01B7  00A6               	movwf	??___awmod
   996  01B8  0826               	movf	??___awmod,w
   997  01B9  07A7               	addwf	___awmod@counter,f
   998  01BA  29AD               	goto	l848
   999  01BB                     l850:	
  1000  01BB  0823               	movf	___awmod@divisor+1,w
  1001  01BC  0225               	subwf	___awmod@dividend+1,w
  1002  01BD  1D03               	skipz
  1003  01BE  29C1               	goto	u515
  1004  01BF  0822               	movf	___awmod@divisor,w
  1005  01C0  0224               	subwf	___awmod@dividend,w
  1006  01C1                     u515:	
  1007  01C1  1C03               	skipc
  1008  01C2  29C9               	goto	l854
  1009  01C3  0822               	movf	___awmod@divisor,w
  1010  01C4  02A4               	subwf	___awmod@dividend,f
  1011  01C5  0823               	movf	___awmod@divisor+1,w
  1012  01C6  1C03               	skipc
  1013  01C7  03A5               	decf	___awmod@dividend+1,f
  1014  01C8  02A5               	subwf	___awmod@dividend+1,f
  1015  01C9                     l854:	
  1016  01C9  3001               	movlw	1
  1017  01CA                     u525:	
  1018  01CA  1003               	clrc
  1019  01CB  0CA3               	rrf	___awmod@divisor+1,f
  1020  01CC  0CA2               	rrf	___awmod@divisor,f
  1021  01CD  3EFF               	addlw	-1
  1022  01CE  1D03               	skipz
  1023  01CF  29CA               	goto	u525
  1024  01D0  3001               	movlw	1
  1025  01D1  02A7               	subwf	___awmod@counter,f
  1026  01D2  1D03               	btfss	3,2
  1027  01D3  29BB               	goto	l850
  1028  01D4                     l858:	
  1029  01D4  0828               	movf	___awmod@sign,w
  1030  01D5  1903               	btfsc	3,2
  1031  01D6  29DC               	goto	l862
  1032  01D7  09A4               	comf	___awmod@dividend,f
  1033  01D8  09A5               	comf	___awmod@dividend+1,f
  1034  01D9  0AA4               	incf	___awmod@dividend,f
  1035  01DA  1903               	skipnz
  1036  01DB  0AA5               	incf	___awmod@dividend+1,f
  1037  01DC                     l862:	
  1038  01DC  0825               	movf	___awmod@dividend+1,w
  1039  01DD  01A3               	clrf	?___awmod+1
  1040  01DE  07A3               	addwf	?___awmod+1,f
  1041  01DF  0824               	movf	___awmod@dividend,w
  1042  01E0  01A2               	clrf	?___awmod
  1043  01E1  07A2               	addwf	?___awmod,f
  1044  01E2  0008               	return
  1045  01E3                     __end_of___awmod:	
  1046                           
  1047                           	psect	text6
  1048  0137                     __ptext6:	
  1049 ;; *************** function ___awdiv *****************
  1050 ;; Defined at:
  1051 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  divisor         2    9[BANK0 ] int 
  1054 ;;  dividend        2   11[BANK0 ] int 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  quotient        2   16[BANK0 ] int 
  1057 ;;  sign            1   15[BANK0 ] unsigned char 
  1058 ;;  counter         1   14[BANK0 ] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  2    9[BANK0 ] int 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1068 ;;      Params:         0       4       0       0       0
  1069 ;;      Locals:         0       4       0       0       0
  1070 ;;      Temps:          0       1       0       0       0
  1071 ;;      Totals:         0       9       0       0       0
  1072 ;;Total ram usage:        9 bytes
  1073 ;; Hardware stack levels used:    1
  1074 ;; Hardware stack levels required when called:    2
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function ___awdiv
  1084  0137                     ___awdiv:	
  1085                           
  1086                           ;incstack = 0
  1087                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1088  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0139  01AF               	clrf	___awdiv@sign
  1091  013A  1FAA               	btfss	___awdiv@divisor+1,7
  1092  013B  2943               	goto	l792
  1093  013C  09A9               	comf	___awdiv@divisor,f
  1094  013D  09AA               	comf	___awdiv@divisor+1,f
  1095  013E  0AA9               	incf	___awdiv@divisor,f
  1096  013F  1903               	skipnz
  1097  0140  0AAA               	incf	___awdiv@divisor+1,f
  1098  0141  01AF               	clrf	___awdiv@sign
  1099  0142  0AAF               	incf	___awdiv@sign,f
  1100  0143                     l792:	
  1101  0143  1FAC               	btfss	___awdiv@dividend+1,7
  1102  0144  294E               	goto	l798
  1103  0145  09AB               	comf	___awdiv@dividend,f
  1104  0146  09AC               	comf	___awdiv@dividend+1,f
  1105  0147  0AAB               	incf	___awdiv@dividend,f
  1106  0148  1903               	skipnz
  1107  0149  0AAC               	incf	___awdiv@dividend+1,f
  1108  014A  3001               	movlw	1
  1109  014B  00AD               	movwf	??___awdiv
  1110  014C  082D               	movf	??___awdiv,w
  1111  014D  06AF               	xorwf	___awdiv@sign,f
  1112  014E                     l798:	
  1113  014E  01B0               	clrf	___awdiv@quotient
  1114  014F  01B1               	clrf	___awdiv@quotient+1
  1115  0150  082A               	movf	___awdiv@divisor+1,w
  1116  0151  0429               	iorwf	___awdiv@divisor,w
  1117  0152  1903               	skipnz
  1118  0153  2985               	goto	l820
  1119  0154  01AE               	clrf	___awdiv@counter
  1120  0155  0AAE               	incf	___awdiv@counter,f
  1121  0156                     l808:	
  1122  0156  1BAA               	btfsc	___awdiv@divisor+1,7
  1123  0157  2964               	goto	l810
  1124  0158  3001               	movlw	1
  1125  0159                     u395:	
  1126  0159  1003               	clrc
  1127  015A  0DA9               	rlf	___awdiv@divisor,f
  1128  015B  0DAA               	rlf	___awdiv@divisor+1,f
  1129  015C  3EFF               	addlw	-1
  1130  015D  1D03               	skipz
  1131  015E  2959               	goto	u395
  1132  015F  3001               	movlw	1
  1133  0160  00AD               	movwf	??___awdiv
  1134  0161  082D               	movf	??___awdiv,w
  1135  0162  07AE               	addwf	___awdiv@counter,f
  1136  0163  2956               	goto	l808
  1137  0164                     l810:	
  1138  0164  3001               	movlw	1
  1139  0165                     u415:	
  1140  0165  1003               	clrc
  1141  0166  0DB0               	rlf	___awdiv@quotient,f
  1142  0167  0DB1               	rlf	___awdiv@quotient+1,f
  1143  0168  3EFF               	addlw	-1
  1144  0169  1D03               	skipz
  1145  016A  2965               	goto	u415
  1146  016B  082A               	movf	___awdiv@divisor+1,w
  1147  016C  022C               	subwf	___awdiv@dividend+1,w
  1148  016D  1D03               	skipz
  1149  016E  2971               	goto	u425
  1150  016F  0829               	movf	___awdiv@divisor,w
  1151  0170  022B               	subwf	___awdiv@dividend,w
  1152  0171                     u425:	
  1153  0171  1C03               	skipc
  1154  0172  297A               	goto	l816
  1155  0173  0829               	movf	___awdiv@divisor,w
  1156  0174  02AB               	subwf	___awdiv@dividend,f
  1157  0175  082A               	movf	___awdiv@divisor+1,w
  1158  0176  1C03               	skipc
  1159  0177  03AC               	decf	___awdiv@dividend+1,f
  1160  0178  02AC               	subwf	___awdiv@dividend+1,f
  1161  0179  1430               	bsf	___awdiv@quotient,0
  1162  017A                     l816:	
  1163  017A  3001               	movlw	1
  1164  017B                     u435:	
  1165  017B  1003               	clrc
  1166  017C  0CAA               	rrf	___awdiv@divisor+1,f
  1167  017D  0CA9               	rrf	___awdiv@divisor,f
  1168  017E  3EFF               	addlw	-1
  1169  017F  1D03               	skipz
  1170  0180  297B               	goto	u435
  1171  0181  3001               	movlw	1
  1172  0182  02AE               	subwf	___awdiv@counter,f
  1173  0183  1D03               	btfss	3,2
  1174  0184  2964               	goto	l810
  1175  0185                     l820:	
  1176  0185  082F               	movf	___awdiv@sign,w
  1177  0186  1903               	btfsc	3,2
  1178  0187  298D               	goto	l824
  1179  0188  09B0               	comf	___awdiv@quotient,f
  1180  0189  09B1               	comf	___awdiv@quotient+1,f
  1181  018A  0AB0               	incf	___awdiv@quotient,f
  1182  018B  1903               	skipnz
  1183  018C  0AB1               	incf	___awdiv@quotient+1,f
  1184  018D                     l824:	
  1185  018D  0831               	movf	___awdiv@quotient+1,w
  1186  018E  01AA               	clrf	?___awdiv+1
  1187  018F  07AA               	addwf	?___awdiv+1,f
  1188  0190  0830               	movf	___awdiv@quotient,w
  1189  0191  01A9               	clrf	?___awdiv
  1190  0192  07A9               	addwf	?___awdiv,f
  1191  0193  0008               	return
  1192  0194                     __end_of___awdiv:	
  1193                           
  1194                           	psect	text7
  1195  01E3                     __ptext7:	
  1196 ;; *************** function _ISR *****************
  1197 ;; Defined at:
  1198 ;;		line 51 in file "D:\JinBus\CpE 3201\Practical Activity #4\CpE 3201-LE4-6\LE4-6.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;  period          2    0[BANK0 ] int 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;		None               void
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, pclath, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       2       0       0       0
  1214 ;;      Temps:          6       0       0       0       0
  1215 ;;      Totals:         6       2       0       0       0
  1216 ;;Total ram usage:        8 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    1
  1219 ;; This function calls:
  1220 ;;		___lwdiv
  1221 ;; This function is called by:
  1222 ;;		Interrupt level 1
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           
  1227                           ;psect for function _ISR
  1228  01E3                     _ISR:	
  1229                           
  1230                           ;LE4-6.c: 52: int period = 0;
  1231  01E3  01A0               	clrf	ISR@period
  1232  01E4  01A1               	clrf	ISR@period+1
  1233                           
  1234                           ;LE4-6.c: 54: GIE = 0;
  1235  01E5  138B               	bcf	11,7	;volatile
  1236                           
  1237                           ;LE4-6.c: 57: if(CCP1IF==1) {
  1238  01E6  1D0C               	btfss	12,2	;volatile
  1239  01E7  2A19               	goto	i1l908
  1240                           
  1241                           ;LE4-6.c: 58: CCP1IF = 0;
  1242  01E8  110C               	bcf	12,2	;volatile
  1243                           
  1244                           ;LE4-6.c: 59: TMR1 = 0;
  1245  01E9  018E               	clrf	14	;volatile
  1246  01EA  018F               	clrf	15	;volatile
  1247                           
  1248                           ;LE4-6.c: 60: period = CCPR1/1000;
  1249  01EB  30E8               	movlw	232
  1250  01EC  00F0               	movwf	___lwdiv@divisor
  1251  01ED  3003               	movlw	3
  1252  01EE  00F1               	movwf	___lwdiv@divisor+1
  1253  01EF  0816               	movf	22,w	;volatile
  1254  01F0  01F3               	clrf	___lwdiv@dividend+1
  1255  01F1  07F3               	addwf	___lwdiv@dividend+1,f
  1256  01F2  0815               	movf	21,w	;volatile
  1257  01F3  01F2               	clrf	___lwdiv@dividend
  1258  01F4  07F2               	addwf	___lwdiv@dividend,f
  1259  01F5  120A  118A  2225  120A  118A  	fcall	___lwdiv
  1260  01FA  0871               	movf	?___lwdiv+1,w
  1261  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1262  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1263  01FD  01A1               	clrf	ISR@period+1
  1264  01FE  07A1               	addwf	ISR@period+1,f
  1265  01FF  0870               	movf	?___lwdiv,w
  1266  0200  01A0               	clrf	ISR@period
  1267  0201  07A0               	addwf	ISR@period,f
  1268                           
  1269                           ;LE4-6.c: 62: period = period*8;
  1270  0202  0821               	movf	ISR@period+1,w
  1271  0203  00F9               	movwf	??_ISR+1
  1272  0204  0820               	movf	ISR@period,w
  1273  0205  00F8               	movwf	??_ISR
  1274  0206  1003               	clrc
  1275  0207  0DF8               	rlf	??_ISR,f
  1276  0208  0DF9               	rlf	??_ISR+1,f
  1277  0209  1003               	clrc
  1278  020A  0DF8               	rlf	??_ISR,f
  1279  020B  0DF9               	rlf	??_ISR+1,f
  1280  020C  1003               	clrc
  1281  020D  0DF8               	rlf	??_ISR,f
  1282  020E  0DF9               	rlf	??_ISR+1,f
  1283  020F  0878               	movf	??_ISR,w
  1284  0210  00A0               	movwf	ISR@period
  1285  0211  0879               	movf	??_ISR+1,w
  1286  0212  00A1               	movwf	ISR@period+1
  1287                           
  1288                           ;LE4-6.c: 63: period_global = period;
  1289  0213  0821               	movf	ISR@period+1,w
  1290  0214  01BD               	clrf	_period_global+1
  1291  0215  07BD               	addwf	_period_global+1,f
  1292  0216  0820               	movf	ISR@period,w
  1293  0217  01BC               	clrf	_period_global
  1294  0218  07BC               	addwf	_period_global,f
  1295  0219                     i1l908:	
  1296                           
  1297                           ;LE4-6.c: 64: }
  1298                           ;LE4-6.c: 66: GIE = 1;
  1299  0219  178B               	bsf	11,7	;volatile
  1300  021A  087D               	movf	??_ISR+5,w
  1301  021B  00FF               	movwf	127
  1302  021C  087C               	movf	??_ISR+4,w
  1303  021D  008A               	movwf	10
  1304  021E  087B               	movf	??_ISR+3,w
  1305  021F  0084               	movwf	4
  1306  0220  0E7A               	swapf	(??_ISR+2)^(0+-128),w
  1307  0221  0083               	movwf	3
  1308  0222  0EFE               	swapf	126,f
  1309  0223  0E7E               	swapf	126,w
  1310  0224  0009               	retfie
  1311  0225                     __end_of_ISR:	
  1312                           
  1313                           	psect	intentry
  1314  0004                     __pintentry:	
  1315                           ;incstack = 0
  1316                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  1317                           
  1318  0004                     interrupt_function:	
  1319  007E                     saved_w	set	btemp
  1320  0004  00FE               	movwf	btemp
  1321  0005  0E03               	swapf	3,w
  1322  0006  00FA               	movwf	??_ISR+2
  1323  0007  0804               	movf	4,w
  1324  0008  00FB               	movwf	??_ISR+3
  1325  0009  080A               	movf	10,w
  1326  000A  00FC               	movwf	??_ISR+4
  1327  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1328  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1329  000D  087F               	movf	btemp+1,w
  1330  000E  00FD               	movwf	??_ISR+5
  1331  000F  120A  118A  29E3   	ljmp	_ISR
  1332                           
  1333                           	psect	text8
  1334  0225                     __ptext8:	
  1335 ;; *************** function ___lwdiv *****************
  1336 ;; Defined at:
  1337 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  1338 ;; Parameters:    Size  Location     Type
  1339 ;;  divisor         2    0[COMMON] unsigned int 
  1340 ;;  dividend        2    2[COMMON] unsigned int 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  quotient        2    5[COMMON] unsigned int 
  1343 ;;  counter         1    7[COMMON] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  2    0[COMMON] unsigned int 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         4       0       0       0       0
  1354 ;;      Locals:         3       0       0       0       0
  1355 ;;      Temps:          1       0       0       0       0
  1356 ;;      Totals:         8       0       0       0       0
  1357 ;;Total ram usage:        8 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_ISR
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function ___lwdiv
  1368  0225                     ___lwdiv:	
  1369                           
  1370                           ;incstack = 0
  1371                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1372  0225  01F5               	clrf	___lwdiv@quotient
  1373  0226  01F6               	clrf	___lwdiv@quotient+1
  1374  0227  0871               	movf	___lwdiv@divisor+1,w
  1375  0228  0470               	iorwf	___lwdiv@divisor,w
  1376  0229  1903               	skipnz
  1377  022A  2A5C               	goto	i1l888
  1378  022B  01F7               	clrf	___lwdiv@counter
  1379  022C  0AF7               	incf	___lwdiv@counter,f
  1380  022D                     i1l876:	
  1381  022D  1BF1               	btfsc	___lwdiv@divisor+1,7
  1382  022E  2A3B               	goto	i1l878
  1383  022F  3001               	movlw	1
  1384  0230                     u56_25:	
  1385  0230  1003               	clrc
  1386  0231  0DF0               	rlf	___lwdiv@divisor,f
  1387  0232  0DF1               	rlf	___lwdiv@divisor+1,f
  1388  0233  3EFF               	addlw	-1
  1389  0234  1D03               	skipz
  1390  0235  2A30               	goto	u56_25
  1391  0236  3001               	movlw	1
  1392  0237  00F4               	movwf	??___lwdiv
  1393  0238  0874               	movf	??___lwdiv,w
  1394  0239  07F7               	addwf	___lwdiv@counter,f
  1395  023A  2A2D               	goto	i1l876
  1396  023B                     i1l878:	
  1397  023B  3001               	movlw	1
  1398  023C                     u58_25:	
  1399  023C  1003               	clrc
  1400  023D  0DF5               	rlf	___lwdiv@quotient,f
  1401  023E  0DF6               	rlf	___lwdiv@quotient+1,f
  1402  023F  3EFF               	addlw	-1
  1403  0240  1D03               	skipz
  1404  0241  2A3C               	goto	u58_25
  1405  0242  0871               	movf	___lwdiv@divisor+1,w
  1406  0243  0273               	subwf	___lwdiv@dividend+1,w
  1407  0244  1D03               	skipz
  1408  0245  2A48               	goto	u59_25
  1409  0246  0870               	movf	___lwdiv@divisor,w
  1410  0247  0272               	subwf	___lwdiv@dividend,w
  1411  0248                     u59_25:	
  1412  0248  1C03               	skipc
  1413  0249  2A51               	goto	i1l884
  1414  024A  0870               	movf	___lwdiv@divisor,w
  1415  024B  02F2               	subwf	___lwdiv@dividend,f
  1416  024C  0871               	movf	___lwdiv@divisor+1,w
  1417  024D  1C03               	skipc
  1418  024E  03F3               	decf	___lwdiv@dividend+1,f
  1419  024F  02F3               	subwf	___lwdiv@dividend+1,f
  1420  0250  1475               	bsf	___lwdiv@quotient,0
  1421  0251                     i1l884:	
  1422  0251  3001               	movlw	1
  1423  0252                     u60_25:	
  1424  0252  1003               	clrc
  1425  0253  0CF1               	rrf	___lwdiv@divisor+1,f
  1426  0254  0CF0               	rrf	___lwdiv@divisor,f
  1427  0255  3EFF               	addlw	-1
  1428  0256  1D03               	skipz
  1429  0257  2A52               	goto	u60_25
  1430  0258  3001               	movlw	1
  1431  0259  02F7               	subwf	___lwdiv@counter,f
  1432  025A  1D03               	btfss	3,2
  1433  025B  2A3B               	goto	i1l878
  1434  025C                     i1l888:	
  1435  025C  0876               	movf	___lwdiv@quotient+1,w
  1436  025D  01F1               	clrf	?___lwdiv+1
  1437  025E  07F1               	addwf	?___lwdiv+1,f
  1438  025F  0875               	movf	___lwdiv@quotient,w
  1439  0260  01F0               	clrf	?___lwdiv
  1440  0261  07F0               	addwf	?___lwdiv,f
  1441  0262  0008               	return
  1442  0263                     __end_of___lwdiv:	
  1443  007E                     btemp	set	126	;btemp
  1444  007E                     wtemp	set	126
  1445  007E                     wtemp0	set	126
  1446  0080                     wtemp1	set	128
  1447  0082                     wtemp2	set	130
  1448  0084                     wtemp3	set	132
  1449  0086                     wtemp4	set	134
  1450  0088                     wtemp5	set	136
  1451  007F                     wtemp6	set	127
  1452  007E                     ttemp	set	126
  1453  007E                     ttemp0	set	126
  1454  0081                     ttemp1	set	129
  1455  0084                     ttemp2	set	132
  1456  0087                     ttemp3	set	135
  1457  007F                     ttemp4	set	127
  1458  007E                     ltemp	set	126
  1459  007E                     ltemp0	set	126
  1460  0082                     ltemp1	set	130
  1461  0086                     ltemp2	set	134
  1462  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___lwdiv

Critical Paths under _main in BANK0

    _main->___awdiv
    _initLCD->_instCtrl
    _instCtrl->_delay
    _dataCtrl->_delay
    ___awdiv->___awmod

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2602
                            ___awdiv
                            ___awmod
                           _dataCtrl
                            _initLCD
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     568
                              _delay
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _instCtrl                                             1     1      0     295
                                              8 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (1) _dataCtrl                                             1     1      0     295
                                              8 BANK0      1     1      0
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                6     4      2     273
                                              2 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     720
                                              2 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     724
                                              9 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  8     8      0     315
                                              8 COMMON     6     6      0
                                              0 BANK0      2     2      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     268
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
   ___awmod
   _dataCtrl
     _delay
   _initLCD
     _delay
     _instCtrl
       _delay
   _instCtrl
     _delay

 _ISR (ROOT)
   ___lwdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2C      12        0.0%
ABS                  0      0      2C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Mar 07 22:42:26 2023

                      pc 0002              __CFG_CP$OFF 0000             ___awdiv@sign 002F  
                     fsr 0004                      l810 0164                      l820 0185  
                    l750 027C                      l824 018D                      l816 017A  
                    l808 0156                      l840 01A7                      l850 01BB  
                    l754 028F                      l836 01A0                      l862 01DC  
                    l854 01C9                      l792 0143                      l848 01AD  
                    l858 01D4                      l798 014E                      _GIE 005F  
                    _RD0 0040                      _RD1 0041                      _RD2 0042  
                    u415 0165                      u335 027A                      u425 0171  
                    u345 028D             __CFG_CPD$OFF 0000                      u435 017B  
                    u515 01C1                      _ISR 01E3                      u525 01CA  
                    u395 0159                      u495 01B0                      fsr0 0004  
                    indf 0000             ___awmod@sign 0028             __CFG_FOSC$XT 0000  
           __CFG_LVP$OFF 0000                     ?_ISR 0070                     _PEIE 005E  
                   _TMR1 000E             __CFG_WRT$OFF 0000                     _main 0027  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0012                     ttemp 007E                     wtemp 007E  
                  ??_ISR 0078                    ?_main 0070          __end_of___awdiv 0194  
                  _CCPR1 0015            __CFG_WDTE$OFF 0000          __end_of___awmod 01E3  
        ___awdiv@divisor 0029                    _T1CON 0010          __end_of___lwdiv 0263  
                  i1l908 0219                    i1l884 0251                    i1l876 022D  
                  i1l878 023B                    i1l888 025C          ___awdiv@counter 002E  
                  _PORTB 0006                    u60_25 0252                    u56_25 0230  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  u58_25 023C                    u59_25 0248            __CFG_PWRTE$ON 0000  
        __end_of_initLCD 02C0                    _delay 0263                    _digit 0032  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0015             __end_of_main 0137                   ??_main 0032  
                 ?_delay 0022                   _CCP1IE 0462                   _CCP1IF 0062  
       ___awdiv@dividend 002B                   _TMR1ON 0080         __end_of_dataCtrl 02E6  
              ??___awdiv 002D                ??___awmod 0026                ??___lwdiv 0074  
                 delay@i 0024                   delay@j 0026         ___awdiv@quotient 0030  
        ___awmod@divisor 0022         __end_of_instCtrl 02D3          ___awmod@counter 0027  
              ??_initLCD 0029                   saved_w 007E  __end_of__initialization 0023  
         __pcstackCOMMON 0070             __pidataBANK0 02F7            __end_of_delay 0298  
                ??_delay 0024               __pbssBANK0 003C                ISR@period 0020  
             __pmaintext 0027               __pintentry 0004                  _CCP1CON 0017  
              ?_dataCtrl 0070                ?_instCtrl 0070                  ___awdiv 0137  
                ___awmod 0194                  ___lwdiv 0225                  __ptext1 0298  
                __ptext2 02C0                  __ptext3 02D3                  __ptext4 0263  
                __ptext5 0194                  __ptext6 0137                  __ptext7 01E3  
                __ptext8 0225                  _initLCD 0298             __size_of_ISR 0042  
             ??_dataCtrl 0028         ___awmod@dividend 0024     end_of_initialization 0023  
             ??_instCtrl 0028             instCtrl@INST 0028      start_initialization 0015  
            __end_of_ISR 0225            _period_global 003C             dataCtrl@DATA 0028  
             init_fetch0 02E6              __pdataBANK0 0032                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_dataCtrl 0013         ___lwdiv@dividend 0072  
      __size_of_instCtrl 0013                 ?___awdiv 0029                 ?___awmod 0022  
               ?___lwdiv 0070                 ?_initLCD 0070         ___lwdiv@quotient 0075  
         __size_of_delay 0035        interrupt_function 0004         __size_of___awdiv 005D  
       __size_of___awmod 004F         __size_of___lwdiv 003E                 _dataCtrl 02D3  
       __size_of_initLCD 0028          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
          __size_of_main 0110                 _instCtrl 02C0                 delay@cnt 0022  
               init_ram0 02EA                 intlevel1 0000  
