

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Wed May 10 18:21:22 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	dabs	1,0x7E,2
    13  0000                     	;# 
    14  0001                     	;# 
    15  0002                     	;# 
    16  0003                     	;# 
    17  0004                     	;# 
    18  0005                     	;# 
    19  0006                     	;# 
    20  0007                     	;# 
    21  0008                     	;# 
    22  0009                     	;# 
    23  000A                     	;# 
    24  000B                     	;# 
    25  000C                     	;# 
    26  000D                     	;# 
    27  000E                     	;# 
    28  000E                     	;# 
    29  000F                     	;# 
    30  0010                     	;# 
    31  0011                     	;# 
    32  0012                     	;# 
    33  0013                     	;# 
    34  0014                     	;# 
    35  0015                     	;# 
    36  0015                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001B                     	;# 
    44  001C                     	;# 
    45  001D                     	;# 
    46  001E                     	;# 
    47  001F                     	;# 
    48  0081                     	;# 
    49  0085                     	;# 
    50  0086                     	;# 
    51  0087                     	;# 
    52  0088                     	;# 
    53  0089                     	;# 
    54  008C                     	;# 
    55  008D                     	;# 
    56  008E                     	;# 
    57  0091                     	;# 
    58  0092                     	;# 
    59  0093                     	;# 
    60  0094                     	;# 
    61  0098                     	;# 
    62  0099                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  010F                     	;# 
    71  018C                     	;# 
    72  018D                     	;# 
    73  0006                     _PORTB	set	6
    74  0008                     _PORTD	set	8
    75  0010                     _T1CON	set	16
    76  000F                     _TMR1H	set	15
    77  000E                     _TMR1L	set	14
    78  005F                     _GIE	set	95
    79  0059                     _INTF	set	89
    80  005E                     _PEIE	set	94
    81  005D                     _T0IE	set	93
    82  005A                     _T0IF	set	90
    83  0060                     _TMR1IF	set	96
    84  0080                     _TMR1ON	set	128
    85  009F                     _ADCON1	set	159
    86  0081                     _OPTION_REG	set	129
    87  0085                     _TRISA	set	133
    88  0088                     _TRISD	set	136
    89                           
    90                           	psect	text0
    91  0000                     __ptext0:	
    92                           ; #config settings
    93                           
    94                           
    95                           ;psect for function _delay_102ms
    96  0000                     
    97                           	psect	cinit
    98  0015                     start_initialization:	
    99  0015                     __initialization:	
   100                           
   101                           ; Clear objects allocated to COMMON
   102  0015  01F4               	clrf	__pbssCOMMON& (0+127)
   103  0016  01F5               	clrf	(__pbssCOMMON+1)& (0+127)
   104  0017                     end_of_initialization:	
   105                           ;End of C runtime variable initialization code
   106                           
   107  0017                     __end_of__initialization:	
   108  0017  0183               	clrf	3
   109  0018  120A  118A  2865   	ljmp	_main	;jump to C main() function
   110                           
   111                           	psect	bssCOMMON
   112  0074                     __pbssCOMMON:	
   113  0074                     _pulseCount:	
   114  0074                     	ds	2
   115                           
   116                           	psect	cstackCOMMON
   117  0070                     __pcstackCOMMON:	
   118  0070                     ?_delay_102ms:	
   119  0070                     ??_delay_102ms:	
   120                           ; 0 bytes @ 0x0
   121                           
   122  0070                     ?_ISR:	
   123                           ; 0 bytes @ 0x0
   124                           
   125  0070                     ??_ISR:	
   126                           ; 0 bytes @ 0x0
   127                           
   128  0070                     ?_main:	
   129                           ; 0 bytes @ 0x0
   130                           
   131                           
   132                           ; 0 bytes @ 0x0
   133  0070                     	ds	4
   134  0074                     ??_main:	
   135                           
   136                           	psect	maintext
   137  0065                     __pmaintext:	
   138                           ; 0 bytes @ 0x4
   139 ;;
   140 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   141 ;;
   142 ;; *************** function _main *****************
   143 ;; Defined at:
   144 ;;		line 55 in file "D:\JinBus\CpE 3201\Special Project\TestPulseCapture.c"
   145 ;; Parameters:    Size  Location     Type
   146 ;;		None
   147 ;; Auto vars:     Size  Location     Type
   148 ;;		None
   149 ;; Return value:  Size  Location     Type
   150 ;;		None               void
   151 ;; Registers used:
   152 ;;		wreg, status,2
   153 ;; Tracked objects:
   154 ;;		On entry : 17F/0
   155 ;;		On exit  : 0/0
   156 ;;		Unchanged: 0/0
   157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   158 ;;      Params:         0       0       0       0       0
   159 ;;      Locals:         0       0       0       0       0
   160 ;;      Temps:          0       0       0       0       0
   161 ;;      Totals:         0       0       0       0       0
   162 ;;Total ram usage:        0 bytes
   163 ;; Hardware stack levels required when called:    2
   164 ;; This function calls:
   165 ;;		Nothing
   166 ;; This function is called by:
   167 ;;		Startup code after reset
   168 ;; This function uses a non-reentrant model
   169 ;;
   170                           
   171                           
   172                           ;psect for function _main
   173  0065                     _main:	
   174                           
   175                           ;TestPulseCapture.c: 56: ADCON1 = 0x07;
   176                           
   177                           ;incstack = 0
   178                           ; Regs used in _main: [wreg+status,2]
   179  0065  3007               	movlw	7
   180  0066  1683               	bsf	3,5	;RP0=1, select bank1
   181  0067  1303               	bcf	3,6	;RP1=0, select bank1
   182  0068  009F               	movwf	31	;volatile
   183                           
   184                           ;TestPulseCapture.c: 57: TRISA = 0xFF;
   185  0069  30FF               	movlw	255
   186  006A  0085               	movwf	5	;volatile
   187                           
   188                           ;TestPulseCapture.c: 58: TRISD = 0x00;
   189  006B  0188               	clrf	8	;volatile
   190                           
   191                           ;TestPulseCapture.c: 60: OPTION_REG = 0x84;
   192  006C  3084               	movlw	132
   193  006D  0081               	movwf	1	;volatile
   194                           
   195                           ;TestPulseCapture.c: 65: T0IE = 1;
   196  006E  168B               	bsf	11,5	;volatile
   197                           
   198                           ;TestPulseCapture.c: 66: T0IF = 0;
   199  006F  110B               	bcf	11,2	;volatile
   200                           
   201                           ;TestPulseCapture.c: 67: GIE = 1;
   202  0070  178B               	bsf	11,7	;volatile
   203                           
   204                           ;TestPulseCapture.c: 68: PORTD = 0x00;
   205  0071  1283               	bcf	3,5	;RP0=0, select bank0
   206  0072  1303               	bcf	3,6	;RP1=0, select bank0
   207  0073  0188               	clrf	8	;volatile
   208                           
   209                           ;TestPulseCapture.c: 69: PORTB = 0xFF;
   210  0074  30FF               	movlw	255
   211  0075  0086               	movwf	6	;volatile
   212  0076                     l558:	
   213                           ;TestPulseCapture.c: 71: for (;;) {
   214                           
   215                           
   216                           ;TestPulseCapture.c: 72: PORTD = 0xFF;
   217  0076  30FF               	movlw	255
   218  0077  0088               	movwf	8	;volatile
   219                           
   220                           ;TestPulseCapture.c: 73: }
   221  0078  2876               	goto	l558
   222  0079                     __end_of_main:	
   223                           
   224                           	psect	text1
   225  001B                     __ptext1:	
   226 ;; *************** function _ISR *****************
   227 ;; Defined at:
   228 ;;		line 28 in file "D:\JinBus\CpE 3201\Special Project\TestPulseCapture.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;		None               void
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : 0/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          4       0       0       0       0
   245 ;;      Totals:         4       0       0       0       0
   246 ;;Total ram usage:        4 bytes
   247 ;; Hardware stack levels used:    1
   248 ;; Hardware stack levels required when called:    1
   249 ;; This function calls:
   250 ;;		_delay_102ms
   251 ;; This function is called by:
   252 ;;		Interrupt level 1
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           
   257                           ;psect for function _ISR
   258  001B                     _ISR:	
   259                           
   260                           ;TestPulseCapture.c: 29: GIE = 0;
   261  001B  138B               	bcf	11,7	;volatile
   262                           
   263                           ;TestPulseCapture.c: 30: if (INTF) {
   264  001C  1C8B               	btfss	11,1	;volatile
   265  001D  2854               	goto	i1l43
   266                           
   267                           ;TestPulseCapture.c: 31: INTF = 0;
   268  001E  108B               	bcf	11,1	;volatile
   269                           
   270                           ;TestPulseCapture.c: 32: pulseCount++;
   271  001F  3001               	movlw	1
   272  0020  07F4               	addwf	_pulseCount,f
   273  0021  1803               	skipnc
   274  0022  0AF5               	incf	_pulseCount+1,f
   275  0023  3000               	movlw	0
   276  0024  07F5               	addwf	_pulseCount+1,f
   277                           
   278                           ;TestPulseCapture.c: 33: PORTD ^= PORTD;
   279  0025  0188               	clrf	8	;volatile
   280                           
   281                           ;TestPulseCapture.c: 34: delay_102ms();
   282  0026  120A  118A  2079  120A  118A  	fcall	_delay_102ms
   283                           
   284                           ;TestPulseCapture.c: 35: delay_102ms();
   285  002B  120A  118A  2079  120A  118A  	fcall	_delay_102ms
   286                           
   287                           ;TestPulseCapture.c: 36: delay_102ms();
   288  0030  120A  118A  2079  120A  118A  	fcall	_delay_102ms
   289                           
   290                           ;TestPulseCapture.c: 37: delay_102ms();
   291  0035  120A  118A  2079  120A  118A  	fcall	_delay_102ms
   292                           
   293                           ;TestPulseCapture.c: 38: delay_102ms();
   294  003A  120A  118A  2079  120A  118A  	fcall	_delay_102ms
   295                           
   296                           ;TestPulseCapture.c: 39: delay_102ms();
   297  003F  120A  118A  2079  120A  118A  	fcall	_delay_102ms
   298                           
   299                           ;TestPulseCapture.c: 40: delay_102ms();
   300  0044  120A  118A  2079  120A  118A  	fcall	_delay_102ms
   301                           
   302                           ;TestPulseCapture.c: 41: delay_102ms();
   303  0049  120A  118A  2079  120A  118A  	fcall	_delay_102ms
   304                           
   305                           ;TestPulseCapture.c: 42: delay_102ms();
   306  004E  120A  118A  2079  120A  118A  	fcall	_delay_102ms
   307                           
   308                           ;TestPulseCapture.c: 45: }
   309  0053  2857               	goto	i1l44
   310  0054                     i1l43:	
   311                           
   312                           ;TestPulseCapture.c: 46: else if(T0IF) {
   313  0054  1D0B               	btfss	11,2	;volatile
   314  0055  2857               	goto	i1l44
   315                           
   316                           ;TestPulseCapture.c: 47: T0IF = 0;
   317  0056  110B               	bcf	11,2	;volatile
   318  0057                     i1l44:	
   319                           
   320                           ;TestPulseCapture.c: 51: }
   321                           ;TestPulseCapture.c: 52: GIE = 1;
   322  0057  178B               	bsf	11,7	;volatile
   323  0058  0873               	movf	??_ISR+3,w
   324  0059  1283               	bcf	3,5	;RP0=0, select bank0
   325  005A  1303               	bcf	3,6	;RP1=0, select bank0
   326  005B  00FF               	movwf	127
   327  005C  0872               	movf	??_ISR+2,w
   328  005D  008A               	movwf	10
   329  005E  0871               	movf	??_ISR+1,w
   330  005F  0084               	movwf	4
   331  0060  0E70               	swapf	??_ISR^(0+-128),w
   332  0061  0083               	movwf	3
   333  0062  0EFE               	swapf	126,f
   334  0063  0E7E               	swapf	126,w
   335  0064  0009               	retfie
   336  0065                     __end_of_ISR:	
   337                           
   338                           	psect	intentry
   339  0004                     __pintentry:	
   340                           ;incstack = 0
   341                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   342                           
   343  0004                     interrupt_function:	
   344  007E                     saved_w	set	btemp
   345  0004  00FE               	movwf	btemp
   346  0005  0E03               	swapf	3,w
   347  0006  00F0               	movwf	??_ISR
   348  0007  0804               	movf	4,w
   349  0008  00F1               	movwf	??_ISR+1
   350  0009  080A               	movf	10,w
   351  000A  00F2               	movwf	??_ISR+2
   352  000B  1283               	bcf	3,5	;RP0=0, select bank0
   353  000C  1303               	bcf	3,6	;RP1=0, select bank0
   354  000D  087F               	movf	btemp+1,w
   355  000E  00F3               	movwf	??_ISR+3
   356  000F  120A  118A  281B   	ljmp	_ISR
   357                           
   358                           	psect	text2
   359  0079                     __ptext2:	
   360 ;; *************** function _delay_102ms *****************
   361 ;; Defined at:
   362 ;;		line 17 in file "D:\JinBus\CpE 3201\Special Project\TestPulseCapture.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;		None               void
   369 ;; Registers used:
   370 ;;		wreg
   371 ;; Tracked objects:
   372 ;;		On entry : 0/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          0       0       0       0       0
   379 ;;      Totals:         0       0       0       0       0
   380 ;;Total ram usage:        0 bytes
   381 ;; Hardware stack levels used:    1
   382 ;; This function calls:
   383 ;;		Nothing
   384 ;; This function is called by:
   385 ;;		_ISR
   386 ;; This function uses a non-reentrant model
   387 ;;
   388                           
   389                           
   390                           ;psect for function _delay_102ms
   391  0079                     _delay_102ms:	
   392                           
   393                           ;TestPulseCapture.c: 18: T1CON = 0x31;
   394                           
   395                           ;incstack = 0
   396                           ; Regs used in _delay_102ms: [wreg]
   397  0079  3031               	movlw	49
   398  007A  1283               	bcf	3,5	;RP0=0, select bank0
   399  007B  1303               	bcf	3,6	;RP1=0, select bank0
   400  007C  0090               	movwf	16	;volatile
   401                           
   402                           ;TestPulseCapture.c: 19: TMR1H = 0xCE;
   403  007D  30CE               	movlw	206
   404  007E  008F               	movwf	15	;volatile
   405                           
   406                           ;TestPulseCapture.c: 20: TMR1L = 0x31;
   407  007F  3031               	movlw	49
   408  0080  008E               	movwf	14	;volatile
   409                           
   410                           ;TestPulseCapture.c: 21: GIE = 1;
   411  0081  178B               	bsf	11,7	;volatile
   412                           
   413                           ;TestPulseCapture.c: 22: PEIE = 1;
   414  0082  170B               	bsf	11,6	;volatile
   415                           
   416                           ;TestPulseCapture.c: 23: TMR1ON = 1;
   417  0083  1410               	bsf	16,0	;volatile
   418  0084                     i1l37:	
   419                           ;TestPulseCapture.c: 24: while (!TMR1IF);
   420                           
   421  0084  1C0C               	btfss	12,0	;volatile
   422  0085  2884               	goto	i1l37
   423                           
   424                           ;TestPulseCapture.c: 25: TMR1IF = 0;
   425  0086  100C               	bcf	12,0	;volatile
   426  0087  0008               	return
   427  0088                     __end_of_delay_102ms:	
   428  007E                     btemp	set	126	;btemp
   429  007E                     wtemp	set	126
   430  007E                     wtemp0	set	126
   431  0080                     wtemp1	set	128
   432  0082                     wtemp2	set	130
   433  0084                     wtemp3	set	132
   434  0086                     wtemp4	set	134
   435  0088                     wtemp5	set	136
   436  007F                     wtemp6	set	127
   437  007E                     ttemp	set	126
   438  007E                     ttemp0	set	126
   439  0081                     ttemp1	set	129
   440  0084                     ttemp2	set	132
   441  0087                     ttemp3	set	135
   442  007F                     ttemp4	set	127
   443  007E                     ltemp	set	126
   444  007E                     ltemp0	set	126
   445  0082                     ltemp1	set	130
   446  0086                     ltemp2	set	134
   447  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
                        _delay_102ms
 ---------------------------------------------------------------------------------
 (2) _delay_102ms                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _delay_102ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      4       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       6       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       6      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Wed May 10 18:21:22 2023

            __CFG_CP$OFF 0000                      l558 0076                      _GIE 005F  
           __CFG_CPD$OFF 0000                      _ISR 001B                      fsr0 0004  
           __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000                     ?_ISR 0070  
                   _T0IE 005D                     _T0IF 005A                     _PEIE 005E  
                   _INTF 0059                     i1l43 0054                     i1l44 0057  
                   i1l37 0084             __CFG_WRT$OFF 0000                     _main 0065  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0012                     ttemp 007E                     wtemp 007E  
                  ??_ISR 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _T1CON 0010                    _TMR1H 000F                    _TMR1L 000E  
                  _PORTB 0006                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088            __CFG_PWRTE$ON 0000     __size_of_delay_102ms 000F  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __initialization 0015             __end_of_main 0079                   ??_main 0074  
                 _ADCON1 009F                   _TMR1IF 0060                   _TMR1ON 0080  
                 saved_w 007E  __end_of__initialization 0017           __pcstackCOMMON 0070  
             __pmaintext 0065               __pintentry 0004                  __ptext0 0000  
                __ptext1 001B                  __ptext2 0079             __size_of_ISR 004A  
          ??_delay_102ms 0070     end_of_initialization 0017               _pulseCount 0074  
    __end_of_delay_102ms 0088      start_initialization 0015              __end_of_ISR 0065  
            __pbssCOMMON 0074                ___latbits 0002              _delay_102ms 0079  
      interrupt_function 0004            __size_of_main 0014             ?_delay_102ms 0070  
               intlevel1 0000               _OPTION_REG 0081  
