

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Mar 14 12:17:49 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0008                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000E                     	;# 
    48  000F                     	;# 
    49  0010                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0014                     	;# 
    54  0015                     	;# 
    55  0015                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  0086                     	;# 
    70  0087                     	;# 
    71  0088                     	;# 
    72  0089                     	;# 
    73  008C                     	;# 
    74  008D                     	;# 
    75  008E                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92                           
    93                           	psect	idataBANK0
    94  07FB                     __pidataBANK0:	
    95                           
    96                           ;initializer for _count_flag
    97  07FB  3401               	retlw	1
    98  07FC  3400               	retlw	0
    99  001F                     _ADCON0	set	31
   100  001E                     _ADRESH	set	30
   101  0006                     _PORTB	set	6
   102  0066                     _ADIF	set	102
   103  005F                     _GIE	set	95
   104  00FA                     _GO	set	250
   105  005E                     _PEIE	set	94
   106  009F                     _ADCON1	set	159
   107  009E                     _ADRESL	set	158
   108  0086                     _TRISB	set	134
   109  0466                     _ADIE	set	1126
   110                           
   111                           ; #config settings
   112  0000                     
   113                           	psect	cinit
   114  0019                     start_initialization:	
   115  0019                     __initialization:	
   116                           
   117                           ; Clear objects allocated to BANK1
   118  0019  1683               	bsf	3,5	;RP0=1, select bank1
   119  001A  1303               	bcf	3,6	;RP1=0, select bank1
   120  001B  01B7               	clrf	__pbssBANK1& (0+127)
   121  001C  01B8               	clrf	(__pbssBANK1+1)& (0+127)
   122                           
   123                           ; Initialize objects allocated to BANK0
   124  001D  1283               	bcf	3,5	;RP0=0, select bank0
   125  001E  1303               	bcf	3,6	;RP1=0, select bank0
   126  001F  120A  118A  27FB  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   127  0024  00EE               	movwf	__pdataBANK0& (0+127)
   128  0025  120A  118A  27FC   	fcall	__pidataBANK0+1	;fetch initializer
   129  0028  00EF               	movwf	(__pdataBANK0+1)& (0+127)
   130  0029                     end_of_initialization:	
   131                           ;End of C runtime variable initialization code
   132                           
   133  0029                     __end_of__initialization:	
   134  0029  0183               	clrf	3
   135  002A  120A  118A  2FE3   	ljmp	_main	;jump to C main() function
   136                           
   137                           	psect	dataBANK0
   138  006E                     __pdataBANK0:	
   139  006E                     _count_flag:	
   140  006E                     	ds	2
   141                           
   142                           	psect	bssBANK1
   143  00B7                     __pbssBANK1:	
   144  00B7                     _errno:	
   145  00B7                     	ds	2
   146                           
   147                           	psect	cstackBANK1
   148  00A0                     __pcstackBANK1:	
   149  00A0                     ??_ISR:	
   150                           
   151                           ; 0 bytes @ 0x0
   152  00A0                     	ds	8
   153  00A8                     ISR@resultOfConversion:	
   154                           
   155                           ; 3 bytes @ 0x8
   156  00A8                     	ds	3
   157  00AB                     ISR@decimal:	
   158                           
   159                           ; 3 bytes @ 0xB
   160  00AB                     	ds	3
   161  00AE                     ISR@result:	
   162                           
   163                           ; 2 bytes @ 0xE
   164  00AE                     	ds	2
   165  00B0                     ISR@d_value:	
   166                           
   167                           ; 2 bytes @ 0x10
   168  00B0                     	ds	2
   169  00B2                     ISR@formattedResult:	
   170                           
   171                           ; 3 bytes @ 0x12
   172  00B2                     	ds	3
   173  00B5                     ISR@whole:	
   174                           
   175                           ; 2 bytes @ 0x15
   176  00B5                     	ds	2
   177  00B7                     ??_main:	
   178                           
   179                           	psect	cstackCOMMON
   180  0070                     __pcstackCOMMON:	
   181                           ; 0 bytes @ 0x17
   182                           
   183  0070                     ?_delay:	
   184  0070                     ?_ISR:	
   185                           ; 0 bytes @ 0x0
   186                           
   187  0070                     ?_main:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0070                     ?___ftge:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0070                     ?_readADC:	
   194                           ; 1 bit 
   195                           
   196  0070                     ?___ftpack:	
   197                           ; 2 bytes @ 0x0
   198                           
   199  0070                     ?_frexp:	
   200                           ; 3 bytes @ 0x0
   201                           
   202  0070                     delay@cnt:	
   203                           ; 3 bytes @ 0x0
   204                           
   205  0070                     ___ftpack@arg:	
   206                           ; 2 bytes @ 0x0
   207                           
   208  0070                     frexp@value:	
   209                           ; 3 bytes @ 0x0
   210                           
   211  0070                     ___ftge@ff1:	
   212                           ; 3 bytes @ 0x0
   213                           
   214                           
   215                           ; 3 bytes @ 0x0
   216  0070                     	ds	2
   217  0072                     ??_delay:	
   218  0072                     ??_readADC:	
   219                           ; 0 bytes @ 0x2
   220                           
   221                           
   222                           ; 0 bytes @ 0x2
   223  0072                     	ds	1
   224  0073                     ___ftpack@exp:	
   225  0073                     frexp@eptr:	
   226                           ; 1 bytes @ 0x3
   227                           
   228  0073                     ___ftge@ff2:	
   229                           ; 1 bytes @ 0x3
   230                           
   231                           
   232                           ; 3 bytes @ 0x3
   233  0073                     	ds	1
   234  0074                     ??_frexp:	
   235  0074                     ___ftpack@sign:	
   236                           ; 0 bytes @ 0x4
   237                           
   238  0074                     readADC@temp:	
   239                           ; 1 bytes @ 0x4
   240                           
   241                           
   242                           ; 2 bytes @ 0x4
   243  0074                     	ds	1
   244  0075                     ??___ftpack:	
   245                           
   246                           ; 0 bytes @ 0x5
   247  0075                     	ds	1
   248  0076                     ??___ftge:	
   249                           
   250                           ; 0 bytes @ 0x6
   251  0076                     	ds	2
   252  0078                     ?___awtoft:	
   253  0078                     ?___ftdiv:	
   254                           ; 3 bytes @ 0x8
   255                           
   256  0078                     ___awtoft@c:	
   257                           ; 3 bytes @ 0x8
   258                           
   259  0078                     ___ftdiv@f2:	
   260                           ; 2 bytes @ 0x8
   261                           
   262                           
   263                           ; 3 bytes @ 0x8
   264  0078                     	ds	3
   265  007B                     ??___awtoft:	
   266  007B                     ___ftdiv@f1:	
   267                           ; 0 bytes @ 0xB
   268                           
   269                           
   270                           ; 3 bytes @ 0xB
   271  007B                     	ds	2
   272  007D                     ___awtoft@sign:	
   273                           
   274                           ; 1 bytes @ 0xD
   275  007D                     	ds	1
   276  007E                     ??_round:	
   277  007E                     ??_round_to_one_decimal:	
   278                           ; 0 bytes @ 0xE
   279                           
   280  007E                     ??___ftneg:	
   281                           ; 0 bytes @ 0xE
   282                           
   283                           
   284                           	psect	cstackBANK0
   285  0020                     __pcstackBANK0:	
   286                           ; 0 bytes @ 0xE
   287                           
   288  0020                     ??___ftdiv:	
   289  0020                     ?___ftmul:	
   290                           ; 0 bytes @ 0x0
   291                           
   292  0020                     ___ftmul@f1:	
   293                           ; 3 bytes @ 0x0
   294                           
   295                           
   296                           ; 3 bytes @ 0x0
   297  0020                     	ds	3
   298  0023                     ___ftmul@f2:	
   299                           
   300                           ; 3 bytes @ 0x3
   301  0023                     	ds	1
   302  0024                     ___ftdiv@cntr:	
   303                           
   304                           ; 1 bytes @ 0x4
   305  0024                     	ds	1
   306  0025                     ___ftdiv@f3:	
   307                           
   308                           ; 3 bytes @ 0x5
   309  0025                     	ds	1
   310  0026                     ??___ftmul:	
   311                           
   312                           ; 0 bytes @ 0x6
   313  0026                     	ds	2
   314  0028                     ___ftdiv@exp:	
   315                           
   316                           ; 1 bytes @ 0x8
   317  0028                     	ds	1
   318  0029                     ___ftdiv@sign:	
   319                           
   320                           ; 1 bytes @ 0x9
   321  0029                     	ds	1
   322  002A                     ___ftmul@exp:	
   323                           
   324                           ; 1 bytes @ 0xA
   325  002A                     	ds	1
   326  002B                     ___ftmul@f3_as_product:	
   327                           
   328                           ; 3 bytes @ 0xB
   329  002B                     	ds	3
   330  002E                     ___ftmul@cntr:	
   331                           
   332                           ; 1 bytes @ 0xE
   333  002E                     	ds	1
   334  002F                     ___ftmul@sign:	
   335                           
   336                           ; 1 bytes @ 0xF
   337  002F                     	ds	1
   338  0030                     ?___fttol:	
   339  0030                     ___fttol@f1:	
   340                           ; 4 bytes @ 0x10
   341                           
   342                           
   343                           ; 3 bytes @ 0x10
   344  0030                     	ds	4
   345  0034                     ??___fttol:	
   346                           
   347                           ; 0 bytes @ 0x14
   348  0034                     	ds	4
   349  0038                     ___fttol@sign1:	
   350                           
   351                           ; 1 bytes @ 0x18
   352  0038                     	ds	1
   353  0039                     ___fttol@lval:	
   354                           
   355                           ; 4 bytes @ 0x19
   356  0039                     	ds	4
   357  003D                     ___fttol@exp1:	
   358                           
   359                           ; 1 bytes @ 0x1D
   360  003D                     	ds	1
   361  003E                     ?___awmod:	
   362  003E                     ?___altoft:	
   363                           ; 2 bytes @ 0x1E
   364                           
   365  003E                     ___awmod@divisor:	
   366                           ; 3 bytes @ 0x1E
   367                           
   368  003E                     ___altoft@c:	
   369                           ; 2 bytes @ 0x1E
   370                           
   371                           
   372                           ; 4 bytes @ 0x1E
   373  003E                     	ds	2
   374  0040                     ___awmod@dividend:	
   375                           
   376                           ; 2 bytes @ 0x20
   377  0040                     	ds	2
   378  0042                     ??___altoft:	
   379  0042                     ??___awmod:	
   380                           ; 0 bytes @ 0x22
   381                           
   382                           
   383                           ; 0 bytes @ 0x22
   384  0042                     	ds	1
   385  0043                     ___awmod@counter:	
   386                           
   387                           ; 1 bytes @ 0x23
   388  0043                     	ds	1
   389  0044                     ___altoft@exp:	
   390  0044                     ___awmod@sign:	
   391                           ; 1 bytes @ 0x24
   392                           
   393                           
   394                           ; 1 bytes @ 0x24
   395  0044                     	ds	1
   396  0045                     ___altoft@sign:	
   397                           
   398                           ; 1 bytes @ 0x25
   399  0045                     	ds	1
   400  0046                     ?_trunc:	
   401  0046                     trunc@x:	
   402                           ; 3 bytes @ 0x26
   403                           
   404                           
   405                           ; 3 bytes @ 0x26
   406  0046                     	ds	3
   407  0049                     ??_trunc:	
   408                           
   409                           ; 0 bytes @ 0x29
   410  0049                     	ds	1
   411  004A                     trunc@i:	
   412                           
   413                           ; 3 bytes @ 0x2A
   414  004A                     	ds	3
   415  004D                     trunc@expon:	
   416                           
   417                           ; 2 bytes @ 0x2D
   418  004D                     	ds	2
   419  004F                     ?___ftneg:	
   420  004F                     ___ftneg@f1:	
   421                           ; 3 bytes @ 0x2F
   422                           
   423                           
   424                           ; 3 bytes @ 0x2F
   425  004F                     	ds	3
   426  0052                     ?___ftadd:	
   427  0052                     ___ftadd@f1:	
   428                           ; 3 bytes @ 0x32
   429                           
   430                           
   431                           ; 3 bytes @ 0x32
   432  0052                     	ds	3
   433  0055                     ___ftadd@f2:	
   434                           
   435                           ; 3 bytes @ 0x35
   436  0055                     	ds	3
   437  0058                     ??___ftadd:	
   438                           
   439                           ; 0 bytes @ 0x38
   440  0058                     	ds	4
   441  005C                     ___ftadd@sign:	
   442                           
   443                           ; 1 bytes @ 0x3C
   444  005C                     	ds	1
   445  005D                     ___ftadd@exp2:	
   446                           
   447                           ; 1 bytes @ 0x3D
   448  005D                     	ds	1
   449  005E                     ___ftadd@exp1:	
   450                           
   451                           ; 1 bytes @ 0x3E
   452  005E                     	ds	1
   453  005F                     ?_round:	
   454  005F                     ?_floor:	
   455                           ; 3 bytes @ 0x3F
   456                           
   457  005F                     floor@x:	
   458                           ; 3 bytes @ 0x3F
   459                           
   460  005F                     round@x:	
   461                           ; 3 bytes @ 0x3F
   462                           
   463                           
   464                           ; 3 bytes @ 0x3F
   465  005F                     	ds	3
   466  0062                     ??_floor:	
   467  0062                     round@f:	
   468                           ; 0 bytes @ 0x42
   469                           
   470                           
   471                           ; 3 bytes @ 0x42
   472  0062                     	ds	1
   473  0063                     floor@i:	
   474                           
   475                           ; 3 bytes @ 0x43
   476  0063                     	ds	3
   477  0066                     floor@expon:	
   478                           
   479                           ; 2 bytes @ 0x46
   480  0066                     	ds	2
   481  0068                     ?_round_to_one_decimal:	
   482  0068                     round_to_one_decimal@num:	
   483                           ; 3 bytes @ 0x48
   484                           
   485                           
   486                           ; 3 bytes @ 0x48
   487  0068                     	ds	3
   488  006B                     round_to_one_decimal@rounded_num:	
   489                           
   490                           ; 3 bytes @ 0x4B
   491  006B                     	ds	3
   492                           
   493                           	psect	maintext
   494  07E3                     __pmaintext:	
   495 ;;
   496 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   497 ;;
   498 ;; *************** function _main *****************
   499 ;; Defined at:
   500 ;;		line 66 in file "D:\JinBus\CpE 3201\Practical Activity #5\CpE 3201-LE5-2\LE5-2.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;		None
   503 ;; Auto vars:     Size  Location     Type
   504 ;;		None
   505 ;; Return value:  Size  Location     Type
   506 ;;		None               void
   507 ;; Registers used:
   508 ;;		wreg, status,2
   509 ;; Tracked objects:
   510 ;;		On entry : 17F/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         0       0       0       0       0
   516 ;;      Temps:          0       0       0       0       0
   517 ;;      Totals:         0       0       0       0       0
   518 ;;Total ram usage:        0 bytes
   519 ;; Hardware stack levels required when called:    6
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		Startup code after reset
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           
   528                           ;psect for function _main
   529  07E3                     _main:	
   530                           
   531                           ;LE5-2.c: 68: TRISB = 0x00;
   532                           
   533                           ;incstack = 0
   534                           ; Regs used in _main: [wreg+status,2]
   535  07E3  1683               	bsf	3,5	;RP0=1, select bank1
   536  07E4  1303               	bcf	3,6	;RP1=0, select bank1
   537  07E5  0186               	clrf	6	;volatile
   538                           
   539                           ;LE5-2.c: 69: PORTB = 0x00;
   540  07E6  1283               	bcf	3,5	;RP0=0, select bank0
   541  07E7  1303               	bcf	3,6	;RP1=0, select bank0
   542  07E8  0186               	clrf	6	;volatile
   543                           
   544                           ;LE5-2.c: 70: ADCON1 = 0x80;
   545  07E9  3080               	movlw	128
   546  07EA  1683               	bsf	3,5	;RP0=1, select bank1
   547  07EB  1303               	bcf	3,6	;RP1=0, select bank1
   548  07EC  009F               	movwf	31	;volatile
   549                           
   550                           ;LE5-2.c: 73: ADCON0 = 0x41;
   551  07ED  3041               	movlw	65
   552  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   553  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   554  07F0  009F               	movwf	31	;volatile
   555                           
   556                           ;LE5-2.c: 75: ADIF = 0;
   557  07F1  130C               	bcf	12,6	;volatile
   558                           
   559                           ;LE5-2.c: 76: ADIE = 1;
   560  07F2  1683               	bsf	3,5	;RP0=1, select bank1
   561  07F3  1303               	bcf	3,6	;RP1=0, select bank1
   562  07F4  170C               	bsf	12,6	;volatile
   563                           
   564                           ;LE5-2.c: 77: GIE = 1;
   565  07F5  178B               	bsf	11,7	;volatile
   566                           
   567                           ;LE5-2.c: 78: PEIE = 1;
   568  07F6  170B               	bsf	11,6	;volatile
   569                           
   570                           ;LE5-2.c: 79: GO = 1;
   571  07F7  1283               	bcf	3,5	;RP0=0, select bank0
   572  07F8  1303               	bcf	3,6	;RP1=0, select bank0
   573  07F9  151F               	bsf	31,2	;volatile
   574  07FA                     l49:	
   575                           ;LE5-2.c: 80: for(;;)
   576                           
   577                           
   578                           ;LE5-2.c: 81: {
   579                           ;LE5-2.c: 83: }
   580  07FA  2FFA               	goto	l49
   581  07FB                     __end_of_main:	
   582                           
   583                           	psect	text1
   584  002D                     __ptext1:	
   585 ;; *************** function _ISR *****************
   586 ;; Defined at:
   587 ;;		line 42 in file "D:\JinBus\CpE 3201\Practical Activity #5\CpE 3201-LE5-2\LE5-2.c"
   588 ;; Parameters:    Size  Location     Type
   589 ;;		None
   590 ;; Auto vars:     Size  Location     Type
   591 ;;  formattedRes    3   18[BANK1 ] float 
   592 ;;  decimal         3   11[BANK1 ] float 
   593 ;;  resultOfConv    3    8[BANK1 ] float 
   594 ;;  whole           2   21[BANK1 ] int 
   595 ;;  result          2   14[BANK1 ] unsigned int 
   596 ;;  d_value         2   16[BANK1 ] int 
   597 ;; Return value:  Size  Location     Type
   598 ;;		None               void
   599 ;; Registers used:
   600 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         0       0       0       0       0
   607 ;;      Locals:         0       0      15       0       0
   608 ;;      Temps:          0       0       8       0       0
   609 ;;      Totals:         0       0      23       0       0
   610 ;;Total ram usage:       23 bytes
   611 ;; Hardware stack levels used:    1
   612 ;; Hardware stack levels required when called:    5
   613 ;; This function calls:
   614 ;;		___awtoft
   615 ;;		___ftadd
   616 ;;		___ftmul
   617 ;;		___ftneg
   618 ;;		___fttol
   619 ;;		_delay
   620 ;;		_readADC
   621 ;;		_round_to_one_decimal
   622 ;; This function is called by:
   623 ;;		Interrupt level 1
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           
   627                           
   628                           ;psect for function _ISR
   629  002D                     _ISR:	
   630                           
   631                           ;LE5-2.c: 44: GIE = 0;
   632  002D  138B               	bcf	11,7	;volatile
   633                           
   634                           ;LE5-2.c: 45: int d_value = 0;
   635  002E  01B0               	clrf	ISR@d_value^(0+128)
   636  002F  01B1               	clrf	(ISR@d_value+1)^(0+128)
   637                           
   638                           ;LE5-2.c: 46: if(ADIF == 1)
   639  0030  1283               	bcf	3,5	;RP0=0, select bank0
   640  0031  1303               	bcf	3,6	;RP1=0, select bank0
   641  0032  1F0C               	btfss	12,6	;volatile
   642  0033  2956               	goto	i1l1497
   643                           
   644                           ;LE5-2.c: 47: {
   645                           ;LE5-2.c: 48: ADIF = 0;
   646  0034  130C               	bcf	12,6	;volatile
   647                           
   648                           ;LE5-2.c: 49: d_value = readADC();
   649  0035  120A  158A  27D8  120A  118A  	fcall	_readADC
   650  003A  0871               	movf	?_readADC+1,w
   651  003B  1683               	bsf	3,5	;RP0=1, select bank1
   652  003C  1303               	bcf	3,6	;RP1=0, select bank1
   653  003D  01B1               	clrf	(ISR@d_value+1)^(0+128)
   654  003E  07B1               	addwf	(ISR@d_value+1)^(0+128),f
   655  003F  0870               	movf	?_readADC,w
   656  0040  01B0               	clrf	ISR@d_value^(0+128)
   657  0041  07B0               	addwf	ISR@d_value^(0+128),f
   658                           
   659                           ;LE5-2.c: 50: float resultOfConversion = (float) d_value * 0.004911;
   660  0042  30EC               	movlw	236
   661  0043  1283               	bcf	3,5	;RP0=0, select bank0
   662  0044  1303               	bcf	3,6	;RP1=0, select bank0
   663  0045  00A0               	movwf	___ftmul@f1
   664  0046  30A0               	movlw	160
   665  0047  00A1               	movwf	___ftmul@f1+1
   666  0048  303B               	movlw	59
   667  0049  00A2               	movwf	___ftmul@f1+2
   668  004A  1683               	bsf	3,5	;RP0=1, select bank1
   669  004B  1303               	bcf	3,6	;RP1=0, select bank1
   670  004C  0831               	movf	(ISR@d_value+1)^(0+128),w
   671  004D  01F9               	clrf	___awtoft@c+1
   672  004E  07F9               	addwf	___awtoft@c+1,f
   673  004F  0830               	movf	ISR@d_value^(0+128),w
   674  0050  01F8               	clrf	___awtoft@c
   675  0051  07F8               	addwf	___awtoft@c,f
   676  0052  120A  158A  27B7  120A  118A  	fcall	___awtoft
   677  0057  0878               	movf	?___awtoft,w
   678  0058  1283               	bcf	3,5	;RP0=0, select bank0
   679  0059  1303               	bcf	3,6	;RP1=0, select bank0
   680  005A  00A3               	movwf	___ftmul@f2
   681  005B  0879               	movf	?___awtoft+1,w
   682  005C  00A4               	movwf	___ftmul@f2+1
   683  005D  087A               	movf	?___awtoft+2,w
   684  005E  00A5               	movwf	___ftmul@f2+2
   685  005F  120A  118A  227D  120A  118A  	fcall	___ftmul
   686  0064  1283               	bcf	3,5	;RP0=0, select bank0
   687  0065  1303               	bcf	3,6	;RP1=0, select bank0
   688  0066  0820               	movf	?___ftmul,w
   689  0067  1683               	bsf	3,5	;RP0=1, select bank1
   690  0068  1303               	bcf	3,6	;RP1=0, select bank1
   691  0069  00A8               	movwf	ISR@resultOfConversion^(0+128)
   692  006A  1283               	bcf	3,5	;RP0=0, select bank0
   693  006B  1303               	bcf	3,6	;RP1=0, select bank0
   694  006C  0821               	movf	?___ftmul+1,w
   695  006D  1683               	bsf	3,5	;RP0=1, select bank1
   696  006E  1303               	bcf	3,6	;RP1=0, select bank1
   697  006F  00A9               	movwf	(ISR@resultOfConversion+1)^(0+128)
   698  0070  1283               	bcf	3,5	;RP0=0, select bank0
   699  0071  1303               	bcf	3,6	;RP1=0, select bank0
   700  0072  0822               	movf	?___ftmul+2,w
   701  0073  1683               	bsf	3,5	;RP0=1, select bank1
   702  0074  1303               	bcf	3,6	;RP1=0, select bank1
   703  0075  00AA               	movwf	(ISR@resultOfConversion+2)^(0+128)
   704                           
   705                           ;LE5-2.c: 51: float formattedResult = round_to_one_decimal(resultOfConversion);
   706  0076  0828               	movf	ISR@resultOfConversion^(0+128),w
   707  0077  1283               	bcf	3,5	;RP0=0, select bank0
   708  0078  1303               	bcf	3,6	;RP1=0, select bank0
   709  0079  00E8               	movwf	round_to_one_decimal@num
   710  007A  1683               	bsf	3,5	;RP0=1, select bank1
   711  007B  1303               	bcf	3,6	;RP1=0, select bank1
   712  007C  0829               	movf	(ISR@resultOfConversion+1)^(0+128),w
   713  007D  1283               	bcf	3,5	;RP0=0, select bank0
   714  007E  1303               	bcf	3,6	;RP1=0, select bank0
   715  007F  00E9               	movwf	round_to_one_decimal@num+1
   716  0080  1683               	bsf	3,5	;RP0=1, select bank1
   717  0081  1303               	bcf	3,6	;RP1=0, select bank1
   718  0082  082A               	movf	(ISR@resultOfConversion+2)^(0+128),w
   719  0083  1283               	bcf	3,5	;RP0=0, select bank0
   720  0084  1303               	bcf	3,6	;RP1=0, select bank0
   721  0085  00EA               	movwf	round_to_one_decimal@num+2
   722  0086  120A  118A  252D  120A  118A  	fcall	_round_to_one_decimal
   723  008B  1283               	bcf	3,5	;RP0=0, select bank0
   724  008C  1303               	bcf	3,6	;RP1=0, select bank0
   725  008D  0868               	movf	?_round_to_one_decimal,w
   726  008E  1683               	bsf	3,5	;RP0=1, select bank1
   727  008F  1303               	bcf	3,6	;RP1=0, select bank1
   728  0090  00B2               	movwf	ISR@formattedResult^(0+128)
   729  0091  1283               	bcf	3,5	;RP0=0, select bank0
   730  0092  1303               	bcf	3,6	;RP1=0, select bank0
   731  0093  0869               	movf	?_round_to_one_decimal+1,w
   732  0094  1683               	bsf	3,5	;RP0=1, select bank1
   733  0095  1303               	bcf	3,6	;RP1=0, select bank1
   734  0096  00B3               	movwf	(ISR@formattedResult+1)^(0+128)
   735  0097  1283               	bcf	3,5	;RP0=0, select bank0
   736  0098  1303               	bcf	3,6	;RP1=0, select bank0
   737  0099  086A               	movf	?_round_to_one_decimal+2,w
   738  009A  1683               	bsf	3,5	;RP0=1, select bank1
   739  009B  1303               	bcf	3,6	;RP1=0, select bank1
   740  009C  00B4               	movwf	(ISR@formattedResult+2)^(0+128)
   741                           
   742                           ;LE5-2.c: 52: int whole = (int)formattedResult;
   743  009D  0832               	movf	ISR@formattedResult^(0+128),w
   744  009E  1283               	bcf	3,5	;RP0=0, select bank0
   745  009F  1303               	bcf	3,6	;RP1=0, select bank0
   746  00A0  00B0               	movwf	___fttol@f1
   747  00A1  1683               	bsf	3,5	;RP0=1, select bank1
   748  00A2  1303               	bcf	3,6	;RP1=0, select bank1
   749  00A3  0833               	movf	(ISR@formattedResult+1)^(0+128),w
   750  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   751  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   752  00A6  00B1               	movwf	___fttol@f1+1
   753  00A7  1683               	bsf	3,5	;RP0=1, select bank1
   754  00A8  1303               	bcf	3,6	;RP1=0, select bank1
   755  00A9  0834               	movf	(ISR@formattedResult+2)^(0+128),w
   756  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   757  00AB  1303               	bcf	3,6	;RP1=0, select bank0
   758  00AC  00B2               	movwf	___fttol@f1+2
   759  00AD  120A  118A  249F  120A  118A  	fcall	___fttol
   760  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   761  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   762  00B4  0831               	movf	?___fttol+1,w
   763  00B5  1683               	bsf	3,5	;RP0=1, select bank1
   764  00B6  1303               	bcf	3,6	;RP1=0, select bank1
   765  00B7  01B6               	clrf	(ISR@whole+1)^(0+128)
   766  00B8  07B6               	addwf	(ISR@whole+1)^(0+128),f
   767  00B9  1283               	bcf	3,5	;RP0=0, select bank0
   768  00BA  1303               	bcf	3,6	;RP1=0, select bank0
   769  00BB  0830               	movf	?___fttol,w
   770  00BC  1683               	bsf	3,5	;RP0=1, select bank1
   771  00BD  1303               	bcf	3,6	;RP1=0, select bank1
   772  00BE  01B5               	clrf	ISR@whole^(0+128)
   773  00BF  07B5               	addwf	ISR@whole^(0+128),f
   774                           
   775                           ;LE5-2.c: 53: float decimal = formattedResult - whole;
   776  00C0  0832               	movf	ISR@formattedResult^(0+128),w
   777  00C1  1283               	bcf	3,5	;RP0=0, select bank0
   778  00C2  1303               	bcf	3,6	;RP1=0, select bank0
   779  00C3  00D2               	movwf	___ftadd@f1
   780  00C4  1683               	bsf	3,5	;RP0=1, select bank1
   781  00C5  1303               	bcf	3,6	;RP1=0, select bank1
   782  00C6  0833               	movf	(ISR@formattedResult+1)^(0+128),w
   783  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   784  00C8  1303               	bcf	3,6	;RP1=0, select bank0
   785  00C9  00D3               	movwf	___ftadd@f1+1
   786  00CA  1683               	bsf	3,5	;RP0=1, select bank1
   787  00CB  1303               	bcf	3,6	;RP1=0, select bank1
   788  00CC  0834               	movf	(ISR@formattedResult+2)^(0+128),w
   789  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   790  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   791  00CF  00D4               	movwf	___ftadd@f1+2
   792  00D0  1683               	bsf	3,5	;RP0=1, select bank1
   793  00D1  1303               	bcf	3,6	;RP1=0, select bank1
   794  00D2  0836               	movf	(ISR@whole+1)^(0+128),w
   795  00D3  01F9               	clrf	___awtoft@c+1
   796  00D4  07F9               	addwf	___awtoft@c+1,f
   797  00D5  0835               	movf	ISR@whole^(0+128),w
   798  00D6  01F8               	clrf	___awtoft@c
   799  00D7  07F8               	addwf	___awtoft@c,f
   800  00D8  120A  158A  27B7  120A  118A  	fcall	___awtoft
   801  00DD  0878               	movf	?___awtoft,w
   802  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   803  00DF  1303               	bcf	3,6	;RP1=0, select bank0
   804  00E0  00CF               	movwf	___ftneg@f1
   805  00E1  0879               	movf	?___awtoft+1,w
   806  00E2  00D0               	movwf	___ftneg@f1+1
   807  00E3  087A               	movf	?___awtoft+2,w
   808  00E4  00D1               	movwf	___ftneg@f1+2
   809  00E5  120A  158A  279E  120A  118A  	fcall	___ftneg
   810  00EA  1283               	bcf	3,5	;RP0=0, select bank0
   811  00EB  1303               	bcf	3,6	;RP1=0, select bank0
   812  00EC  084F               	movf	?___ftneg,w
   813  00ED  00D5               	movwf	___ftadd@f2
   814  00EE  0850               	movf	?___ftneg+1,w
   815  00EF  00D6               	movwf	___ftadd@f2+1
   816  00F0  0851               	movf	?___ftneg+2,w
   817  00F1  00D7               	movwf	___ftadd@f2+2
   818  00F2  120A  118A  2174  120A  118A  	fcall	___ftadd
   819  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   820  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   821  00F9  0852               	movf	?___ftadd,w
   822  00FA  1683               	bsf	3,5	;RP0=1, select bank1
   823  00FB  1303               	bcf	3,6	;RP1=0, select bank1
   824  00FC  00AB               	movwf	ISR@decimal^(0+128)
   825  00FD  1283               	bcf	3,5	;RP0=0, select bank0
   826  00FE  1303               	bcf	3,6	;RP1=0, select bank0
   827  00FF  0853               	movf	?___ftadd+1,w
   828  0100  1683               	bsf	3,5	;RP0=1, select bank1
   829  0101  1303               	bcf	3,6	;RP1=0, select bank1
   830  0102  00AC               	movwf	(ISR@decimal+1)^(0+128)
   831  0103  1283               	bcf	3,5	;RP0=0, select bank0
   832  0104  1303               	bcf	3,6	;RP1=0, select bank0
   833  0105  0854               	movf	?___ftadd+2,w
   834  0106  1683               	bsf	3,5	;RP0=1, select bank1
   835  0107  1303               	bcf	3,6	;RP1=0, select bank1
   836  0108  00AD               	movwf	(ISR@decimal+2)^(0+128)
   837                           
   838                           ;LE5-2.c: 55: unsigned int result;
   839                           ;LE5-2.c: 56: result = (whole<< 4) | ((int)(decimal * 10) & 0x0F);
   840  0109  082B               	movf	ISR@decimal^(0+128),w
   841  010A  1283               	bcf	3,5	;RP0=0, select bank0
   842  010B  1303               	bcf	3,6	;RP1=0, select bank0
   843  010C  00A3               	movwf	___ftmul@f2
   844  010D  1683               	bsf	3,5	;RP0=1, select bank1
   845  010E  1303               	bcf	3,6	;RP1=0, select bank1
   846  010F  082C               	movf	(ISR@decimal+1)^(0+128),w
   847  0110  1283               	bcf	3,5	;RP0=0, select bank0
   848  0111  1303               	bcf	3,6	;RP1=0, select bank0
   849  0112  00A4               	movwf	___ftmul@f2+1
   850  0113  1683               	bsf	3,5	;RP0=1, select bank1
   851  0114  1303               	bcf	3,6	;RP1=0, select bank1
   852  0115  082D               	movf	(ISR@decimal+2)^(0+128),w
   853  0116  1283               	bcf	3,5	;RP0=0, select bank0
   854  0117  1303               	bcf	3,6	;RP1=0, select bank0
   855  0118  00A5               	movwf	___ftmul@f2+2
   856  0119  3000               	movlw	0
   857  011A  00A0               	movwf	___ftmul@f1
   858  011B  3020               	movlw	32
   859  011C  00A1               	movwf	___ftmul@f1+1
   860  011D  3041               	movlw	65
   861  011E  00A2               	movwf	___ftmul@f1+2
   862  011F  120A  118A  227D  120A  118A  	fcall	___ftmul
   863  0124  1283               	bcf	3,5	;RP0=0, select bank0
   864  0125  1303               	bcf	3,6	;RP1=0, select bank0
   865  0126  0820               	movf	?___ftmul,w
   866  0127  00B0               	movwf	___fttol@f1
   867  0128  0821               	movf	?___ftmul+1,w
   868  0129  00B1               	movwf	___fttol@f1+1
   869  012A  0822               	movf	?___ftmul+2,w
   870  012B  00B2               	movwf	___fttol@f1+2
   871  012C  120A  118A  249F  120A  118A  	fcall	___fttol
   872  0131  300F               	movlw	15
   873  0132  1283               	bcf	3,5	;RP0=0, select bank0
   874  0133  1303               	bcf	3,6	;RP1=0, select bank0
   875  0134  0530               	andwf	?___fttol,w
   876  0135  1683               	bsf	3,5	;RP0=1, select bank1
   877  0136  1303               	bcf	3,6	;RP1=0, select bank1
   878  0137  00A0               	movwf	??_ISR^(0+128)
   879  0138  3000               	movlw	0
   880  0139  1283               	bcf	3,5	;RP0=0, select bank0
   881  013A  1303               	bcf	3,6	;RP1=0, select bank0
   882  013B  0531               	andwf	?___fttol+1,w
   883  013C  1683               	bsf	3,5	;RP0=1, select bank1
   884  013D  1303               	bcf	3,6	;RP1=0, select bank1
   885  013E  00A1               	movwf	(??_ISR+1)^(0+128)
   886  013F  0836               	movf	(ISR@whole+1)^(0+128),w
   887  0140  00A3               	movwf	((??_ISR+2)^(0+128)+1)
   888  0141  0835               	movf	ISR@whole^(0+128),w
   889  0142  00A2               	movwf	(??_ISR+2)^(0+128)
   890  0143  0EA2               	swapf	(??_ISR+2)^(0+128),f
   891  0144  0EA3               	swapf	((??_ISR+2)^(0+128)+1),f
   892  0145  30F0               	movlw	240
   893  0146  05A3               	andwf	((??_ISR+2)^(0+128)+1),f
   894  0147  0822               	movf	(??_ISR+2)^(0+128),w
   895  0148  390F               	andlw	15
   896  0149  04A3               	iorwf	((??_ISR+2)^(0+128)+1),f
   897  014A  30F0               	movlw	240
   898  014B  05A2               	andwf	(??_ISR+2)^(0+128),f
   899  014C  0820               	movf	??_ISR^(0+128),w
   900  014D  0422               	iorwf	(??_ISR+2)^(0+128),w
   901  014E  00AE               	movwf	ISR@result^(0+128)
   902  014F  0821               	movf	(??_ISR+1)^(0+128),w
   903  0150  0423               	iorwf	(??_ISR+3)^(0+128),w
   904  0151  00AF               	movwf	(ISR@result+1)^(0+128)
   905                           
   906                           ;LE5-2.c: 57: PORTB = result;
   907  0152  082E               	movf	ISR@result^(0+128),w
   908  0153  1283               	bcf	3,5	;RP0=0, select bank0
   909  0154  1303               	bcf	3,6	;RP1=0, select bank0
   910  0155  0086               	movwf	6	;volatile
   911  0156                     i1l1497:	
   912                           
   913                           ;LE5-2.c: 58: }
   914                           ;LE5-2.c: 59: delay(1000);
   915  0156  30E8               	movlw	232
   916  0157  00F0               	movwf	delay@cnt
   917  0158  3003               	movlw	3
   918  0159  00F1               	movwf	delay@cnt+1
   919  015A  120A  158A  27A8  120A  118A  	fcall	_delay
   920                           
   921                           ;LE5-2.c: 60: GO = 1;
   922  015F  1283               	bcf	3,5	;RP0=0, select bank0
   923  0160  1303               	bcf	3,6	;RP1=0, select bank0
   924  0161  151F               	bsf	31,2	;volatile
   925                           
   926                           ;LE5-2.c: 61: GIE = 1;
   927  0162  178B               	bsf	11,7	;volatile
   928  0163  1683               	bsf	3,5	;RP0=1, select bank1
   929  0164  1303               	bcf	3,6	;RP1=0, select bank1
   930  0165  0827               	movf	(??_ISR+7)^(0+128),w
   931  0166  1283               	bcf	3,5	;RP0=0, select bank0
   932  0167  1303               	bcf	3,6	;RP1=0, select bank0
   933  0168  00FF               	movwf	127
   934  0169  1683               	bsf	3,5	;RP0=1, select bank1
   935  016A  1303               	bcf	3,6	;RP1=0, select bank1
   936  016B  0826               	movf	(??_ISR+6)^(0+128),w
   937  016C  008A               	movwf	10
   938  016D  0825               	movf	(??_ISR+5)^(0+128),w
   939  016E  0084               	movwf	4
   940  016F  0E24               	swapf	(??_ISR+4)^(0+128),w
   941  0170  0083               	movwf	3
   942  0171  0EFE               	swapf	126,f
   943  0172  0E7E               	swapf	126,w
   944  0173  0009               	retfie
   945  0174                     __end_of_ISR:	
   946                           
   947                           	psect	intentry
   948  0004                     __pintentry:	
   949                           ;incstack = 0
   950                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   951                           
   952  0004                     interrupt_function:	
   953  007E                     saved_w	set	btemp
   954  0004  00FE               	movwf	btemp
   955  0005  0E03               	swapf	3,w
   956  0006  1683               	bsf	3,5	;RP0=1, select bank1
   957  0007  1303               	bcf	3,6	;RP1=0, select bank1
   958  0008  00A4               	movwf	(??_ISR+4)^(0+128)
   959  0009  0804               	movf	4,w
   960  000A  00A5               	movwf	(??_ISR+5)^(0+128)
   961  000B  080A               	movf	10,w
   962  000C  00A6               	movwf	(??_ISR+6)^(0+128)
   963  000D  1283               	bcf	3,5	;RP0=0, select bank0
   964  000E  1303               	bcf	3,6	;RP1=0, select bank0
   965  000F  087F               	movf	btemp+1,w
   966  0010  1683               	bsf	3,5	;RP0=1, select bank1
   967  0011  1303               	bcf	3,6	;RP1=0, select bank1
   968  0012  00A7               	movwf	(??_ISR+7)^(0+128)
   969  0013  120A  118A  282D   	ljmp	_ISR
   970                           
   971                           	psect	text2
   972  052D                     __ptext2:	
   973 ;; *************** function _round_to_one_decimal *****************
   974 ;; Defined at:
   975 ;;		line 32 in file "D:\JinBus\CpE 3201\Practical Activity #5\CpE 3201-LE5-2\LE5-2.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  num             3   72[BANK0 ] float 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  rounded_num     3   75[BANK0 ] float 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  3   72[BANK0 ] float 
   982 ;; Registers used:
   983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         0       3       0       0       0
   990 ;;      Locals:         0       3       0       0       0
   991 ;;      Temps:          0       0       0       0       0
   992 ;;      Totals:         0       6       0       0       0
   993 ;;Total ram usage:        6 bytes
   994 ;; Hardware stack levels used:    1
   995 ;; Hardware stack levels required when called:    4
   996 ;; This function calls:
   997 ;;		___awmod
   998 ;;		___ftdiv
   999 ;;		___ftmul
  1000 ;;		___fttol
  1001 ;;		_floor
  1002 ;;		_round
  1003 ;; This function is called by:
  1004 ;;		_ISR
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           
  1009                           ;psect for function _round_to_one_decimal
  1010  052D                     _round_to_one_decimal:	
  1011                           
  1012                           ;LE5-2.c: 33: float rounded_num = round(num * 1000.0);
  1013                           
  1014                           ;incstack = 0
  1015                           ; Regs used in _round_to_one_decimal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1016  052D  3000               	movlw	0
  1017  052E  1283               	bcf	3,5	;RP0=0, select bank0
  1018  052F  1303               	bcf	3,6	;RP1=0, select bank0
  1019  0530  00A0               	movwf	___ftmul@f1
  1020  0531  307A               	movlw	122
  1021  0532  00A1               	movwf	___ftmul@f1+1
  1022  0533  3044               	movlw	68
  1023  0534  00A2               	movwf	___ftmul@f1+2
  1024  0535  0868               	movf	round_to_one_decimal@num,w
  1025  0536  00A3               	movwf	___ftmul@f2
  1026  0537  0869               	movf	round_to_one_decimal@num+1,w
  1027  0538  00A4               	movwf	___ftmul@f2+1
  1028  0539  086A               	movf	round_to_one_decimal@num+2,w
  1029  053A  00A5               	movwf	___ftmul@f2+2
  1030  053B  120A  118A  227D  120A  118A  	fcall	___ftmul
  1031  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0542  0820               	movf	?___ftmul,w
  1034  0543  00DF               	movwf	round@x
  1035  0544  0821               	movf	?___ftmul+1,w
  1036  0545  00E0               	movwf	round@x+1
  1037  0546  0822               	movf	?___ftmul+2,w
  1038  0547  00E1               	movwf	round@x+2
  1039  0548  120A  118A  2611  120A  118A  	fcall	_round
  1040  054D  1283               	bcf	3,5	;RP0=0, select bank0
  1041  054E  1303               	bcf	3,6	;RP1=0, select bank0
  1042  054F  085F               	movf	?_round,w
  1043  0550  00EB               	movwf	round_to_one_decimal@rounded_num
  1044  0551  0860               	movf	?_round+1,w
  1045  0552  00EC               	movwf	round_to_one_decimal@rounded_num+1
  1046  0553  0861               	movf	?_round+2,w
  1047  0554  00ED               	movwf	round_to_one_decimal@rounded_num+2
  1048                           
  1049                           ;LE5-2.c: 34: if(((int)(rounded_num)%100 <= 49))
  1050  0555  3064               	movlw	100
  1051  0556  00BE               	movwf	___awmod@divisor
  1052  0557  3000               	movlw	0
  1053  0558  00BF               	movwf	___awmod@divisor+1
  1054  0559  086B               	movf	round_to_one_decimal@rounded_num,w
  1055  055A  00B0               	movwf	___fttol@f1
  1056  055B  086C               	movf	round_to_one_decimal@rounded_num+1,w
  1057  055C  00B1               	movwf	___fttol@f1+1
  1058  055D  086D               	movf	round_to_one_decimal@rounded_num+2,w
  1059  055E  00B2               	movwf	___fttol@f1+2
  1060  055F  120A  118A  249F  120A  118A  	fcall	___fttol
  1061  0564  1283               	bcf	3,5	;RP0=0, select bank0
  1062  0565  1303               	bcf	3,6	;RP1=0, select bank0
  1063  0566  0831               	movf	?___fttol+1,w
  1064  0567  01C1               	clrf	___awmod@dividend+1
  1065  0568  07C1               	addwf	___awmod@dividend+1,f
  1066  0569  0830               	movf	?___fttol,w
  1067  056A  01C0               	clrf	___awmod@dividend
  1068  056B  07C0               	addwf	___awmod@dividend,f
  1069  056C  120A  118A  26CE  120A  118A  	fcall	___awmod
  1070  0571  1283               	bcf	3,5	;RP0=0, select bank0
  1071  0572  1303               	bcf	3,6	;RP1=0, select bank0
  1072  0573  083F               	movf	?___awmod+1,w
  1073  0574  3A80               	xorlw	128
  1074  0575  00FF               	movwf	127
  1075  0576  3080               	movlw	128
  1076  0577  027F               	subwf	127,w
  1077  0578  1D03               	skipz
  1078  0579  2D7C               	goto	u190_25
  1079  057A  3032               	movlw	50
  1080  057B  023E               	subwf	?___awmod,w
  1081  057C                     u190_25:	
  1082                           
  1083                           ;LE5-2.c: 36: else
  1084                           ;LE5-2.c: 37: rounded_num = floor(rounded_num);
  1085                           
  1086                           ;LE5-2.c: 35: rounded_num = floor(rounded_num);
  1087  057C  1283               	bcf	3,5	;RP0=0, select bank0
  1088  057D  1303               	bcf	3,6	;RP1=0, select bank0
  1089  057E  086B               	movf	round_to_one_decimal@rounded_num,w
  1090  057F  00DF               	movwf	floor@x
  1091  0580  086C               	movf	round_to_one_decimal@rounded_num+1,w
  1092  0581  00E0               	movwf	floor@x+1
  1093  0582  086D               	movf	round_to_one_decimal@rounded_num+2,w
  1094  0583  00E1               	movwf	floor@x+2
  1095  0584  120A  118A  2406  120A  118A  	fcall	_floor
  1096  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1097  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1098  058B  085F               	movf	?_floor,w
  1099  058C  00EB               	movwf	round_to_one_decimal@rounded_num
  1100  058D  0860               	movf	?_floor+1,w
  1101  058E  00EC               	movwf	round_to_one_decimal@rounded_num+1
  1102  058F  0861               	movf	?_floor+2,w
  1103  0590  00ED               	movwf	round_to_one_decimal@rounded_num+2
  1104                           
  1105                           ;LE5-2.c: 39: return rounded_num/1000.0;
  1106  0591  3000               	movlw	0
  1107  0592  00F8               	movwf	___ftdiv@f2
  1108  0593  307A               	movlw	122
  1109  0594  00F9               	movwf	___ftdiv@f2+1
  1110  0595  3044               	movlw	68
  1111  0596  00FA               	movwf	___ftdiv@f2+2
  1112  0597  086B               	movf	round_to_one_decimal@rounded_num,w
  1113  0598  00FB               	movwf	___ftdiv@f1
  1114  0599  086C               	movf	round_to_one_decimal@rounded_num+1,w
  1115  059A  00FC               	movwf	___ftdiv@f1+1
  1116  059B  086D               	movf	round_to_one_decimal@rounded_num+2,w
  1117  059C  00FD               	movwf	___ftdiv@f1+2
  1118  059D  120A  118A  2350   	fcall	___ftdiv
  1119  05A0  0878               	movf	?___ftdiv,w
  1120  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  1121  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  1122  05A3  00E8               	movwf	?_round_to_one_decimal
  1123  05A4  0879               	movf	?___ftdiv+1,w
  1124  05A5  00E9               	movwf	?_round_to_one_decimal+1
  1125  05A6  087A               	movf	?___ftdiv+2,w
  1126  05A7  00EA               	movwf	?_round_to_one_decimal+2
  1127  05A8  0008               	return
  1128  05A9                     __end_of_round_to_one_decimal:	
  1129                           
  1130                           	psect	text3
  1131  0611                     __ptext3:	
  1132 ;; *************** function _round *****************
  1133 ;; Defined at:
  1134 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\round.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  x               3   63[BANK0 ] float 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  f               3   66[BANK0 ] float 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  3   63[BANK0 ] float 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         0       3       0       0       0
  1149 ;;      Locals:         0       3       0       0       0
  1150 ;;      Temps:          0       0       0       0       0
  1151 ;;      Totals:         0       6       0       0       0
  1152 ;;Total ram usage:        6 bytes
  1153 ;; Hardware stack levels used:    1
  1154 ;; Hardware stack levels required when called:    3
  1155 ;; This function calls:
  1156 ;;		___ftadd
  1157 ;;		___ftneg
  1158 ;;		_trunc
  1159 ;; This function is called by:
  1160 ;;		_round_to_one_decimal
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           
  1165                           ;psect for function _round
  1166  0611                     _round:	
  1167                           
  1168                           ;incstack = 0
  1169                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1170  0611  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0612  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0613  085F               	movf	round@x,w
  1173  0614  00D2               	movwf	___ftadd@f1
  1174  0615  0860               	movf	round@x+1,w
  1175  0616  00D3               	movwf	___ftadd@f1+1
  1176  0617  0861               	movf	round@x+2,w
  1177  0618  00D4               	movwf	___ftadd@f1+2
  1178  0619  085F               	movf	round@x,w
  1179  061A  00C6               	movwf	trunc@x
  1180  061B  0860               	movf	round@x+1,w
  1181  061C  00C7               	movwf	trunc@x+1
  1182  061D  0861               	movf	round@x+2,w
  1183  061E  00C8               	movwf	trunc@x+2
  1184  061F  120A  118A  271D  120A  118A  	fcall	_trunc
  1185  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0626  0846               	movf	?_trunc,w
  1188  0627  00CF               	movwf	___ftneg@f1
  1189  0628  0847               	movf	?_trunc+1,w
  1190  0629  00D0               	movwf	___ftneg@f1+1
  1191  062A  0848               	movf	?_trunc+2,w
  1192  062B  00D1               	movwf	___ftneg@f1+2
  1193  062C  120A  158A  279E  120A  118A  	fcall	___ftneg
  1194  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1195  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1196  0633  084F               	movf	?___ftneg,w
  1197  0634  00D5               	movwf	___ftadd@f2
  1198  0635  0850               	movf	?___ftneg+1,w
  1199  0636  00D6               	movwf	___ftadd@f2+1
  1200  0637  0851               	movf	?___ftneg+2,w
  1201  0638  00D7               	movwf	___ftadd@f2+2
  1202  0639  120A  118A  2174  120A  118A  	fcall	___ftadd
  1203  063E  1283               	bcf	3,5	;RP0=0, select bank0
  1204  063F  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0640  0852               	movf	?___ftadd,w
  1206  0641  00E2               	movwf	round@f
  1207  0642  0853               	movf	?___ftadd+1,w
  1208  0643  00E3               	movwf	round@f+1
  1209  0644  0854               	movf	?___ftadd+2,w
  1210  0645  00E4               	movwf	round@f+2
  1211  0646  0862               	movf	round@f,w
  1212  0647  00D2               	movwf	___ftadd@f1
  1213  0648  0863               	movf	round@f+1,w
  1214  0649  00D3               	movwf	___ftadd@f1+1
  1215  064A  0864               	movf	round@f+2,w
  1216  064B  00D4               	movwf	___ftadd@f1+2
  1217  064C  085F               	movf	round@x,w
  1218  064D  00D5               	movwf	___ftadd@f2
  1219  064E  0860               	movf	round@x+1,w
  1220  064F  00D6               	movwf	___ftadd@f2+1
  1221  0650  0861               	movf	round@x+2,w
  1222  0651  00D7               	movwf	___ftadd@f2+2
  1223  0652  120A  118A  2174  120A  118A  	fcall	___ftadd
  1224  0657  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0658  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0659  0852               	movf	?___ftadd,w
  1227  065A  00DF               	movwf	round@x
  1228  065B  0853               	movf	?___ftadd+1,w
  1229  065C  00E0               	movwf	round@x+1
  1230  065D  0854               	movf	?___ftadd+2,w
  1231  065E  00E1               	movwf	round@x+2
  1232  065F  085F               	movf	round@x,w
  1233  0660  00C6               	movwf	trunc@x
  1234  0661  0860               	movf	round@x+1,w
  1235  0662  00C7               	movwf	trunc@x+1
  1236  0663  0861               	movf	round@x+2,w
  1237  0664  00C8               	movwf	trunc@x+2
  1238  0665  120A  118A  271D   	fcall	_trunc
  1239  0668  1283               	bcf	3,5	;RP0=0, select bank0
  1240  0669  1303               	bcf	3,6	;RP1=0, select bank0
  1241  066A  0846               	movf	?_trunc,w
  1242  066B  00DF               	movwf	?_round
  1243  066C  0847               	movf	?_trunc+1,w
  1244  066D  00E0               	movwf	?_round+1
  1245  066E  0848               	movf	?_trunc+2,w
  1246  066F  00E1               	movwf	?_round+2
  1247  0670  0008               	return
  1248  0671                     __end_of_round:	
  1249                           
  1250                           	psect	text4
  1251  071D                     __ptext4:	
  1252 ;; *************** function _trunc *****************
  1253 ;; Defined at:
  1254 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\trunc.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  x               3   38[BANK0 ] float 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  i               3   42[BANK0 ] float 
  1259 ;;  expon           2   45[BANK0 ] int 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  3   38[BANK0 ] int 
  1262 ;; Registers used:
  1263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       3       0       0       0
  1270 ;;      Locals:         0       5       0       0       0
  1271 ;;      Temps:          0       1       0       0       0
  1272 ;;      Totals:         0       9       0       0       0
  1273 ;;Total ram usage:        9 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    2
  1276 ;; This function calls:
  1277 ;;		___altoft
  1278 ;;		___fttol
  1279 ;;		_frexp
  1280 ;; This function is called by:
  1281 ;;		_round
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           
  1286                           ;psect for function _trunc
  1287  071D                     _trunc:	
  1288                           
  1289                           ;incstack = 0
  1290                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1291  071D  1283               	bcf	3,5	;RP0=0, select bank0
  1292  071E  1303               	bcf	3,6	;RP1=0, select bank0
  1293  071F  0846               	movf	trunc@x,w
  1294  0720  00F0               	movwf	frexp@value
  1295  0721  0847               	movf	trunc@x+1,w
  1296  0722  00F1               	movwf	frexp@value+1
  1297  0723  0848               	movf	trunc@x+2,w
  1298  0724  00F2               	movwf	frexp@value+2
  1299  0725  304D               	movlw	trunc@expon& (0+255)
  1300  0726  00C9               	movwf	??_trunc
  1301  0727  0849               	movf	??_trunc,w
  1302  0728  00F3               	movwf	frexp@eptr
  1303  0729  120A  118A  27A9  120A  118A  	fcall	_frexp
  1304  072E  1283               	bcf	3,5	;RP0=0, select bank0
  1305  072F  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0730  1FCE               	btfss	trunc@expon+1,7
  1307  0731  2F39               	goto	i1l1259
  1308  0732  3000               	movlw	0
  1309  0733  00C6               	movwf	?_trunc
  1310  0734  3000               	movlw	0
  1311  0735  00C7               	movwf	?_trunc+1
  1312  0736  3000               	movlw	0
  1313  0737  00C8               	movwf	?_trunc+2
  1314  0738  0008               	return
  1315  0739                     i1l1259:	
  1316  0739  3000               	movlw	0
  1317  073A  024E               	subwf	trunc@expon+1,w
  1318  073B  3015               	movlw	21
  1319  073C  1903               	skipnz
  1320  073D  024D               	subwf	trunc@expon,w
  1321  073E  1803               	btfsc	3,0
  1322  073F  0008               	return
  1323  0740  0846               	movf	trunc@x,w
  1324  0741  00B0               	movwf	___fttol@f1
  1325  0742  0847               	movf	trunc@x+1,w
  1326  0743  00B1               	movwf	___fttol@f1+1
  1327  0744  0848               	movf	trunc@x+2,w
  1328  0745  00B2               	movwf	___fttol@f1+2
  1329  0746  120A  118A  249F  120A  118A  	fcall	___fttol
  1330  074B  1283               	bcf	3,5	;RP0=0, select bank0
  1331  074C  1303               	bcf	3,6	;RP1=0, select bank0
  1332  074D  0833               	movf	?___fttol+3,w
  1333  074E  00C1               	movwf	___altoft@c+3
  1334  074F  0832               	movf	?___fttol+2,w
  1335  0750  00C0               	movwf	___altoft@c+2
  1336  0751  0831               	movf	?___fttol+1,w
  1337  0752  00BF               	movwf	___altoft@c+1
  1338  0753  0830               	movf	?___fttol,w
  1339  0754  00BE               	movwf	___altoft@c
  1340  0755  120A  118A  2767   	fcall	___altoft
  1341  0758  1283               	bcf	3,5	;RP0=0, select bank0
  1342  0759  1303               	bcf	3,6	;RP1=0, select bank0
  1343  075A  083E               	movf	?___altoft,w
  1344  075B  00CA               	movwf	trunc@i
  1345  075C  083F               	movf	?___altoft+1,w
  1346  075D  00CB               	movwf	trunc@i+1
  1347  075E  0840               	movf	?___altoft+2,w
  1348  075F  00CC               	movwf	trunc@i+2
  1349  0760  084A               	movf	trunc@i,w
  1350  0761  00C6               	movwf	?_trunc
  1351  0762  084B               	movf	trunc@i+1,w
  1352  0763  00C7               	movwf	?_trunc+1
  1353  0764  084C               	movf	trunc@i+2,w
  1354  0765  00C8               	movwf	?_trunc+2
  1355  0766  0008               	return
  1356  0767                     __end_of_trunc:	
  1357                           
  1358                           	psect	text5
  1359  0F9E                     __ptext5:	
  1360 ;; *************** function ___ftneg *****************
  1361 ;; Defined at:
  1362 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  1363 ;; Parameters:    Size  Location     Type
  1364 ;;  f1              3   47[BANK0 ] float 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;                  3   47[BANK0 ] float 
  1369 ;; Registers used:
  1370 ;;		wreg
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1376 ;;      Params:         0       3       0       0       0
  1377 ;;      Locals:         0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0
  1379 ;;      Totals:         0       3       0       0       0
  1380 ;;Total ram usage:        3 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_ISR
  1386 ;;		_round
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           
  1390                           
  1391                           ;psect for function ___ftneg
  1392  0F9E                     ___ftneg:	
  1393                           
  1394                           ;incstack = 0
  1395                           ; Regs used in ___ftneg: [wreg]
  1396  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  1398  0FA0  0851               	movf	___ftneg@f1+2,w
  1399  0FA1  0450               	iorwf	___ftneg@f1+1,w
  1400  0FA2  044F               	iorwf	___ftneg@f1,w
  1401  0FA3  1903               	skipnz
  1402  0FA4  0008               	return
  1403  0FA5  3080               	movlw	128
  1404  0FA6  06D1               	xorwf	___ftneg@f1+2,f
  1405  0FA7  0008               	return
  1406  0FA8                     __end_of___ftneg:	
  1407                           
  1408                           	psect	text6
  1409  0406                     __ptext6:	
  1410 ;; *************** function _floor *****************
  1411 ;; Defined at:
  1412 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\floor.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;  x               3   63[BANK0 ] float 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  i               3   67[BANK0 ] float 
  1417 ;;  expon           2   70[BANK0 ] int 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  3   63[BANK0 ] int 
  1420 ;; Registers used:
  1421 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         0       3       0       0       0
  1428 ;;      Locals:         0       5       0       0       0
  1429 ;;      Temps:          0       1       0       0       0
  1430 ;;      Totals:         0       9       0       0       0
  1431 ;;Total ram usage:        9 bytes
  1432 ;; Hardware stack levels used:    1
  1433 ;; Hardware stack levels required when called:    2
  1434 ;; This function calls:
  1435 ;;		___altoft
  1436 ;;		___ftadd
  1437 ;;		___ftge
  1438 ;;		___fttol
  1439 ;;		_frexp
  1440 ;; This function is called by:
  1441 ;;		_round_to_one_decimal
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           
  1446                           ;psect for function _floor
  1447  0406                     _floor:	
  1448                           
  1449                           ;incstack = 0
  1450                           ; Regs used in _floor: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1451  0406  1283               	bcf	3,5	;RP0=0, select bank0
  1452  0407  1303               	bcf	3,6	;RP1=0, select bank0
  1453  0408  085F               	movf	floor@x,w
  1454  0409  00F0               	movwf	frexp@value
  1455  040A  0860               	movf	floor@x+1,w
  1456  040B  00F1               	movwf	frexp@value+1
  1457  040C  0861               	movf	floor@x+2,w
  1458  040D  00F2               	movwf	frexp@value+2
  1459  040E  3066               	movlw	floor@expon& (0+255)
  1460  040F  00E2               	movwf	??_floor
  1461  0410  0862               	movf	??_floor,w
  1462  0411  00F3               	movwf	frexp@eptr
  1463  0412  120A  118A  27A9  120A  118A  	fcall	_frexp
  1464  0417  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0418  1303               	bcf	3,6	;RP1=0, select bank0
  1466  0419  1FE7               	btfss	floor@expon+1,7
  1467  041A  2C40               	goto	i1l1291
  1468  041B  085F               	movf	floor@x,w
  1469  041C  00F0               	movwf	___ftge@ff1
  1470  041D  0860               	movf	floor@x+1,w
  1471  041E  00F1               	movwf	___ftge@ff1+1
  1472  041F  0861               	movf	floor@x+2,w
  1473  0420  00F2               	movwf	___ftge@ff1+2
  1474  0421  3000               	movlw	0
  1475  0422  00F3               	movwf	___ftge@ff2
  1476  0423  3000               	movlw	0
  1477  0424  00F4               	movwf	___ftge@ff2+1
  1478  0425  3000               	movlw	0
  1479  0426  00F5               	movwf	___ftge@ff2+2
  1480  0427  120A  118A  2671  120A  118A  	fcall	___ftge
  1481  042C  1803               	btfsc	3,0
  1482  042D  2C37               	goto	i1l1287
  1483  042E  3000               	movlw	0
  1484  042F  1283               	bcf	3,5	;RP0=0, select bank0
  1485  0430  1303               	bcf	3,6	;RP1=0, select bank0
  1486  0431  00DF               	movwf	?_floor
  1487  0432  3080               	movlw	128
  1488  0433  00E0               	movwf	?_floor+1
  1489  0434  30BF               	movlw	191
  1490  0435  00E1               	movwf	?_floor+2
  1491  0436  0008               	return
  1492  0437                     i1l1287:	
  1493  0437  3000               	movlw	0
  1494  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1496  043A  00DF               	movwf	?_floor
  1497  043B  3000               	movlw	0
  1498  043C  00E0               	movwf	?_floor+1
  1499  043D  3000               	movlw	0
  1500  043E  00E1               	movwf	?_floor+2
  1501  043F  0008               	return
  1502  0440                     i1l1291:	
  1503  0440  3000               	movlw	0
  1504  0441  0267               	subwf	floor@expon+1,w
  1505  0442  3015               	movlw	21
  1506  0443  1903               	skipnz
  1507  0444  0266               	subwf	floor@expon,w
  1508  0445  1803               	btfsc	3,0
  1509  0446  0008               	return
  1510  0447  085F               	movf	floor@x,w
  1511  0448  00B0               	movwf	___fttol@f1
  1512  0449  0860               	movf	floor@x+1,w
  1513  044A  00B1               	movwf	___fttol@f1+1
  1514  044B  0861               	movf	floor@x+2,w
  1515  044C  00B2               	movwf	___fttol@f1+2
  1516  044D  120A  118A  249F  120A  118A  	fcall	___fttol
  1517  0452  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0453  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0454  0833               	movf	?___fttol+3,w
  1520  0455  00C1               	movwf	___altoft@c+3
  1521  0456  0832               	movf	?___fttol+2,w
  1522  0457  00C0               	movwf	___altoft@c+2
  1523  0458  0831               	movf	?___fttol+1,w
  1524  0459  00BF               	movwf	___altoft@c+1
  1525  045A  0830               	movf	?___fttol,w
  1526  045B  00BE               	movwf	___altoft@c
  1527  045C  120A  118A  2767  120A  118A  	fcall	___altoft
  1528  0461  1283               	bcf	3,5	;RP0=0, select bank0
  1529  0462  1303               	bcf	3,6	;RP1=0, select bank0
  1530  0463  083E               	movf	?___altoft,w
  1531  0464  00E3               	movwf	floor@i
  1532  0465  083F               	movf	?___altoft+1,w
  1533  0466  00E4               	movwf	floor@i+1
  1534  0467  0840               	movf	?___altoft+2,w
  1535  0468  00E5               	movwf	floor@i+2
  1536  0469  085F               	movf	floor@x,w
  1537  046A  00F0               	movwf	___ftge@ff1
  1538  046B  0860               	movf	floor@x+1,w
  1539  046C  00F1               	movwf	___ftge@ff1+1
  1540  046D  0861               	movf	floor@x+2,w
  1541  046E  00F2               	movwf	___ftge@ff1+2
  1542  046F  0863               	movf	floor@i,w
  1543  0470  00F3               	movwf	___ftge@ff2
  1544  0471  0864               	movf	floor@i+1,w
  1545  0472  00F4               	movwf	___ftge@ff2+1
  1546  0473  0865               	movf	floor@i+2,w
  1547  0474  00F5               	movwf	___ftge@ff2+2
  1548  0475  120A  118A  2671  120A  118A  	fcall	___ftge
  1549  047A  1803               	btfsc	3,0
  1550  047B  2C96               	goto	i1l1301
  1551  047C  3000               	movlw	0
  1552  047D  1283               	bcf	3,5	;RP0=0, select bank0
  1553  047E  1303               	bcf	3,6	;RP1=0, select bank0
  1554  047F  00D2               	movwf	___ftadd@f1
  1555  0480  3080               	movlw	128
  1556  0481  00D3               	movwf	___ftadd@f1+1
  1557  0482  30BF               	movlw	191
  1558  0483  00D4               	movwf	___ftadd@f1+2
  1559  0484  0863               	movf	floor@i,w
  1560  0485  00D5               	movwf	___ftadd@f2
  1561  0486  0864               	movf	floor@i+1,w
  1562  0487  00D6               	movwf	___ftadd@f2+1
  1563  0488  0865               	movf	floor@i+2,w
  1564  0489  00D7               	movwf	___ftadd@f2+2
  1565  048A  120A  118A  2174   	fcall	___ftadd
  1566  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1567  048E  1303               	bcf	3,6	;RP1=0, select bank0
  1568  048F  0852               	movf	?___ftadd,w
  1569  0490  00DF               	movwf	?_floor
  1570  0491  0853               	movf	?___ftadd+1,w
  1571  0492  00E0               	movwf	?_floor+1
  1572  0493  0854               	movf	?___ftadd+2,w
  1573  0494  00E1               	movwf	?_floor+2
  1574  0495  0008               	return
  1575  0496                     i1l1301:	
  1576  0496  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0497  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0498  0863               	movf	floor@i,w
  1579  0499  00DF               	movwf	?_floor
  1580  049A  0864               	movf	floor@i+1,w
  1581  049B  00E0               	movwf	?_floor+1
  1582  049C  0865               	movf	floor@i+2,w
  1583  049D  00E1               	movwf	?_floor+2
  1584  049E  0008               	return
  1585  049F                     __end_of_floor:	
  1586                           
  1587                           	psect	text7
  1588  07A9                     __ptext7:	
  1589 ;; *************** function _frexp *****************
  1590 ;; Defined at:
  1591 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\frexp.c"
  1592 ;; Parameters:    Size  Location     Type
  1593 ;;  value           3    0[COMMON] int 
  1594 ;;  eptr            1    3[COMMON] PTR int 
  1595 ;;		 -> trunc@expon(2), floor@expon(2), 
  1596 ;; Auto vars:     Size  Location     Type
  1597 ;;		None
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  3    0[COMMON] PTR int 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1607 ;;      Params:         4       0       0       0       0
  1608 ;;      Locals:         0       0       0       0       0
  1609 ;;      Temps:          2       0       0       0       0
  1610 ;;      Totals:         6       0       0       0       0
  1611 ;;Total ram usage:        6 bytes
  1612 ;; Hardware stack levels used:    1
  1613 ;; This function calls:
  1614 ;;		Nothing
  1615 ;; This function is called by:
  1616 ;;		_floor
  1617 ;;		_trunc
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           
  1622                           ;psect for function _frexp
  1623  07A9                     _frexp:	
  1624                           
  1625                           ;incstack = 0
  1626                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  1627  07A9  0872               	movf	frexp@value+2,w
  1628  07AA  0471               	iorwf	frexp@value+1,w
  1629  07AB  0470               	iorwf	frexp@value,w
  1630  07AC  1D03               	skipz
  1631  07AD  2FB5               	goto	i1l1097
  1632  07AE  0873               	movf	frexp@eptr,w
  1633  07AF  0084               	movwf	4
  1634  07B0  1383               	bcf	3,7	;select IRP bank0
  1635  07B1  0180               	clrf	0
  1636  07B2  0A84               	incf	4,f
  1637  07B3  0180               	clrf	0
  1638                           
  1639                           ;	Return value of _frexp is never used
  1640  07B4  0008               	return
  1641  07B5                     i1l1097:	
  1642  07B5  0872               	movf	frexp@value+2,w
  1643  07B6  397F               	andlw	127
  1644  07B7  00F4               	movwf	??_frexp
  1645  07B8  01F5               	clrf	??_frexp+1
  1646  07B9  1003               	clrc
  1647  07BA  0DF4               	rlf	??_frexp,f
  1648  07BB  0DF5               	rlf	??_frexp+1,f
  1649  07BC  0873               	movf	frexp@eptr,w
  1650  07BD  0084               	movwf	4
  1651  07BE  0874               	movf	??_frexp,w
  1652  07BF  1383               	bcf	3,7	;select IRP bank0
  1653  07C0  0080               	movwf	0
  1654  07C1  0A84               	incf	4,f
  1655  07C2  0875               	movf	??_frexp+1,w
  1656  07C3  0080               	movwf	0
  1657  07C4  0D71               	rlf	frexp@value+1,w
  1658  07C5  0D71               	rlf	frexp@value+1,w
  1659  07C6  3901               	andlw	1
  1660  07C7  00F4               	movwf	??_frexp
  1661  07C8  01F5               	clrf	??_frexp+1
  1662  07C9  0873               	movf	frexp@eptr,w
  1663  07CA  0084               	movwf	4
  1664  07CB  0874               	movf	??_frexp,w
  1665  07CC  0480               	iorwf	0,f
  1666  07CD  0A84               	incf	4,f
  1667  07CE  0875               	movf	??_frexp+1,w
  1668  07CF  0480               	iorwf	0,f
  1669  07D0  0873               	movf	frexp@eptr,w
  1670  07D1  0084               	movwf	4
  1671  07D2  3082               	movlw	130
  1672  07D3  0780               	addwf	0,f
  1673  07D4  0F84               	incfsz	4,f
  1674  07D5  0800               	movf	0,w
  1675  07D6  1803               	skipnc
  1676  07D7  0A00               	incf	0,w
  1677  07D8  00FF               	movwf	127
  1678  07D9  30FF               	movlw	255
  1679  07DA  077F               	addwf	127,w
  1680  07DB  0080               	movwf	0
  1681  07DC  0384               	decf	4,f
  1682  07DD  0872               	movf	frexp@value+2,w
  1683  07DE  3980               	andlw	-128
  1684  07DF  383F               	iorlw	63
  1685  07E0  00F2               	movwf	frexp@value+2
  1686  07E1  13F1               	bcf	frexp@value+1,7
  1687  07E2  0008               	return
  1688  07E3                     __end_of_frexp:	
  1689                           ;	Return value of _frexp is never used
  1690                           
  1691                           
  1692                           	psect	text8
  1693  049F                     __ptext8:	
  1694 ;; *************** function ___fttol *****************
  1695 ;; Defined at:
  1696 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  f1              3   16[BANK0 ] float 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  lval            4   25[BANK0 ] unsigned long 
  1701 ;;  exp1            1   29[BANK0 ] unsigned char 
  1702 ;;  sign1           1   24[BANK0 ] unsigned char 
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  4   16[BANK0 ] long 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       4       0       0       0
  1713 ;;      Locals:         0       6       0       0       0
  1714 ;;      Temps:          0       4       0       0       0
  1715 ;;      Totals:         0      14       0       0       0
  1716 ;;Total ram usage:       14 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_round_to_one_decimal
  1722 ;;		_ISR
  1723 ;;		_floor
  1724 ;;		_trunc
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           
  1729                           ;psect for function ___fttol
  1730  049F                     ___fttol:	
  1731                           
  1732                           ;incstack = 0
  1733                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1734  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1735  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1736  04A1  0830               	movf	___fttol@f1,w
  1737  04A2  00B4               	movwf	??___fttol
  1738  04A3  0831               	movf	___fttol@f1+1,w
  1739  04A4  00B5               	movwf	??___fttol+1
  1740  04A5  0832               	movf	___fttol@f1+2,w
  1741  04A6  00B6               	movwf	??___fttol+2
  1742  04A7  1003               	clrc
  1743  04A8  0D35               	rlf	??___fttol+1,w
  1744  04A9  0D36               	rlf	??___fttol+2,w
  1745  04AA  00B7               	movwf	??___fttol+3
  1746  04AB  0837               	movf	??___fttol+3,w
  1747  04AC  00BD               	movwf	___fttol@exp1
  1748  04AD  08BD               	movf	___fttol@exp1,f
  1749  04AE  1D03               	skipz
  1750  04AF  2CB9               	goto	i1l1113
  1751  04B0  3000               	movlw	0
  1752  04B1  00B3               	movwf	?___fttol+3
  1753  04B2  3000               	movlw	0
  1754  04B3  00B2               	movwf	?___fttol+2
  1755  04B4  3000               	movlw	0
  1756  04B5  00B1               	movwf	?___fttol+1
  1757  04B6  3000               	movlw	0
  1758  04B7  00B0               	movwf	?___fttol
  1759  04B8  0008               	return
  1760  04B9                     i1l1113:	
  1761  04B9  0830               	movf	___fttol@f1,w
  1762  04BA  00B4               	movwf	??___fttol
  1763  04BB  0831               	movf	___fttol@f1+1,w
  1764  04BC  00B5               	movwf	??___fttol+1
  1765  04BD  0832               	movf	___fttol@f1+2,w
  1766  04BE  00B6               	movwf	??___fttol+2
  1767  04BF  3017               	movlw	23
  1768  04C0                     u113_25:	
  1769  04C0  1003               	clrc
  1770  04C1  0CB6               	rrf	??___fttol+2,f
  1771  04C2  0CB5               	rrf	??___fttol+1,f
  1772  04C3  0CB4               	rrf	??___fttol,f
  1773  04C4  3EFF               	addlw	-1
  1774  04C5  1D03               	skipz
  1775  04C6  2CC0               	goto	u113_25
  1776  04C7  0834               	movf	??___fttol,w
  1777  04C8  00B7               	movwf	??___fttol+3
  1778  04C9  0837               	movf	??___fttol+3,w
  1779  04CA  00B8               	movwf	___fttol@sign1
  1780  04CB  17B1               	bsf	___fttol@f1+1,7
  1781  04CC  30FF               	movlw	255
  1782  04CD  05B0               	andwf	___fttol@f1,f
  1783  04CE  30FF               	movlw	255
  1784  04CF  05B1               	andwf	___fttol@f1+1,f
  1785  04D0  3000               	movlw	0
  1786  04D1  05B2               	andwf	___fttol@f1+2,f
  1787  04D2  0830               	movf	___fttol@f1,w
  1788  04D3  00B9               	movwf	___fttol@lval
  1789  04D4  0831               	movf	___fttol@f1+1,w
  1790  04D5  00BA               	movwf	___fttol@lval+1
  1791  04D6  0832               	movf	___fttol@f1+2,w
  1792  04D7  00BB               	movwf	___fttol@lval+2
  1793  04D8  01BC               	clrf	___fttol@lval+3
  1794  04D9  308E               	movlw	142
  1795  04DA  02BD               	subwf	___fttol@exp1,f
  1796  04DB  1FBD               	btfss	___fttol@exp1,7
  1797  04DC  2CFB               	goto	i1l1133
  1798  04DD  083D               	movf	___fttol@exp1,w
  1799  04DE  3A80               	xorlw	128
  1800  04DF  3E8F               	addlw	143
  1801  04E0  1803               	skipnc
  1802  04E1  2CEB               	goto	i1l1131
  1803  04E2  3000               	movlw	0
  1804  04E3  00B3               	movwf	?___fttol+3
  1805  04E4  3000               	movlw	0
  1806  04E5  00B2               	movwf	?___fttol+2
  1807  04E6  3000               	movlw	0
  1808  04E7  00B1               	movwf	?___fttol+1
  1809  04E8  3000               	movlw	0
  1810  04E9  00B0               	movwf	?___fttol
  1811  04EA  0008               	return
  1812  04EB                     i1l1131:	
  1813  04EB  3001               	movlw	1
  1814  04EC                     u116_25:	
  1815  04EC  1003               	clrc
  1816  04ED  0CBC               	rrf	___fttol@lval+3,f
  1817  04EE  0CBB               	rrf	___fttol@lval+2,f
  1818  04EF  0CBA               	rrf	___fttol@lval+1,f
  1819  04F0  0CB9               	rrf	___fttol@lval,f
  1820  04F1  3EFF               	addlw	-1
  1821  04F2  1D03               	skipz
  1822  04F3  2CEC               	goto	u116_25
  1823  04F4  3001               	movlw	1
  1824  04F5  00B4               	movwf	??___fttol
  1825  04F6  0834               	movf	??___fttol,w
  1826  04F7  07BD               	addwf	___fttol@exp1,f
  1827  04F8  1903               	btfsc	3,2
  1828  04F9  2D16               	goto	i1l1143
  1829  04FA  2CEB               	goto	i1l1131
  1830  04FB                     i1l1133:	
  1831  04FB  3018               	movlw	24
  1832  04FC  023D               	subwf	___fttol@exp1,w
  1833  04FD  1C03               	skipc
  1834  04FE  2D13               	goto	i1l1141
  1835  04FF  3000               	movlw	0
  1836  0500  00B3               	movwf	?___fttol+3
  1837  0501  3000               	movlw	0
  1838  0502  00B2               	movwf	?___fttol+2
  1839  0503  3000               	movlw	0
  1840  0504  00B1               	movwf	?___fttol+1
  1841  0505  3000               	movlw	0
  1842  0506  00B0               	movwf	?___fttol
  1843  0507  0008               	return
  1844  0508                     i1l1139:	
  1845  0508  3001               	movlw	1
  1846  0509  00B4               	movwf	??___fttol
  1847  050A                     u119_25:	
  1848  050A  1003               	clrc
  1849  050B  0DB9               	rlf	___fttol@lval,f
  1850  050C  0DBA               	rlf	___fttol@lval+1,f
  1851  050D  0DBB               	rlf	___fttol@lval+2,f
  1852  050E  0DBC               	rlf	___fttol@lval+3,f
  1853  050F  0BB4               	decfsz	??___fttol,f
  1854  0510  2D0A               	goto	u119_25
  1855  0511  3001               	movlw	1
  1856  0512  02BD               	subwf	___fttol@exp1,f
  1857  0513                     i1l1141:	
  1858  0513  08BD               	movf	___fttol@exp1,f
  1859  0514  1D03               	skipz
  1860  0515  2D08               	goto	i1l1139
  1861  0516                     i1l1143:	
  1862  0516  0838               	movf	___fttol@sign1,w
  1863  0517  1903               	btfsc	3,2
  1864  0518  2D24               	goto	i1l1147
  1865  0519  09B9               	comf	___fttol@lval,f
  1866  051A  09BA               	comf	___fttol@lval+1,f
  1867  051B  09BB               	comf	___fttol@lval+2,f
  1868  051C  09BC               	comf	___fttol@lval+3,f
  1869  051D  0AB9               	incf	___fttol@lval,f
  1870  051E  1903               	skipnz
  1871  051F  0ABA               	incf	___fttol@lval+1,f
  1872  0520  1903               	skipnz
  1873  0521  0ABB               	incf	___fttol@lval+2,f
  1874  0522  1903               	skipnz
  1875  0523  0ABC               	incf	___fttol@lval+3,f
  1876  0524                     i1l1147:	
  1877  0524  083C               	movf	___fttol@lval+3,w
  1878  0525  00B3               	movwf	?___fttol+3
  1879  0526  083B               	movf	___fttol@lval+2,w
  1880  0527  00B2               	movwf	?___fttol+2
  1881  0528  083A               	movf	___fttol@lval+1,w
  1882  0529  00B1               	movwf	?___fttol+1
  1883  052A  0839               	movf	___fttol@lval,w
  1884  052B  00B0               	movwf	?___fttol
  1885  052C  0008               	return
  1886  052D                     __end_of___fttol:	
  1887                           
  1888                           	psect	text9
  1889  0671                     __ptext9:	
  1890 ;; *************** function ___ftge *****************
  1891 ;; Defined at:
  1892 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  ff1             3    0[COMMON] float 
  1895 ;;  ff2             3    3[COMMON] float 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;		None               void
  1900 ;; Registers used:
  1901 ;;		wreg, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         6       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0
  1909 ;;      Temps:          6       0       0       0       0
  1910 ;;      Totals:        12       0       0       0       0
  1911 ;;Total ram usage:       12 bytes
  1912 ;; Hardware stack levels used:    1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_floor
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           
  1921                           ;psect for function ___ftge
  1922  0671                     ___ftge:	
  1923                           
  1924                           ;incstack = 0
  1925                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  1926  0671  1FF2               	btfss	___ftge@ff1+2,7
  1927  0672  2E98               	goto	i1l1227
  1928  0673  3000               	movlw	0
  1929  0674  00F6               	movwf	??___ftge
  1930  0675  3000               	movlw	0
  1931  0676  00F7               	movwf	??___ftge+1
  1932  0677  3080               	movlw	128
  1933  0678  00F8               	movwf	??___ftge+2
  1934  0679  0970               	comf	___ftge@ff1,w
  1935  067A  00F9               	movwf	??___ftge+3
  1936  067B  0971               	comf	___ftge@ff1+1,w
  1937  067C  00FA               	movwf	??___ftge+4
  1938  067D  0972               	comf	___ftge@ff1+2,w
  1939  067E  00FB               	movwf	??___ftge+5
  1940  067F  0AF9               	incf	??___ftge+3,f
  1941  0680  1903               	skipnz
  1942  0681  0AFA               	incf	??___ftge+4,f
  1943  0682  1903               	skipnz
  1944  0683  0AFB               	incf	??___ftge+5,f
  1945  0684  0879               	movf	??___ftge+3,w
  1946  0685  07F6               	addwf	??___ftge,f
  1947  0686  087A               	movf	??___ftge+4,w
  1948  0687  1803               	skipnc
  1949  0688  0F7A               	incfsz	??___ftge+4,w
  1950  0689  2E8B               	goto	u147_21
  1951  068A  2E8C               	goto	u147_22
  1952  068B                     u147_21:	
  1953  068B  07F7               	addwf	??___ftge+1,f
  1954  068C                     u147_22:	
  1955  068C  087B               	movf	??___ftge+5,w
  1956  068D  1803               	skipnc
  1957  068E  0F7B               	incfsz	??___ftge+5,w
  1958  068F  2E91               	goto	u147_23
  1959  0690  2E92               	goto	u147_24
  1960  0691                     u147_23:	
  1961  0691  07F8               	addwf	??___ftge+2,f
  1962  0692                     u147_24:	
  1963  0692  0876               	movf	??___ftge,w
  1964  0693  00F0               	movwf	___ftge@ff1
  1965  0694  0877               	movf	??___ftge+1,w
  1966  0695  00F1               	movwf	___ftge@ff1+1
  1967  0696  0878               	movf	??___ftge+2,w
  1968  0697  00F2               	movwf	___ftge@ff1+2
  1969  0698                     i1l1227:	
  1970  0698  1FF5               	btfss	___ftge@ff2+2,7
  1971  0699  2EBF               	goto	i1l1231
  1972  069A  3000               	movlw	0
  1973  069B  00F6               	movwf	??___ftge
  1974  069C  3000               	movlw	0
  1975  069D  00F7               	movwf	??___ftge+1
  1976  069E  3080               	movlw	128
  1977  069F  00F8               	movwf	??___ftge+2
  1978  06A0  0973               	comf	___ftge@ff2,w
  1979  06A1  00F9               	movwf	??___ftge+3
  1980  06A2  0974               	comf	___ftge@ff2+1,w
  1981  06A3  00FA               	movwf	??___ftge+4
  1982  06A4  0975               	comf	___ftge@ff2+2,w
  1983  06A5  00FB               	movwf	??___ftge+5
  1984  06A6  0AF9               	incf	??___ftge+3,f
  1985  06A7  1903               	skipnz
  1986  06A8  0AFA               	incf	??___ftge+4,f
  1987  06A9  1903               	skipnz
  1988  06AA  0AFB               	incf	??___ftge+5,f
  1989  06AB  0879               	movf	??___ftge+3,w
  1990  06AC  07F6               	addwf	??___ftge,f
  1991  06AD  087A               	movf	??___ftge+4,w
  1992  06AE  1803               	skipnc
  1993  06AF  0F7A               	incfsz	??___ftge+4,w
  1994  06B0  2EB2               	goto	u149_21
  1995  06B1  2EB3               	goto	u149_22
  1996  06B2                     u149_21:	
  1997  06B2  07F7               	addwf	??___ftge+1,f
  1998  06B3                     u149_22:	
  1999  06B3  087B               	movf	??___ftge+5,w
  2000  06B4  1803               	skipnc
  2001  06B5  0F7B               	incfsz	??___ftge+5,w
  2002  06B6  2EB8               	goto	u149_23
  2003  06B7  2EB9               	goto	u149_24
  2004  06B8                     u149_23:	
  2005  06B8  07F8               	addwf	??___ftge+2,f
  2006  06B9                     u149_24:	
  2007  06B9  0876               	movf	??___ftge,w
  2008  06BA  00F3               	movwf	___ftge@ff2
  2009  06BB  0877               	movf	??___ftge+1,w
  2010  06BC  00F4               	movwf	___ftge@ff2+1
  2011  06BD  0878               	movf	??___ftge+2,w
  2012  06BE  00F5               	movwf	___ftge@ff2+2
  2013  06BF                     i1l1231:	
  2014  06BF  3080               	movlw	128
  2015  06C0  06F2               	xorwf	___ftge@ff1+2,f
  2016  06C1  3080               	movlw	128
  2017  06C2  06F5               	xorwf	___ftge@ff2+2,f
  2018  06C3  0875               	movf	___ftge@ff2+2,w
  2019  06C4  0272               	subwf	___ftge@ff1+2,w
  2020  06C5  1D03               	skipz
  2021  06C6  0008               	return
  2022  06C7  0874               	movf	___ftge@ff2+1,w
  2023  06C8  0271               	subwf	___ftge@ff1+1,w
  2024  06C9  1D03               	skipz
  2025  06CA  0008               	return
  2026  06CB  0873               	movf	___ftge@ff2,w
  2027  06CC  0270               	subwf	___ftge@ff1,w
  2028  06CD  0008               	return
  2029  06CE                     __end_of___ftge:	
  2030                           
  2031                           	psect	text10
  2032  0174                     __ptext10:	
  2033 ;; *************** function ___ftadd *****************
  2034 ;; Defined at:
  2035 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  2036 ;; Parameters:    Size  Location     Type
  2037 ;;  f1              3   50[BANK0 ] float 
  2038 ;;  f2              3   53[BANK0 ] float 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  exp1            1   62[BANK0 ] unsigned char 
  2041 ;;  exp2            1   61[BANK0 ] unsigned char 
  2042 ;;  sign            1   60[BANK0 ] unsigned char 
  2043 ;; Return value:  Size  Location     Type
  2044 ;;                  3   50[BANK0 ] float 
  2045 ;; Registers used:
  2046 ;;		wreg, status,2, status,0, pclath, cstack
  2047 ;; Tracked objects:
  2048 ;;		On entry : 0/0
  2049 ;;		On exit  : 0/0
  2050 ;;		Unchanged: 0/0
  2051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2052 ;;      Params:         0       6       0       0       0
  2053 ;;      Locals:         0       3       0       0       0
  2054 ;;      Temps:          0       4       0       0       0
  2055 ;;      Totals:         0      13       0       0       0
  2056 ;;Total ram usage:       13 bytes
  2057 ;; Hardware stack levels used:    1
  2058 ;; Hardware stack levels required when called:    1
  2059 ;; This function calls:
  2060 ;;		___ftpack
  2061 ;; This function is called by:
  2062 ;;		_ISR
  2063 ;;		_floor
  2064 ;;		_round
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function ___ftadd
  2070  0174                     ___ftadd:	
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  2074  0174  1283               	bcf	3,5	;RP0=0, select bank0
  2075  0175  1303               	bcf	3,6	;RP1=0, select bank0
  2076  0176  0852               	movf	___ftadd@f1,w
  2077  0177  00D8               	movwf	??___ftadd
  2078  0178  0853               	movf	___ftadd@f1+1,w
  2079  0179  00D9               	movwf	??___ftadd+1
  2080  017A  0854               	movf	___ftadd@f1+2,w
  2081  017B  00DA               	movwf	??___ftadd+2
  2082  017C  1003               	clrc
  2083  017D  0D59               	rlf	??___ftadd+1,w
  2084  017E  0D5A               	rlf	??___ftadd+2,w
  2085  017F  00DB               	movwf	??___ftadd+3
  2086  0180  085B               	movf	??___ftadd+3,w
  2087  0181  00DE               	movwf	___ftadd@exp1
  2088  0182  0855               	movf	___ftadd@f2,w
  2089  0183  00D8               	movwf	??___ftadd
  2090  0184  0856               	movf	___ftadd@f2+1,w
  2091  0185  00D9               	movwf	??___ftadd+1
  2092  0186  0857               	movf	___ftadd@f2+2,w
  2093  0187  00DA               	movwf	??___ftadd+2
  2094  0188  1003               	clrc
  2095  0189  0D59               	rlf	??___ftadd+1,w
  2096  018A  0D5A               	rlf	??___ftadd+2,w
  2097  018B  00DB               	movwf	??___ftadd+3
  2098  018C  085B               	movf	??___ftadd+3,w
  2099  018D  00DD               	movwf	___ftadd@exp2
  2100  018E  085E               	movf	___ftadd@exp1,w
  2101  018F  1903               	btfsc	3,2
  2102  0190  299D               	goto	i1l1159
  2103  0191  085D               	movf	___ftadd@exp2,w
  2104  0192  025E               	subwf	___ftadd@exp1,w
  2105  0193  1803               	skipnc
  2106  0194  29A4               	goto	i1l1163
  2107  0195  035E               	decf	___ftadd@exp1,w
  2108  0196  3AFF               	xorlw	255
  2109  0197  075D               	addwf	___ftadd@exp2,w
  2110  0198  00D8               	movwf	??___ftadd
  2111  0199  3019               	movlw	25
  2112  019A  0258               	subwf	??___ftadd,w
  2113  019B  1C03               	skipc
  2114  019C  29A4               	goto	i1l1163
  2115  019D                     i1l1159:	
  2116  019D  0855               	movf	___ftadd@f2,w
  2117  019E  00D2               	movwf	?___ftadd
  2118  019F  0856               	movf	___ftadd@f2+1,w
  2119  01A0  00D3               	movwf	?___ftadd+1
  2120  01A1  0857               	movf	___ftadd@f2+2,w
  2121  01A2  00D4               	movwf	?___ftadd+2
  2122  01A3  0008               	return
  2123  01A4                     i1l1163:	
  2124  01A4  085D               	movf	___ftadd@exp2,w
  2125  01A5  1903               	btfsc	3,2
  2126  01A6  0008               	return
  2127  01A7  085E               	movf	___ftadd@exp1,w
  2128  01A8  025D               	subwf	___ftadd@exp2,w
  2129  01A9  1803               	skipnc
  2130  01AA  29B3               	goto	i1l1169
  2131  01AB  035D               	decf	___ftadd@exp2,w
  2132  01AC  3AFF               	xorlw	255
  2133  01AD  075E               	addwf	___ftadd@exp1,w
  2134  01AE  00D8               	movwf	??___ftadd
  2135  01AF  3019               	movlw	25
  2136  01B0  0258               	subwf	??___ftadd,w
  2137  01B1  1803               	btfsc	3,0
  2138  01B2  0008               	return
  2139  01B3                     i1l1169:	
  2140  01B3  3006               	movlw	6
  2141  01B4  00D8               	movwf	??___ftadd
  2142  01B5  0858               	movf	??___ftadd,w
  2143  01B6  00DC               	movwf	___ftadd@sign
  2144  01B7  1BD4               	btfsc	___ftadd@f1+2,7
  2145  01B8  17DC               	bsf	___ftadd@sign,7
  2146  01B9  1BD7               	btfsc	___ftadd@f2+2,7
  2147  01BA  175C               	bsf	___ftadd@sign,6
  2148  01BB  17D3               	bsf	___ftadd@f1+1,7
  2149  01BC  30FF               	movlw	255
  2150  01BD  05D2               	andwf	___ftadd@f1,f
  2151  01BE  30FF               	movlw	255
  2152  01BF  05D3               	andwf	___ftadd@f1+1,f
  2153  01C0  3000               	movlw	0
  2154  01C1  05D4               	andwf	___ftadd@f1+2,f
  2155  01C2  17D6               	bsf	___ftadd@f2+1,7
  2156  01C3  30FF               	movlw	255
  2157  01C4  05D5               	andwf	___ftadd@f2,f
  2158  01C5  30FF               	movlw	255
  2159  01C6  05D6               	andwf	___ftadd@f2+1,f
  2160  01C7  3000               	movlw	0
  2161  01C8  05D7               	andwf	___ftadd@f2+2,f
  2162  01C9  085D               	movf	___ftadd@exp2,w
  2163  01CA  025E               	subwf	___ftadd@exp1,w
  2164  01CB  1803               	skipnc
  2165  01CC  29F3               	goto	i1l1191
  2166  01CD                     i1l1181:	
  2167  01CD  3001               	movlw	1
  2168  01CE                     u131_25:	
  2169  01CE  1003               	clrc
  2170  01CF  0DD5               	rlf	___ftadd@f2,f
  2171  01D0  0DD6               	rlf	___ftadd@f2+1,f
  2172  01D1  0DD7               	rlf	___ftadd@f2+2,f
  2173  01D2  3EFF               	addlw	-1
  2174  01D3  1D03               	skipz
  2175  01D4  29CE               	goto	u131_25
  2176  01D5  3001               	movlw	1
  2177  01D6  02DD               	subwf	___ftadd@exp2,f
  2178  01D7  085D               	movf	___ftadd@exp2,w
  2179  01D8  065E               	xorwf	___ftadd@exp1,w
  2180  01D9  1903               	skipnz
  2181  01DA  29EE               	goto	i1l1189
  2182  01DB  3001               	movlw	1
  2183  01DC  02DC               	subwf	___ftadd@sign,f
  2184  01DD  085C               	movf	___ftadd@sign,w
  2185  01DE  3907               	andlw	7
  2186  01DF  1903               	btfsc	3,2
  2187  01E0  29EE               	goto	i1l1189
  2188  01E1  29CD               	goto	i1l1181
  2189  01E2                     i1l1187:	
  2190  01E2  3001               	movlw	1
  2191  01E3                     u134_25:	
  2192  01E3  1003               	clrc
  2193  01E4  0CD4               	rrf	___ftadd@f1+2,f
  2194  01E5  0CD3               	rrf	___ftadd@f1+1,f
  2195  01E6  0CD2               	rrf	___ftadd@f1,f
  2196  01E7  3EFF               	addlw	-1
  2197  01E8  1D03               	skipz
  2198  01E9  29E3               	goto	u134_25
  2199  01EA  3001               	movlw	1
  2200  01EB  00D8               	movwf	??___ftadd
  2201  01EC  0858               	movf	??___ftadd,w
  2202  01ED  07DE               	addwf	___ftadd@exp1,f
  2203  01EE                     i1l1189:	
  2204  01EE  085E               	movf	___ftadd@exp1,w
  2205  01EF  065D               	xorwf	___ftadd@exp2,w
  2206  01F0  1903               	btfsc	3,2
  2207  01F1  2A1C               	goto	i1l358
  2208  01F2  29E2               	goto	i1l1187
  2209  01F3                     i1l1191:	
  2210  01F3  085E               	movf	___ftadd@exp1,w
  2211  01F4  025D               	subwf	___ftadd@exp2,w
  2212  01F5  1803               	skipnc
  2213  01F6  2A1C               	goto	i1l358
  2214  01F7                     i1l1193:	
  2215  01F7  3001               	movlw	1
  2216  01F8                     u137_25:	
  2217  01F8  1003               	clrc
  2218  01F9  0DD2               	rlf	___ftadd@f1,f
  2219  01FA  0DD3               	rlf	___ftadd@f1+1,f
  2220  01FB  0DD4               	rlf	___ftadd@f1+2,f
  2221  01FC  3EFF               	addlw	-1
  2222  01FD  1D03               	skipz
  2223  01FE  29F8               	goto	u137_25
  2224  01FF  3001               	movlw	1
  2225  0200  02DE               	subwf	___ftadd@exp1,f
  2226  0201  085D               	movf	___ftadd@exp2,w
  2227  0202  065E               	xorwf	___ftadd@exp1,w
  2228  0203  1903               	skipnz
  2229  0204  2A18               	goto	i1l1201
  2230  0205  3001               	movlw	1
  2231  0206  02DC               	subwf	___ftadd@sign,f
  2232  0207  085C               	movf	___ftadd@sign,w
  2233  0208  3907               	andlw	7
  2234  0209  1903               	btfsc	3,2
  2235  020A  2A18               	goto	i1l1201
  2236  020B  29F7               	goto	i1l1193
  2237  020C                     i1l1199:	
  2238  020C  3001               	movlw	1
  2239  020D                     u140_25:	
  2240  020D  1003               	clrc
  2241  020E  0CD7               	rrf	___ftadd@f2+2,f
  2242  020F  0CD6               	rrf	___ftadd@f2+1,f
  2243  0210  0CD5               	rrf	___ftadd@f2,f
  2244  0211  3EFF               	addlw	-1
  2245  0212  1D03               	skipz
  2246  0213  2A0D               	goto	u140_25
  2247  0214  3001               	movlw	1
  2248  0215  00D8               	movwf	??___ftadd
  2249  0216  0858               	movf	??___ftadd,w
  2250  0217  07DD               	addwf	___ftadd@exp2,f
  2251  0218                     i1l1201:	
  2252  0218  085E               	movf	___ftadd@exp1,w
  2253  0219  065D               	xorwf	___ftadd@exp2,w
  2254  021A  1D03               	skipz
  2255  021B  2A0C               	goto	i1l1199
  2256  021C                     i1l358:	
  2257  021C  1FDC               	btfss	___ftadd@sign,7
  2258  021D  2A2E               	goto	i1l1205
  2259  021E  30FF               	movlw	255
  2260  021F  06D2               	xorwf	___ftadd@f1,f
  2261  0220  30FF               	movlw	255
  2262  0221  06D3               	xorwf	___ftadd@f1+1,f
  2263  0222  30FF               	movlw	255
  2264  0223  06D4               	xorwf	___ftadd@f1+2,f
  2265  0224  3001               	movlw	1
  2266  0225  07D2               	addwf	___ftadd@f1,f
  2267  0226  3000               	movlw	0
  2268  0227  1803               	skipnc
  2269  0228  3001               	movlw	1
  2270  0229  07D3               	addwf	___ftadd@f1+1,f
  2271  022A  3000               	movlw	0
  2272  022B  1803               	skipnc
  2273  022C  3001               	movlw	1
  2274  022D  07D4               	addwf	___ftadd@f1+2,f
  2275  022E                     i1l1205:	
  2276  022E  1F5C               	btfss	___ftadd@sign,6
  2277  022F  2A40               	goto	i1l1209
  2278  0230  30FF               	movlw	255
  2279  0231  06D5               	xorwf	___ftadd@f2,f
  2280  0232  30FF               	movlw	255
  2281  0233  06D6               	xorwf	___ftadd@f2+1,f
  2282  0234  30FF               	movlw	255
  2283  0235  06D7               	xorwf	___ftadd@f2+2,f
  2284  0236  3001               	movlw	1
  2285  0237  07D5               	addwf	___ftadd@f2,f
  2286  0238  3000               	movlw	0
  2287  0239  1803               	skipnc
  2288  023A  3001               	movlw	1
  2289  023B  07D6               	addwf	___ftadd@f2+1,f
  2290  023C  3000               	movlw	0
  2291  023D  1803               	skipnc
  2292  023E  3001               	movlw	1
  2293  023F  07D7               	addwf	___ftadd@f2+2,f
  2294  0240                     i1l1209:	
  2295  0240  01DC               	clrf	___ftadd@sign
  2296  0241  0852               	movf	___ftadd@f1,w
  2297  0242  07D5               	addwf	___ftadd@f2,f
  2298  0243  0853               	movf	___ftadd@f1+1,w
  2299  0244  1103               	clrz
  2300  0245  1803               	skipnc
  2301  0246  0A53               	incf	___ftadd@f1+1,w
  2302  0247  1D03               	btfss	3,2
  2303  0248  07D6               	addwf	___ftadd@f2+1,f
  2304  0249  0854               	movf	___ftadd@f1+2,w
  2305  024A  1103               	clrz
  2306  024B  1803               	skipnc
  2307  024C  0A54               	incf	___ftadd@f1+2,w
  2308  024D  1D03               	btfss	3,2
  2309  024E  07D7               	addwf	___ftadd@f2+2,f
  2310  024F  1FD7               	btfss	___ftadd@f2+2,7
  2311  0250  2A63               	goto	i1l1219
  2312  0251  30FF               	movlw	255
  2313  0252  06D5               	xorwf	___ftadd@f2,f
  2314  0253  30FF               	movlw	255
  2315  0254  06D6               	xorwf	___ftadd@f2+1,f
  2316  0255  30FF               	movlw	255
  2317  0256  06D7               	xorwf	___ftadd@f2+2,f
  2318  0257  3001               	movlw	1
  2319  0258  07D5               	addwf	___ftadd@f2,f
  2320  0259  3000               	movlw	0
  2321  025A  1803               	skipnc
  2322  025B  3001               	movlw	1
  2323  025C  07D6               	addwf	___ftadd@f2+1,f
  2324  025D  3000               	movlw	0
  2325  025E  1803               	skipnc
  2326  025F  3001               	movlw	1
  2327  0260  07D7               	addwf	___ftadd@f2+2,f
  2328  0261  01DC               	clrf	___ftadd@sign
  2329  0262  0ADC               	incf	___ftadd@sign,f
  2330  0263                     i1l1219:	
  2331  0263  0855               	movf	___ftadd@f2,w
  2332  0264  00F0               	movwf	___ftpack@arg
  2333  0265  0856               	movf	___ftadd@f2+1,w
  2334  0266  00F1               	movwf	___ftpack@arg+1
  2335  0267  0857               	movf	___ftadd@f2+2,w
  2336  0268  00F2               	movwf	___ftpack@arg+2
  2337  0269  085E               	movf	___ftadd@exp1,w
  2338  026A  00D8               	movwf	??___ftadd
  2339  026B  0858               	movf	??___ftadd,w
  2340  026C  00F3               	movwf	___ftpack@exp
  2341  026D  085C               	movf	___ftadd@sign,w
  2342  026E  00D9               	movwf	??___ftadd+1
  2343  026F  0859               	movf	??___ftadd+1,w
  2344  0270  00F4               	movwf	___ftpack@sign
  2345  0271  120A  118A  25A9   	fcall	___ftpack
  2346  0274  0870               	movf	?___ftpack,w
  2347  0275  1283               	bcf	3,5	;RP0=0, select bank0
  2348  0276  1303               	bcf	3,6	;RP1=0, select bank0
  2349  0277  00D2               	movwf	?___ftadd
  2350  0278  0871               	movf	?___ftpack+1,w
  2351  0279  00D3               	movwf	?___ftadd+1
  2352  027A  0872               	movf	?___ftpack+2,w
  2353  027B  00D4               	movwf	?___ftadd+2
  2354  027C  0008               	return
  2355  027D                     __end_of___ftadd:	
  2356                           
  2357                           	psect	text11
  2358  0767                     __ptext11:	
  2359 ;; *************** function ___altoft *****************
  2360 ;; Defined at:
  2361 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\altoft.c"
  2362 ;; Parameters:    Size  Location     Type
  2363 ;;  c               4   30[BANK0 ] long 
  2364 ;; Auto vars:     Size  Location     Type
  2365 ;;  sign            1   37[BANK0 ] unsigned char 
  2366 ;;  exp             1   36[BANK0 ] unsigned char 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  3   30[BANK0 ] float 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, pclath, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2376 ;;      Params:         0       4       0       0       0
  2377 ;;      Locals:         0       2       0       0       0
  2378 ;;      Temps:          0       2       0       0       0
  2379 ;;      Totals:         0       8       0       0       0
  2380 ;;Total ram usage:        8 bytes
  2381 ;; Hardware stack levels used:    1
  2382 ;; Hardware stack levels required when called:    1
  2383 ;; This function calls:
  2384 ;;		___ftpack
  2385 ;; This function is called by:
  2386 ;;		_floor
  2387 ;;		_trunc
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           
  2392                           ;psect for function ___altoft
  2393  0767                     ___altoft:	
  2394                           
  2395                           ;incstack = 0
  2396                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  2397  0767  1283               	bcf	3,5	;RP0=0, select bank0
  2398  0768  1303               	bcf	3,6	;RP1=0, select bank0
  2399  0769  01C5               	clrf	___altoft@sign
  2400  076A  308E               	movlw	142
  2401  076B  00C2               	movwf	??___altoft
  2402  076C  0842               	movf	??___altoft,w
  2403  076D  00C4               	movwf	___altoft@exp
  2404  076E  1FC1               	btfss	___altoft@c+3,7
  2405  076F  2F7D               	goto	i1l1085
  2406  0770  09BE               	comf	___altoft@c,f
  2407  0771  09BF               	comf	___altoft@c+1,f
  2408  0772  09C0               	comf	___altoft@c+2,f
  2409  0773  09C1               	comf	___altoft@c+3,f
  2410  0774  0ABE               	incf	___altoft@c,f
  2411  0775  1903               	skipnz
  2412  0776  0ABF               	incf	___altoft@c+1,f
  2413  0777  1903               	skipnz
  2414  0778  0AC0               	incf	___altoft@c+2,f
  2415  0779  1903               	skipnz
  2416  077A  0AC1               	incf	___altoft@c+3,f
  2417  077B  01C5               	clrf	___altoft@sign
  2418  077C  0AC5               	incf	___altoft@sign,f
  2419  077D                     i1l1085:	
  2420  077D  30FF               	movlw	255
  2421  077E  0541               	andwf	___altoft@c+3,w
  2422  077F  1903               	btfsc	3,2
  2423  0780  2F8F               	goto	i1l1087
  2424  0781  3001               	movlw	1
  2425  0782                     u109_25:	
  2426  0782  1003               	clrc
  2427  0783  0CC1               	rrf	___altoft@c+3,f
  2428  0784  0CC0               	rrf	___altoft@c+2,f
  2429  0785  0CBF               	rrf	___altoft@c+1,f
  2430  0786  0CBE               	rrf	___altoft@c,f
  2431  0787  3EFF               	addlw	-1
  2432  0788  1D03               	skipz
  2433  0789  2F82               	goto	u109_25
  2434  078A  3001               	movlw	1
  2435  078B  00C2               	movwf	??___altoft
  2436  078C  0842               	movf	??___altoft,w
  2437  078D  07C4               	addwf	___altoft@exp,f
  2438  078E  2F7D               	goto	i1l1085
  2439  078F                     i1l1087:	
  2440  078F  083E               	movf	___altoft@c,w
  2441  0790  00F0               	movwf	___ftpack@arg
  2442  0791  083F               	movf	___altoft@c+1,w
  2443  0792  00F1               	movwf	___ftpack@arg+1
  2444  0793  0840               	movf	___altoft@c+2,w
  2445  0794  00F2               	movwf	___ftpack@arg+2
  2446  0795  0844               	movf	___altoft@exp,w
  2447  0796  00C2               	movwf	??___altoft
  2448  0797  0842               	movf	??___altoft,w
  2449  0798  00F3               	movwf	___ftpack@exp
  2450  0799  0845               	movf	___altoft@sign,w
  2451  079A  00C3               	movwf	??___altoft+1
  2452  079B  0843               	movf	??___altoft+1,w
  2453  079C  00F4               	movwf	___ftpack@sign
  2454  079D  120A  118A  25A9   	fcall	___ftpack
  2455  07A0  0870               	movf	?___ftpack,w
  2456  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  2457  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  2458  07A3  00BE               	movwf	?___altoft
  2459  07A4  0871               	movf	?___ftpack+1,w
  2460  07A5  00BF               	movwf	?___altoft+1
  2461  07A6  0872               	movf	?___ftpack+2,w
  2462  07A7  00C0               	movwf	?___altoft+2
  2463  07A8  0008               	return
  2464  07A9                     __end_of___altoft:	
  2465                           
  2466                           	psect	text12
  2467  027D                     __ptext12:	
  2468 ;; *************** function ___ftmul *****************
  2469 ;; Defined at:
  2470 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  f1              3    0[BANK0 ] float 
  2473 ;;  f2              3    3[BANK0 ] float 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  f3_as_produc    3   11[BANK0 ] unsigned um
  2476 ;;  sign            1   15[BANK0 ] unsigned char 
  2477 ;;  cntr            1   14[BANK0 ] unsigned char 
  2478 ;;  exp             1   10[BANK0 ] unsigned char 
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  3    0[BANK0 ] float 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, pclath, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       6       0       0       0
  2489 ;;      Locals:         0       6       0       0       0
  2490 ;;      Temps:          0       4       0       0       0
  2491 ;;      Totals:         0      16       0       0       0
  2492 ;;Total ram usage:       16 bytes
  2493 ;; Hardware stack levels used:    1
  2494 ;; Hardware stack levels required when called:    1
  2495 ;; This function calls:
  2496 ;;		___ftpack
  2497 ;; This function is called by:
  2498 ;;		_round_to_one_decimal
  2499 ;;		_ISR
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           
  2504                           ;psect for function ___ftmul
  2505  027D                     ___ftmul:	
  2506                           
  2507                           ;incstack = 0
  2508                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2509  027D  1283               	bcf	3,5	;RP0=0, select bank0
  2510  027E  1303               	bcf	3,6	;RP1=0, select bank0
  2511  027F  0820               	movf	___ftmul@f1,w
  2512  0280  00A6               	movwf	??___ftmul
  2513  0281  0821               	movf	___ftmul@f1+1,w
  2514  0282  00A7               	movwf	??___ftmul+1
  2515  0283  0822               	movf	___ftmul@f1+2,w
  2516  0284  00A8               	movwf	??___ftmul+2
  2517  0285  1003               	clrc
  2518  0286  0D27               	rlf	??___ftmul+1,w
  2519  0287  0D28               	rlf	??___ftmul+2,w
  2520  0288  00A9               	movwf	??___ftmul+3
  2521  0289  0829               	movf	??___ftmul+3,w
  2522  028A  00AA               	movwf	___ftmul@exp
  2523  028B  08AA               	movf	___ftmul@exp,f
  2524  028C  1D03               	skipz
  2525  028D  2A95               	goto	i1l1391
  2526  028E  3000               	movlw	0
  2527  028F  00A0               	movwf	?___ftmul
  2528  0290  3000               	movlw	0
  2529  0291  00A1               	movwf	?___ftmul+1
  2530  0292  3000               	movlw	0
  2531  0293  00A2               	movwf	?___ftmul+2
  2532  0294  0008               	return
  2533  0295                     i1l1391:	
  2534  0295  0823               	movf	___ftmul@f2,w
  2535  0296  00A6               	movwf	??___ftmul
  2536  0297  0824               	movf	___ftmul@f2+1,w
  2537  0298  00A7               	movwf	??___ftmul+1
  2538  0299  0825               	movf	___ftmul@f2+2,w
  2539  029A  00A8               	movwf	??___ftmul+2
  2540  029B  1003               	clrc
  2541  029C  0D27               	rlf	??___ftmul+1,w
  2542  029D  0D28               	rlf	??___ftmul+2,w
  2543  029E  00A9               	movwf	??___ftmul+3
  2544  029F  0829               	movf	??___ftmul+3,w
  2545  02A0  00AF               	movwf	___ftmul@sign
  2546  02A1  08AF               	movf	___ftmul@sign,f
  2547  02A2  1D03               	skipz
  2548  02A3  2AAB               	goto	i1l1397
  2549  02A4  3000               	movlw	0
  2550  02A5  00A0               	movwf	?___ftmul
  2551  02A6  3000               	movlw	0
  2552  02A7  00A1               	movwf	?___ftmul+1
  2553  02A8  3000               	movlw	0
  2554  02A9  00A2               	movwf	?___ftmul+2
  2555  02AA  0008               	return
  2556  02AB                     i1l1397:	
  2557  02AB  082F               	movf	___ftmul@sign,w
  2558  02AC  3E7B               	addlw	123
  2559  02AD  00A6               	movwf	??___ftmul
  2560  02AE  0826               	movf	??___ftmul,w
  2561  02AF  07AA               	addwf	___ftmul@exp,f
  2562  02B0  0820               	movf	___ftmul@f1,w
  2563  02B1  00A6               	movwf	??___ftmul
  2564  02B2  0821               	movf	___ftmul@f1+1,w
  2565  02B3  00A7               	movwf	??___ftmul+1
  2566  02B4  0822               	movf	___ftmul@f1+2,w
  2567  02B5  00A8               	movwf	??___ftmul+2
  2568  02B6  3010               	movlw	16
  2569  02B7                     u177_25:	
  2570  02B7  1003               	clrc
  2571  02B8  0CA8               	rrf	??___ftmul+2,f
  2572  02B9  0CA7               	rrf	??___ftmul+1,f
  2573  02BA  0CA6               	rrf	??___ftmul,f
  2574  02BB  3EFF               	addlw	-1
  2575  02BC  1D03               	skipz
  2576  02BD  2AB7               	goto	u177_25
  2577  02BE  0826               	movf	??___ftmul,w
  2578  02BF  00A9               	movwf	??___ftmul+3
  2579  02C0  0829               	movf	??___ftmul+3,w
  2580  02C1  00AF               	movwf	___ftmul@sign
  2581  02C2  0823               	movf	___ftmul@f2,w
  2582  02C3  00A6               	movwf	??___ftmul
  2583  02C4  0824               	movf	___ftmul@f2+1,w
  2584  02C5  00A7               	movwf	??___ftmul+1
  2585  02C6  0825               	movf	___ftmul@f2+2,w
  2586  02C7  00A8               	movwf	??___ftmul+2
  2587  02C8  3010               	movlw	16
  2588  02C9                     u178_25:	
  2589  02C9  1003               	clrc
  2590  02CA  0CA8               	rrf	??___ftmul+2,f
  2591  02CB  0CA7               	rrf	??___ftmul+1,f
  2592  02CC  0CA6               	rrf	??___ftmul,f
  2593  02CD  3EFF               	addlw	-1
  2594  02CE  1D03               	skipz
  2595  02CF  2AC9               	goto	u178_25
  2596  02D0  0826               	movf	??___ftmul,w
  2597  02D1  00A9               	movwf	??___ftmul+3
  2598  02D2  0829               	movf	??___ftmul+3,w
  2599  02D3  06AF               	xorwf	___ftmul@sign,f
  2600  02D4  3080               	movlw	128
  2601  02D5  00A6               	movwf	??___ftmul
  2602  02D6  0826               	movf	??___ftmul,w
  2603  02D7  05AF               	andwf	___ftmul@sign,f
  2604  02D8  17A1               	bsf	___ftmul@f1+1,7
  2605  02D9  17A4               	bsf	___ftmul@f2+1,7
  2606  02DA  30FF               	movlw	255
  2607  02DB  05A3               	andwf	___ftmul@f2,f
  2608  02DC  30FF               	movlw	255
  2609  02DD  05A4               	andwf	___ftmul@f2+1,f
  2610  02DE  3000               	movlw	0
  2611  02DF  05A5               	andwf	___ftmul@f2+2,f
  2612  02E0  3000               	movlw	0
  2613  02E1  00AB               	movwf	___ftmul@f3_as_product
  2614  02E2  3000               	movlw	0
  2615  02E3  00AC               	movwf	___ftmul@f3_as_product+1
  2616  02E4  3000               	movlw	0
  2617  02E5  00AD               	movwf	___ftmul@f3_as_product+2
  2618  02E6  3007               	movlw	7
  2619  02E7  00A6               	movwf	??___ftmul
  2620  02E8  0826               	movf	??___ftmul,w
  2621  02E9  00AE               	movwf	___ftmul@cntr
  2622  02EA                     i1l1409:	
  2623  02EA  1C20               	btfss	___ftmul@f1,0
  2624  02EB  2AFA               	goto	i1l1413
  2625  02EC  0823               	movf	___ftmul@f2,w
  2626  02ED  07AB               	addwf	___ftmul@f3_as_product,f
  2627  02EE  0824               	movf	___ftmul@f2+1,w
  2628  02EF  1103               	clrz
  2629  02F0  1803               	skipnc
  2630  02F1  0A24               	incf	___ftmul@f2+1,w
  2631  02F2  1D03               	btfss	3,2
  2632  02F3  07AC               	addwf	___ftmul@f3_as_product+1,f
  2633  02F4  0825               	movf	___ftmul@f2+2,w
  2634  02F5  1103               	clrz
  2635  02F6  1803               	skipnc
  2636  02F7  0A25               	incf	___ftmul@f2+2,w
  2637  02F8  1D03               	btfss	3,2
  2638  02F9  07AD               	addwf	___ftmul@f3_as_product+2,f
  2639  02FA                     i1l1413:	
  2640  02FA  3001               	movlw	1
  2641  02FB                     u181_25:	
  2642  02FB  1003               	clrc
  2643  02FC  0CA2               	rrf	___ftmul@f1+2,f
  2644  02FD  0CA1               	rrf	___ftmul@f1+1,f
  2645  02FE  0CA0               	rrf	___ftmul@f1,f
  2646  02FF  3EFF               	addlw	-1
  2647  0300  1D03               	skipz
  2648  0301  2AFB               	goto	u181_25
  2649  0302  3001               	movlw	1
  2650  0303                     u182_25:	
  2651  0303  1003               	clrc
  2652  0304  0DA3               	rlf	___ftmul@f2,f
  2653  0305  0DA4               	rlf	___ftmul@f2+1,f
  2654  0306  0DA5               	rlf	___ftmul@f2+2,f
  2655  0307  3EFF               	addlw	-1
  2656  0308  1D03               	skipz
  2657  0309  2B03               	goto	u182_25
  2658  030A  3001               	movlw	1
  2659  030B  02AE               	subwf	___ftmul@cntr,f
  2660  030C  1D03               	btfss	3,2
  2661  030D  2AEA               	goto	i1l1409
  2662  030E  3009               	movlw	9
  2663  030F  00A6               	movwf	??___ftmul
  2664  0310  0826               	movf	??___ftmul,w
  2665  0311  00AE               	movwf	___ftmul@cntr
  2666  0312                     i1l1421:	
  2667  0312  1C20               	btfss	___ftmul@f1,0
  2668  0313  2B22               	goto	i1l1425
  2669  0314  0823               	movf	___ftmul@f2,w
  2670  0315  07AB               	addwf	___ftmul@f3_as_product,f
  2671  0316  0824               	movf	___ftmul@f2+1,w
  2672  0317  1103               	clrz
  2673  0318  1803               	skipnc
  2674  0319  0A24               	incf	___ftmul@f2+1,w
  2675  031A  1D03               	btfss	3,2
  2676  031B  07AC               	addwf	___ftmul@f3_as_product+1,f
  2677  031C  0825               	movf	___ftmul@f2+2,w
  2678  031D  1103               	clrz
  2679  031E  1803               	skipnc
  2680  031F  0A25               	incf	___ftmul@f2+2,w
  2681  0320  1D03               	btfss	3,2
  2682  0321  07AD               	addwf	___ftmul@f3_as_product+2,f
  2683  0322                     i1l1425:	
  2684  0322  3001               	movlw	1
  2685  0323                     u186_25:	
  2686  0323  1003               	clrc
  2687  0324  0CA2               	rrf	___ftmul@f1+2,f
  2688  0325  0CA1               	rrf	___ftmul@f1+1,f
  2689  0326  0CA0               	rrf	___ftmul@f1,f
  2690  0327  3EFF               	addlw	-1
  2691  0328  1D03               	skipz
  2692  0329  2B23               	goto	u186_25
  2693  032A  3001               	movlw	1
  2694  032B                     u187_25:	
  2695  032B  1003               	clrc
  2696  032C  0CAD               	rrf	___ftmul@f3_as_product+2,f
  2697  032D  0CAC               	rrf	___ftmul@f3_as_product+1,f
  2698  032E  0CAB               	rrf	___ftmul@f3_as_product,f
  2699  032F  3EFF               	addlw	-1
  2700  0330  1D03               	skipz
  2701  0331  2B2B               	goto	u187_25
  2702  0332  3001               	movlw	1
  2703  0333  02AE               	subwf	___ftmul@cntr,f
  2704  0334  1D03               	btfss	3,2
  2705  0335  2B12               	goto	i1l1421
  2706  0336  082B               	movf	___ftmul@f3_as_product,w
  2707  0337  00F0               	movwf	___ftpack@arg
  2708  0338  082C               	movf	___ftmul@f3_as_product+1,w
  2709  0339  00F1               	movwf	___ftpack@arg+1
  2710  033A  082D               	movf	___ftmul@f3_as_product+2,w
  2711  033B  00F2               	movwf	___ftpack@arg+2
  2712  033C  082A               	movf	___ftmul@exp,w
  2713  033D  00A6               	movwf	??___ftmul
  2714  033E  0826               	movf	??___ftmul,w
  2715  033F  00F3               	movwf	___ftpack@exp
  2716  0340  082F               	movf	___ftmul@sign,w
  2717  0341  00A7               	movwf	??___ftmul+1
  2718  0342  0827               	movf	??___ftmul+1,w
  2719  0343  00F4               	movwf	___ftpack@sign
  2720  0344  120A  118A  25A9   	fcall	___ftpack
  2721  0347  0870               	movf	?___ftpack,w
  2722  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2723  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2724  034A  00A0               	movwf	?___ftmul
  2725  034B  0871               	movf	?___ftpack+1,w
  2726  034C  00A1               	movwf	?___ftmul+1
  2727  034D  0872               	movf	?___ftpack+2,w
  2728  034E  00A2               	movwf	?___ftmul+2
  2729  034F  0008               	return
  2730  0350                     __end_of___ftmul:	
  2731                           
  2732                           	psect	text13
  2733  0350                     __ptext13:	
  2734 ;; *************** function ___ftdiv *****************
  2735 ;; Defined at:
  2736 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;  f2              3    8[COMMON] float 
  2739 ;;  f1              3   11[COMMON] float 
  2740 ;; Auto vars:     Size  Location     Type
  2741 ;;  f3              3    5[BANK0 ] float 
  2742 ;;  sign            1    9[BANK0 ] unsigned char 
  2743 ;;  exp             1    8[BANK0 ] unsigned char 
  2744 ;;  cntr            1    4[BANK0 ] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  3    8[COMMON] float 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0, pclath, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         6       0       0       0       0
  2755 ;;      Locals:         0       6       0       0       0
  2756 ;;      Temps:          0       4       0       0       0
  2757 ;;      Totals:         6      10       0       0       0
  2758 ;;Total ram usage:       16 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    1
  2761 ;; This function calls:
  2762 ;;		___ftpack
  2763 ;; This function is called by:
  2764 ;;		_round_to_one_decimal
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           
  2769                           ;psect for function ___ftdiv
  2770  0350                     ___ftdiv:	
  2771                           
  2772                           ;incstack = 0
  2773                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2774  0350  087B               	movf	___ftdiv@f1,w
  2775  0351  1283               	bcf	3,5	;RP0=0, select bank0
  2776  0352  1303               	bcf	3,6	;RP1=0, select bank0
  2777  0353  00A0               	movwf	??___ftdiv
  2778  0354  087C               	movf	___ftdiv@f1+1,w
  2779  0355  00A1               	movwf	??___ftdiv+1
  2780  0356  087D               	movf	___ftdiv@f1+2,w
  2781  0357  00A2               	movwf	??___ftdiv+2
  2782  0358  1003               	clrc
  2783  0359  0D21               	rlf	??___ftdiv+1,w
  2784  035A  0D22               	rlf	??___ftdiv+2,w
  2785  035B  00A3               	movwf	??___ftdiv+3
  2786  035C  0823               	movf	??___ftdiv+3,w
  2787  035D  00A8               	movwf	___ftdiv@exp
  2788  035E  08A8               	movf	___ftdiv@exp,f
  2789  035F  1D03               	skipz
  2790  0360  2B68               	goto	i1l1349
  2791  0361  3000               	movlw	0
  2792  0362  00F8               	movwf	?___ftdiv
  2793  0363  3000               	movlw	0
  2794  0364  00F9               	movwf	?___ftdiv+1
  2795  0365  3000               	movlw	0
  2796  0366  00FA               	movwf	?___ftdiv+2
  2797  0367  0008               	return
  2798  0368                     i1l1349:	
  2799  0368  0878               	movf	___ftdiv@f2,w
  2800  0369  00A0               	movwf	??___ftdiv
  2801  036A  0879               	movf	___ftdiv@f2+1,w
  2802  036B  00A1               	movwf	??___ftdiv+1
  2803  036C  087A               	movf	___ftdiv@f2+2,w
  2804  036D  00A2               	movwf	??___ftdiv+2
  2805  036E  1003               	clrc
  2806  036F  0D21               	rlf	??___ftdiv+1,w
  2807  0370  0D22               	rlf	??___ftdiv+2,w
  2808  0371  00A3               	movwf	??___ftdiv+3
  2809  0372  0823               	movf	??___ftdiv+3,w
  2810  0373  00A9               	movwf	___ftdiv@sign
  2811  0374  08A9               	movf	___ftdiv@sign,f
  2812  0375  1D03               	skipz
  2813  0376  2B7E               	goto	i1l1355
  2814  0377  3000               	movlw	0
  2815  0378  00F8               	movwf	?___ftdiv
  2816  0379  3000               	movlw	0
  2817  037A  00F9               	movwf	?___ftdiv+1
  2818  037B  3000               	movlw	0
  2819  037C  00FA               	movwf	?___ftdiv+2
  2820  037D  0008               	return
  2821  037E                     i1l1355:	
  2822  037E  3000               	movlw	0
  2823  037F  00A5               	movwf	___ftdiv@f3
  2824  0380  3000               	movlw	0
  2825  0381  00A6               	movwf	___ftdiv@f3+1
  2826  0382  3000               	movlw	0
  2827  0383  00A7               	movwf	___ftdiv@f3+2
  2828  0384  3089               	movlw	137
  2829  0385  0729               	addwf	___ftdiv@sign,w
  2830  0386  00A0               	movwf	??___ftdiv
  2831  0387  0820               	movf	??___ftdiv,w
  2832  0388  02A8               	subwf	___ftdiv@exp,f
  2833  0389  087B               	movf	___ftdiv@f1,w
  2834  038A  00A0               	movwf	??___ftdiv
  2835  038B  087C               	movf	___ftdiv@f1+1,w
  2836  038C  00A1               	movwf	??___ftdiv+1
  2837  038D  087D               	movf	___ftdiv@f1+2,w
  2838  038E  00A2               	movwf	??___ftdiv+2
  2839  038F  3010               	movlw	16
  2840  0390                     u169_25:	
  2841  0390  1003               	clrc
  2842  0391  0CA2               	rrf	??___ftdiv+2,f
  2843  0392  0CA1               	rrf	??___ftdiv+1,f
  2844  0393  0CA0               	rrf	??___ftdiv,f
  2845  0394  3EFF               	addlw	-1
  2846  0395  1D03               	skipz
  2847  0396  2B90               	goto	u169_25
  2848  0397  0820               	movf	??___ftdiv,w
  2849  0398  00A3               	movwf	??___ftdiv+3
  2850  0399  0823               	movf	??___ftdiv+3,w
  2851  039A  00A9               	movwf	___ftdiv@sign
  2852  039B  0878               	movf	___ftdiv@f2,w
  2853  039C  00A0               	movwf	??___ftdiv
  2854  039D  0879               	movf	___ftdiv@f2+1,w
  2855  039E  00A1               	movwf	??___ftdiv+1
  2856  039F  087A               	movf	___ftdiv@f2+2,w
  2857  03A0  00A2               	movwf	??___ftdiv+2
  2858  03A1  3010               	movlw	16
  2859  03A2                     u170_25:	
  2860  03A2  1003               	clrc
  2861  03A3  0CA2               	rrf	??___ftdiv+2,f
  2862  03A4  0CA1               	rrf	??___ftdiv+1,f
  2863  03A5  0CA0               	rrf	??___ftdiv,f
  2864  03A6  3EFF               	addlw	-1
  2865  03A7  1D03               	skipz
  2866  03A8  2BA2               	goto	u170_25
  2867  03A9  0820               	movf	??___ftdiv,w
  2868  03AA  00A3               	movwf	??___ftdiv+3
  2869  03AB  0823               	movf	??___ftdiv+3,w
  2870  03AC  06A9               	xorwf	___ftdiv@sign,f
  2871  03AD  3080               	movlw	128
  2872  03AE  00A0               	movwf	??___ftdiv
  2873  03AF  0820               	movf	??___ftdiv,w
  2874  03B0  05A9               	andwf	___ftdiv@sign,f
  2875  03B1  17FC               	bsf	___ftdiv@f1+1,7
  2876  03B2  30FF               	movlw	255
  2877  03B3  05FB               	andwf	___ftdiv@f1,f
  2878  03B4  30FF               	movlw	255
  2879  03B5  05FC               	andwf	___ftdiv@f1+1,f
  2880  03B6  3000               	movlw	0
  2881  03B7  05FD               	andwf	___ftdiv@f1+2,f
  2882  03B8  17F9               	bsf	___ftdiv@f2+1,7
  2883  03B9  30FF               	movlw	255
  2884  03BA  05F8               	andwf	___ftdiv@f2,f
  2885  03BB  30FF               	movlw	255
  2886  03BC  05F9               	andwf	___ftdiv@f2+1,f
  2887  03BD  3000               	movlw	0
  2888  03BE  05FA               	andwf	___ftdiv@f2+2,f
  2889  03BF  3018               	movlw	24
  2890  03C0  00A0               	movwf	??___ftdiv
  2891  03C1  0820               	movf	??___ftdiv,w
  2892  03C2  00A4               	movwf	___ftdiv@cntr
  2893  03C3                     i1l1369:	
  2894  03C3  3001               	movlw	1
  2895  03C4                     u171_25:	
  2896  03C4  1003               	clrc
  2897  03C5  0DA5               	rlf	___ftdiv@f3,f
  2898  03C6  0DA6               	rlf	___ftdiv@f3+1,f
  2899  03C7  0DA7               	rlf	___ftdiv@f3+2,f
  2900  03C8  3EFF               	addlw	-1
  2901  03C9  1D03               	skipz
  2902  03CA  2BC4               	goto	u171_25
  2903  03CB  087A               	movf	___ftdiv@f2+2,w
  2904  03CC  027D               	subwf	___ftdiv@f1+2,w
  2905  03CD  1D03               	skipz
  2906  03CE  2BD5               	goto	u172_25
  2907  03CF  0879               	movf	___ftdiv@f2+1,w
  2908  03D0  027C               	subwf	___ftdiv@f1+1,w
  2909  03D1  1D03               	skipz
  2910  03D2  2BD5               	goto	u172_25
  2911  03D3  0878               	movf	___ftdiv@f2,w
  2912  03D4  027B               	subwf	___ftdiv@f1,w
  2913  03D5                     u172_25:	
  2914  03D5  1C03               	skipc
  2915  03D6  2BE2               	goto	i1l1377
  2916  03D7  0878               	movf	___ftdiv@f2,w
  2917  03D8  02FB               	subwf	___ftdiv@f1,f
  2918  03D9  0879               	movf	___ftdiv@f2+1,w
  2919  03DA  1C03               	skipc
  2920  03DB  0F79               	incfsz	___ftdiv@f2+1,w
  2921  03DC  02FC               	subwf	___ftdiv@f1+1,f
  2922  03DD  087A               	movf	___ftdiv@f2+2,w
  2923  03DE  1C03               	skipc
  2924  03DF  0A7A               	incf	___ftdiv@f2+2,w
  2925  03E0  02FD               	subwf	___ftdiv@f1+2,f
  2926  03E1  1425               	bsf	___ftdiv@f3,0
  2927  03E2                     i1l1377:	
  2928  03E2  3001               	movlw	1
  2929  03E3                     u173_25:	
  2930  03E3  1003               	clrc
  2931  03E4  0DFB               	rlf	___ftdiv@f1,f
  2932  03E5  0DFC               	rlf	___ftdiv@f1+1,f
  2933  03E6  0DFD               	rlf	___ftdiv@f1+2,f
  2934  03E7  3EFF               	addlw	-1
  2935  03E8  1D03               	skipz
  2936  03E9  2BE3               	goto	u173_25
  2937  03EA  3001               	movlw	1
  2938  03EB  02A4               	subwf	___ftdiv@cntr,f
  2939  03EC  1D03               	btfss	3,2
  2940  03ED  2BC3               	goto	i1l1369
  2941  03EE  0825               	movf	___ftdiv@f3,w
  2942  03EF  00F0               	movwf	___ftpack@arg
  2943  03F0  0826               	movf	___ftdiv@f3+1,w
  2944  03F1  00F1               	movwf	___ftpack@arg+1
  2945  03F2  0827               	movf	___ftdiv@f3+2,w
  2946  03F3  00F2               	movwf	___ftpack@arg+2
  2947  03F4  0828               	movf	___ftdiv@exp,w
  2948  03F5  00A0               	movwf	??___ftdiv
  2949  03F6  0820               	movf	??___ftdiv,w
  2950  03F7  00F3               	movwf	___ftpack@exp
  2951  03F8  0829               	movf	___ftdiv@sign,w
  2952  03F9  00A1               	movwf	??___ftdiv+1
  2953  03FA  0821               	movf	??___ftdiv+1,w
  2954  03FB  00F4               	movwf	___ftpack@sign
  2955  03FC  120A  118A  25A9   	fcall	___ftpack
  2956  03FF  0870               	movf	?___ftpack,w
  2957  0400  00F8               	movwf	?___ftdiv
  2958  0401  0871               	movf	?___ftpack+1,w
  2959  0402  00F9               	movwf	?___ftdiv+1
  2960  0403  0872               	movf	?___ftpack+2,w
  2961  0404  00FA               	movwf	?___ftdiv+2
  2962  0405  0008               	return
  2963  0406                     __end_of___ftdiv:	
  2964                           
  2965                           	psect	text14
  2966  06CE                     __ptext14:	
  2967 ;; *************** function ___awmod *****************
  2968 ;; Defined at:
  2969 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  divisor         2   30[BANK0 ] int 
  2972 ;;  dividend        2   32[BANK0 ] int 
  2973 ;; Auto vars:     Size  Location     Type
  2974 ;;  sign            1   36[BANK0 ] unsigned char 
  2975 ;;  counter         1   35[BANK0 ] unsigned char 
  2976 ;; Return value:  Size  Location     Type
  2977 ;;                  2   30[BANK0 ] int 
  2978 ;; Registers used:
  2979 ;;		wreg, status,2, status,0
  2980 ;; Tracked objects:
  2981 ;;		On entry : 0/0
  2982 ;;		On exit  : 0/0
  2983 ;;		Unchanged: 0/0
  2984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2985 ;;      Params:         0       4       0       0       0
  2986 ;;      Locals:         0       2       0       0       0
  2987 ;;      Temps:          0       1       0       0       0
  2988 ;;      Totals:         0       7       0       0       0
  2989 ;;Total ram usage:        7 bytes
  2990 ;; Hardware stack levels used:    1
  2991 ;; This function calls:
  2992 ;;		Nothing
  2993 ;; This function is called by:
  2994 ;;		_round_to_one_decimal
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           
  2999                           ;psect for function ___awmod
  3000  06CE                     ___awmod:	
  3001                           
  3002                           ;incstack = 0
  3003                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3004  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3005  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3006  06D0  01C4               	clrf	___awmod@sign
  3007  06D1  1FC1               	btfss	___awmod@dividend+1,7
  3008  06D2  2EDA               	goto	i1l1313
  3009  06D3  09C0               	comf	___awmod@dividend,f
  3010  06D4  09C1               	comf	___awmod@dividend+1,f
  3011  06D5  0AC0               	incf	___awmod@dividend,f
  3012  06D6  1903               	skipnz
  3013  06D7  0AC1               	incf	___awmod@dividend+1,f
  3014  06D8  01C4               	clrf	___awmod@sign
  3015  06D9  0AC4               	incf	___awmod@sign,f
  3016  06DA                     i1l1313:	
  3017  06DA  1FBF               	btfss	___awmod@divisor+1,7
  3018  06DB  2EE1               	goto	i1l1317
  3019  06DC  09BE               	comf	___awmod@divisor,f
  3020  06DD  09BF               	comf	___awmod@divisor+1,f
  3021  06DE  0ABE               	incf	___awmod@divisor,f
  3022  06DF  1903               	skipnz
  3023  06E0  0ABF               	incf	___awmod@divisor+1,f
  3024  06E1                     i1l1317:	
  3025  06E1  083F               	movf	___awmod@divisor+1,w
  3026  06E2  043E               	iorwf	___awmod@divisor,w
  3027  06E3  1903               	skipnz
  3028  06E4  2F0E               	goto	i1l1335
  3029  06E5  01C3               	clrf	___awmod@counter
  3030  06E6  0AC3               	incf	___awmod@counter,f
  3031  06E7                     i1l1325:	
  3032  06E7  1BBF               	btfsc	___awmod@divisor+1,7
  3033  06E8  2EF5               	goto	i1l1327
  3034  06E9  3001               	movlw	1
  3035  06EA                     u161_25:	
  3036  06EA  1003               	clrc
  3037  06EB  0DBE               	rlf	___awmod@divisor,f
  3038  06EC  0DBF               	rlf	___awmod@divisor+1,f
  3039  06ED  3EFF               	addlw	-1
  3040  06EE  1D03               	skipz
  3041  06EF  2EEA               	goto	u161_25
  3042  06F0  3001               	movlw	1
  3043  06F1  00C2               	movwf	??___awmod
  3044  06F2  0842               	movf	??___awmod,w
  3045  06F3  07C3               	addwf	___awmod@counter,f
  3046  06F4  2EE7               	goto	i1l1325
  3047  06F5                     i1l1327:	
  3048  06F5  083F               	movf	___awmod@divisor+1,w
  3049  06F6  0241               	subwf	___awmod@dividend+1,w
  3050  06F7  1D03               	skipz
  3051  06F8  2EFB               	goto	u163_25
  3052  06F9  083E               	movf	___awmod@divisor,w
  3053  06FA  0240               	subwf	___awmod@dividend,w
  3054  06FB                     u163_25:	
  3055  06FB  1C03               	skipc
  3056  06FC  2F03               	goto	i1l1331
  3057  06FD  083E               	movf	___awmod@divisor,w
  3058  06FE  02C0               	subwf	___awmod@dividend,f
  3059  06FF  083F               	movf	___awmod@divisor+1,w
  3060  0700  1C03               	skipc
  3061  0701  03C1               	decf	___awmod@dividend+1,f
  3062  0702  02C1               	subwf	___awmod@dividend+1,f
  3063  0703                     i1l1331:	
  3064  0703  3001               	movlw	1
  3065  0704                     u164_25:	
  3066  0704  1003               	clrc
  3067  0705  0CBF               	rrf	___awmod@divisor+1,f
  3068  0706  0CBE               	rrf	___awmod@divisor,f
  3069  0707  3EFF               	addlw	-1
  3070  0708  1D03               	skipz
  3071  0709  2F04               	goto	u164_25
  3072  070A  3001               	movlw	1
  3073  070B  02C3               	subwf	___awmod@counter,f
  3074  070C  1D03               	btfss	3,2
  3075  070D  2EF5               	goto	i1l1327
  3076  070E                     i1l1335:	
  3077  070E  0844               	movf	___awmod@sign,w
  3078  070F  1903               	btfsc	3,2
  3079  0710  2F16               	goto	i1l1339
  3080  0711  09C0               	comf	___awmod@dividend,f
  3081  0712  09C1               	comf	___awmod@dividend+1,f
  3082  0713  0AC0               	incf	___awmod@dividend,f
  3083  0714  1903               	skipnz
  3084  0715  0AC1               	incf	___awmod@dividend+1,f
  3085  0716                     i1l1339:	
  3086  0716  0841               	movf	___awmod@dividend+1,w
  3087  0717  01BF               	clrf	?___awmod+1
  3088  0718  07BF               	addwf	?___awmod+1,f
  3089  0719  0840               	movf	___awmod@dividend,w
  3090  071A  01BE               	clrf	?___awmod
  3091  071B  07BE               	addwf	?___awmod,f
  3092  071C  0008               	return
  3093  071D                     __end_of___awmod:	
  3094                           
  3095                           	psect	text15
  3096  0FD8                     __ptext15:	
  3097 ;; *************** function _readADC *****************
  3098 ;; Defined at:
  3099 ;;		line 23 in file "D:\JinBus\CpE 3201\Practical Activity #5\CpE 3201-LE5-2\LE5-2.c"
  3100 ;; Parameters:    Size  Location     Type
  3101 ;;		None
  3102 ;; Auto vars:     Size  Location     Type
  3103 ;;  temp            2    4[COMMON] int 
  3104 ;; Return value:  Size  Location     Type
  3105 ;;                  2    0[COMMON] int 
  3106 ;; Registers used:
  3107 ;;		wreg, status,2, status,0, btemp+1
  3108 ;; Tracked objects:
  3109 ;;		On entry : 0/0
  3110 ;;		On exit  : 0/0
  3111 ;;		Unchanged: 0/0
  3112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3113 ;;      Params:         2       0       0       0       0
  3114 ;;      Locals:         2       0       0       0       0
  3115 ;;      Temps:          2       0       0       0       0
  3116 ;;      Totals:         6       0       0       0       0
  3117 ;;Total ram usage:        6 bytes
  3118 ;; Hardware stack levels used:    1
  3119 ;; This function calls:
  3120 ;;		Nothing
  3121 ;; This function is called by:
  3122 ;;		_ISR
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _readADC
  3128  0FD8                     _readADC:	
  3129                           
  3130                           ;LE5-2.c: 25: int temp = 0;
  3131                           
  3132                           ;incstack = 0
  3133                           ; Regs used in _readADC: [wreg+status,2+status,0+btemp+1]
  3134  0FD8  01F4               	clrf	readADC@temp
  3135  0FD9  01F5               	clrf	readADC@temp+1
  3136                           
  3137                           ;LE5-2.c: 27: temp = ADRESH;
  3138  0FDA  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0FDB  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0FDC  081E               	movf	30,w	;volatile
  3141  0FDD  00F2               	movwf	??_readADC
  3142  0FDE  01F3               	clrf	??_readADC+1
  3143  0FDF  0872               	movf	??_readADC,w
  3144  0FE0  00F4               	movwf	readADC@temp
  3145  0FE1  0873               	movf	??_readADC+1,w
  3146  0FE2  00F5               	movwf	readADC@temp+1
  3147                           
  3148                           ;LE5-2.c: 28: temp = temp << 8;
  3149  0FE3  0875               	movf	readADC@temp+1,w
  3150  0FE4  00F3               	movwf	??_readADC+1
  3151  0FE5  0874               	movf	readADC@temp,w
  3152  0FE6  00F2               	movwf	??_readADC
  3153  0FE7  0872               	movf	??_readADC,w
  3154  0FE8  00F3               	movwf	??_readADC+1
  3155  0FE9  01F2               	clrf	??_readADC
  3156  0FEA  0872               	movf	??_readADC,w
  3157  0FEB  00F4               	movwf	readADC@temp
  3158  0FEC  0873               	movf	??_readADC+1,w
  3159  0FED  00F5               	movwf	readADC@temp+1
  3160                           
  3161                           ;LE5-2.c: 29: temp = temp | ADRESL;
  3162  0FEE  0874               	movf	readADC@temp,w
  3163  0FEF  1683               	bsf	3,5	;RP0=1, select bank1
  3164  0FF0  1303               	bcf	3,6	;RP1=0, select bank1
  3165  0FF1  041E               	iorwf	30,w	;volatile
  3166  0FF2  00F2               	movwf	??_readADC
  3167  0FF3  0875               	movf	readADC@temp+1,w
  3168  0FF4  00F3               	movwf	??_readADC+1
  3169  0FF5  0872               	movf	??_readADC,w
  3170  0FF6  00F4               	movwf	readADC@temp
  3171  0FF7  0873               	movf	??_readADC+1,w
  3172  0FF8  00F5               	movwf	readADC@temp+1
  3173                           
  3174                           ;LE5-2.c: 30: return temp;
  3175  0FF9  0875               	movf	readADC@temp+1,w
  3176  0FFA  01F1               	clrf	?_readADC+1
  3177  0FFB  07F1               	addwf	?_readADC+1,f
  3178  0FFC  0874               	movf	readADC@temp,w
  3179  0FFD  01F0               	clrf	?_readADC
  3180  0FFE  07F0               	addwf	?_readADC,f
  3181  0FFF  0008               	return
  3182  1000                     __end_of_readADC:	
  3183                           
  3184                           	psect	text16
  3185  0FA8                     __ptext16:	
  3186 ;; *************** function _delay *****************
  3187 ;; Defined at:
  3188 ;;		line 19 in file "D:\JinBus\CpE 3201\Practical Activity #5\CpE 3201-LE5-2\LE5-2.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  cnt             2    0[COMMON] int 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;		None
  3193 ;; Return value:  Size  Location     Type
  3194 ;;		None               void
  3195 ;; Registers used:
  3196 ;;		wreg
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3202 ;;      Params:         2       0       0       0       0
  3203 ;;      Locals:         0       0       0       0       0
  3204 ;;      Temps:          0       0       0       0       0
  3205 ;;      Totals:         2       0       0       0       0
  3206 ;;Total ram usage:        2 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; This function calls:
  3209 ;;		Nothing
  3210 ;; This function is called by:
  3211 ;;		_ISR
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215                           
  3216                           ;psect for function _delay
  3217  0FA8                     _delay:	
  3218  0FA8                     i1l1437:	
  3219                           ;LE5-2.c: 21: while(cnt--);
  3220                           
  3221                           ;incstack = 0
  3222                           ; Regs used in _delay: [wreg]
  3223                           
  3224  0FA8  30FF               	movlw	255
  3225  0FA9  07F0               	addwf	delay@cnt,f
  3226  0FAA  1803               	skipnc
  3227  0FAB  0AF1               	incf	delay@cnt+1,f
  3228  0FAC  30FF               	movlw	255
  3229  0FAD  07F1               	addwf	delay@cnt+1,f
  3230  0FAE  30FF               	movlw	255
  3231  0FAF  0671               	xorwf	delay@cnt+1,w
  3232  0FB0  1D03               	skipz
  3233  0FB1  2FB4               	goto	u189_25
  3234  0FB2  30FF               	movlw	255
  3235  0FB3  0670               	xorwf	delay@cnt,w
  3236  0FB4                     u189_25:	
  3237  0FB4  1903               	btfsc	3,2
  3238  0FB5  0008               	return
  3239  0FB6  2FA8               	goto	i1l1437
  3240  0FB7                     __end_of_delay:	
  3241                           
  3242                           	psect	text17
  3243  0FB7                     __ptext17:	
  3244 ;; *************** function ___awtoft *****************
  3245 ;; Defined at:
  3246 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awtoft.c"
  3247 ;; Parameters:    Size  Location     Type
  3248 ;;  c               2    8[COMMON] int 
  3249 ;; Auto vars:     Size  Location     Type
  3250 ;;  sign            1   13[COMMON] unsigned char 
  3251 ;; Return value:  Size  Location     Type
  3252 ;;                  3    8[COMMON] float 
  3253 ;; Registers used:
  3254 ;;		wreg, status,2, status,0, pclath, cstack
  3255 ;; Tracked objects:
  3256 ;;		On entry : 0/0
  3257 ;;		On exit  : 0/0
  3258 ;;		Unchanged: 0/0
  3259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3260 ;;      Params:         3       0       0       0       0
  3261 ;;      Locals:         1       0       0       0       0
  3262 ;;      Temps:          2       0       0       0       0
  3263 ;;      Totals:         6       0       0       0       0
  3264 ;;Total ram usage:        6 bytes
  3265 ;; Hardware stack levels used:    1
  3266 ;; Hardware stack levels required when called:    1
  3267 ;; This function calls:
  3268 ;;		___ftpack
  3269 ;; This function is called by:
  3270 ;;		_ISR
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           
  3275                           ;psect for function ___awtoft
  3276  0FB7                     ___awtoft:	
  3277                           
  3278                           ;incstack = 0
  3279                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3280  0FB7  01FD               	clrf	___awtoft@sign
  3281  0FB8  1FF9               	btfss	___awtoft@c+1,7
  3282  0FB9  2FC1               	goto	i1l1471
  3283  0FBA  09F8               	comf	___awtoft@c,f
  3284  0FBB  09F9               	comf	___awtoft@c+1,f
  3285  0FBC  0AF8               	incf	___awtoft@c,f
  3286  0FBD  1903               	skipnz
  3287  0FBE  0AF9               	incf	___awtoft@c+1,f
  3288  0FBF  01FD               	clrf	___awtoft@sign
  3289  0FC0  0AFD               	incf	___awtoft@sign,f
  3290  0FC1                     i1l1471:	
  3291  0FC1  0878               	movf	___awtoft@c,w
  3292  0FC2  00F0               	movwf	___ftpack@arg
  3293  0FC3  0879               	movf	___awtoft@c+1,w
  3294  0FC4  00F1               	movwf	___ftpack@arg+1
  3295  0FC5  01F2               	clrf	___ftpack@arg+2
  3296  0FC6  308E               	movlw	142
  3297  0FC7  00FB               	movwf	??___awtoft
  3298  0FC8  087B               	movf	??___awtoft,w
  3299  0FC9  00F3               	movwf	___ftpack@exp
  3300  0FCA  087D               	movf	___awtoft@sign,w
  3301  0FCB  00FC               	movwf	??___awtoft+1
  3302  0FCC  087C               	movf	??___awtoft+1,w
  3303  0FCD  00F4               	movwf	___ftpack@sign
  3304  0FCE  120A  118A  25A9   	fcall	___ftpack
  3305  0FD1  0870               	movf	?___ftpack,w
  3306  0FD2  00F8               	movwf	?___awtoft
  3307  0FD3  0871               	movf	?___ftpack+1,w
  3308  0FD4  00F9               	movwf	?___awtoft+1
  3309  0FD5  0872               	movf	?___ftpack+2,w
  3310  0FD6  00FA               	movwf	?___awtoft+2
  3311  0FD7  0008               	return
  3312  0FD8                     __end_of___awtoft:	
  3313                           
  3314                           	psect	text18
  3315  05A9                     __ptext18:	
  3316 ;; *************** function ___ftpack *****************
  3317 ;; Defined at:
  3318 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  3319 ;; Parameters:    Size  Location     Type
  3320 ;;  arg             3    0[COMMON] unsigned um
  3321 ;;  exp             1    3[COMMON] unsigned char 
  3322 ;;  sign            1    4[COMMON] unsigned char 
  3323 ;; Auto vars:     Size  Location     Type
  3324 ;;		None
  3325 ;; Return value:  Size  Location     Type
  3326 ;;                  3    0[COMMON] float 
  3327 ;; Registers used:
  3328 ;;		wreg, status,2, status,0
  3329 ;; Tracked objects:
  3330 ;;		On entry : 0/0
  3331 ;;		On exit  : 0/0
  3332 ;;		Unchanged: 0/0
  3333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3334 ;;      Params:         5       0       0       0       0
  3335 ;;      Locals:         0       0       0       0       0
  3336 ;;      Temps:          3       0       0       0       0
  3337 ;;      Totals:         8       0       0       0       0
  3338 ;;Total ram usage:        8 bytes
  3339 ;; Hardware stack levels used:    1
  3340 ;; This function calls:
  3341 ;;		Nothing
  3342 ;; This function is called by:
  3343 ;;		___altoft
  3344 ;;		___awtoft
  3345 ;;		___ftadd
  3346 ;;		___ftdiv
  3347 ;;		___ftmul
  3348 ;; This function uses a non-reentrant model
  3349 ;;
  3350                           
  3351                           
  3352                           ;psect for function ___ftpack
  3353  05A9                     ___ftpack:	
  3354                           
  3355                           ;incstack = 0
  3356                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3357  05A9  0873               	movf	___ftpack@exp,w
  3358  05AA  1903               	btfsc	3,2
  3359  05AB  2DB1               	goto	i1l1049
  3360  05AC  0872               	movf	___ftpack@arg+2,w
  3361  05AD  0471               	iorwf	___ftpack@arg+1,w
  3362  05AE  0470               	iorwf	___ftpack@arg,w
  3363  05AF  1D03               	skipz
  3364  05B0  2DC4               	goto	i1l1055
  3365  05B1                     i1l1049:	
  3366  05B1  3000               	movlw	0
  3367  05B2  00F0               	movwf	?___ftpack
  3368  05B3  3000               	movlw	0
  3369  05B4  00F1               	movwf	?___ftpack+1
  3370  05B5  3000               	movlw	0
  3371  05B6  00F2               	movwf	?___ftpack+2
  3372  05B7  0008               	return
  3373  05B8                     i1l1053:	
  3374  05B8  3001               	movlw	1
  3375  05B9  00F5               	movwf	??___ftpack
  3376  05BA  0875               	movf	??___ftpack,w
  3377  05BB  07F3               	addwf	___ftpack@exp,f
  3378  05BC  3001               	movlw	1
  3379  05BD                     u99_25:	
  3380  05BD  1003               	clrc
  3381  05BE  0CF2               	rrf	___ftpack@arg+2,f
  3382  05BF  0CF1               	rrf	___ftpack@arg+1,f
  3383  05C0  0CF0               	rrf	___ftpack@arg,f
  3384  05C1  3EFF               	addlw	-1
  3385  05C2  1D03               	skipz
  3386  05C3  2DBD               	goto	u99_25
  3387  05C4                     i1l1055:	
  3388  05C4  30FE               	movlw	254
  3389  05C5  0572               	andwf	___ftpack@arg+2,w
  3390  05C6  1903               	btfsc	3,2
  3391  05C7  2DDF               	goto	i1l296
  3392  05C8  2DB8               	goto	i1l1053
  3393  05C9                     i1l1057:	
  3394  05C9  3001               	movlw	1
  3395  05CA  00F5               	movwf	??___ftpack
  3396  05CB  0875               	movf	??___ftpack,w
  3397  05CC  07F3               	addwf	___ftpack@exp,f
  3398  05CD  3001               	movlw	1
  3399  05CE  07F0               	addwf	___ftpack@arg,f
  3400  05CF  3000               	movlw	0
  3401  05D0  1803               	skipnc
  3402  05D1  3001               	movlw	1
  3403  05D2  07F1               	addwf	___ftpack@arg+1,f
  3404  05D3  3000               	movlw	0
  3405  05D4  1803               	skipnc
  3406  05D5  3001               	movlw	1
  3407  05D6  07F2               	addwf	___ftpack@arg+2,f
  3408  05D7  3001               	movlw	1
  3409  05D8                     u101_25:	
  3410  05D8  1003               	clrc
  3411  05D9  0CF2               	rrf	___ftpack@arg+2,f
  3412  05DA  0CF1               	rrf	___ftpack@arg+1,f
  3413  05DB  0CF0               	rrf	___ftpack@arg,f
  3414  05DC  3EFF               	addlw	-1
  3415  05DD  1D03               	skipz
  3416  05DE  2DD8               	goto	u101_25
  3417  05DF                     i1l296:	
  3418  05DF  30FF               	movlw	255
  3419  05E0  0572               	andwf	___ftpack@arg+2,w
  3420  05E1  1903               	btfsc	3,2
  3421  05E2  2DEE               	goto	i1l1065
  3422  05E3  2DC9               	goto	i1l1057
  3423  05E4                     i1l1063:	
  3424  05E4  3001               	movlw	1
  3425  05E5  02F3               	subwf	___ftpack@exp,f
  3426  05E6  3001               	movlw	1
  3427  05E7                     u103_25:	
  3428  05E7  1003               	clrc
  3429  05E8  0DF0               	rlf	___ftpack@arg,f
  3430  05E9  0DF1               	rlf	___ftpack@arg+1,f
  3431  05EA  0DF2               	rlf	___ftpack@arg+2,f
  3432  05EB  3EFF               	addlw	-1
  3433  05EC  1D03               	skipz
  3434  05ED  2DE7               	goto	u103_25
  3435  05EE                     i1l1065:	
  3436  05EE  1FF1               	btfss	___ftpack@arg+1,7
  3437  05EF  2DE4               	goto	i1l1063
  3438  05F0  1873               	btfsc	___ftpack@exp,0
  3439  05F1  2DF8               	goto	i1l302
  3440  05F2  30FF               	movlw	255
  3441  05F3  05F0               	andwf	___ftpack@arg,f
  3442  05F4  307F               	movlw	127
  3443  05F5  05F1               	andwf	___ftpack@arg+1,f
  3444  05F6  30FF               	movlw	255
  3445  05F7  05F2               	andwf	___ftpack@arg+2,f
  3446  05F8                     i1l302:	
  3447  05F8  1003               	clrc
  3448  05F9  0CF3               	rrf	___ftpack@exp,f
  3449  05FA  0873               	movf	___ftpack@exp,w
  3450  05FB  00F5               	movwf	??___ftpack
  3451  05FC  01F6               	clrf	??___ftpack+1
  3452  05FD  01F7               	clrf	??___ftpack+2
  3453  05FE  3010               	movlw	16
  3454  05FF                     u106_25:	
  3455  05FF  1003               	clrc
  3456  0600  0DF5               	rlf	??___ftpack,f
  3457  0601  0DF6               	rlf	??___ftpack+1,f
  3458  0602  0DF7               	rlf	??___ftpack+2,f
  3459  0603  3EFF               	addlw	-1
  3460  0604  1D03               	skipz
  3461  0605  2DFF               	goto	u106_25
  3462  0606  0875               	movf	??___ftpack,w
  3463  0607  04F0               	iorwf	___ftpack@arg,f
  3464  0608  0876               	movf	??___ftpack+1,w
  3465  0609  04F1               	iorwf	___ftpack@arg+1,f
  3466  060A  0877               	movf	??___ftpack+2,w
  3467  060B  04F2               	iorwf	___ftpack@arg+2,f
  3468  060C  0874               	movf	___ftpack@sign,w
  3469  060D  1903               	btfsc	3,2
  3470  060E  0008               	return
  3471  060F  17F2               	bsf	___ftpack@arg+2,7
  3472  0610  0008               	return
  3473  0611                     __end_of___ftpack:	
  3474  007E                     btemp	set	126	;btemp
  3475  007E                     wtemp	set	126
  3476  007E                     wtemp0	set	126
  3477  0080                     wtemp1	set	128
  3478  0082                     wtemp2	set	130
  3479  0084                     wtemp3	set	132
  3480  0086                     wtemp4	set	134
  3481  0088                     wtemp5	set	136
  3482  007F                     wtemp6	set	127
  3483  007E                     ttemp	set	126
  3484  007E                     ttemp0	set	126
  3485  0081                     ttemp1	set	129
  3486  0084                     ttemp2	set	132
  3487  0087                     ttemp3	set	135
  3488  007F                     ttemp4	set	127
  3489  007E                     ltemp	set	126
  3490  007E                     ltemp0	set	126
  3491  0082                     ltemp1	set	130
  3492  0086                     ltemp2	set	134
  3493  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     23      25
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), floor@expon(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->___awtoft
    _round_to_one_decimal->___ftdiv
    ___ftneg->___awtoft
    ___ftadd->___awtoft
    ___ftmul->___awtoft
    ___ftdiv->___ftpack
    ___awtoft->___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_round_to_one_decimal
    _round_to_one_decimal->_floor
    _round->___ftadd
    _trunc->___altoft
    ___ftneg->_trunc
    _floor->___ftadd
    ___fttol->___ftmul
    ___ftadd->___ftneg
    ___altoft->___fttol
    ___awmod->___fttol

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                 23    23      0   27312
                                              0 BANK1     23    23      0
                           ___awtoft
                            ___ftadd
                            ___ftmul
                            ___ftneg
                            ___fttol
                              _delay
                            _readADC
               _round_to_one_decimal
 ---------------------------------------------------------------------------------
 (2) _round_to_one_decimal                                 6     3      3   18919
                                             72 BANK0      6     3      3
                            ___awmod
                            ___ftdiv
                            ___ftmul
                            ___fttol
                              _floor
                              _round
 ---------------------------------------------------------------------------------
 (3) _round                                                6     3      3    6598
                                             63 BANK0      6     3      3
                            ___ftadd
                            ___ftmul (ARG)
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (4) _trunc                                                9     6      3    3174
                                             38 BANK0      9     6      3
                           ___altoft
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     191
                                             47 BANK0      3     0      3
                           ___awtoft (ARG)
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (3) _floor                                                9     6      3    6758
                                             63 BANK0      9     6      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (5) _frexp                                                6     2      4     420
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             14    10      4     517
                                             16 BANK0     14    10      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                              12     6      6     428
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             13     7      6    3068
                                             50 BANK0     13     7      6
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (5) ___altoft                                             8     4      4    1968
                                             30 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    2368
                                              0 BANK0     16    10      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    2110
                                              8 COMMON     6     0      6
                                              0 BANK0     10    10      0
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     402
                                             30 BANK0      7     3      4
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (2) _readADC                                              6     4      2      70
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _delay                                                2     0      2      75
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    1921
                                              8 COMMON     6     3      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    1724
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   ___awtoft
     ___ftpack
   ___ftadd
     ___awtoft (ARG)
       ___ftpack
     ___ftneg (ARG)
       ___awtoft (ARG)
         ___ftpack
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         _frexp
     ___ftpack (ARG)
     _trunc (ARG)
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _frexp
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftneg
     ___awtoft (ARG)
       ___ftpack
     _trunc (ARG)
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _frexp
   ___fttol
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
   _delay
   _readADC
   _round_to_one_decimal
     ___awmod
       ___fttol (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
     ___ftdiv
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
     _floor
       ___altoft
         ___ftpack
         ___fttol (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           _trunc (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
             ___fttol
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             _frexp
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           _frexp
       ___ftge
       ___fttol
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
       _frexp
     _round
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
           _trunc (ARG)
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
             ___fttol
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
             _frexp
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           _frexp
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___awtoft (ARG)
           ___ftpack
         _trunc (ARG)
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
           ___fttol
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
           _frexp
       _trunc (ARG)
         ___altoft
           ___ftpack
           ___fttol (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
         ___fttol
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
         _frexp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     17      19       7       31.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      77      12        0.0%
ABS                  0      0      77       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Mar 14 12:17:49 2023

                   ___altoft@exp 0044                      __CFG_CP$OFF 0000                    ___altoft@sign 0045  
                             l49 07FA                               _GO 00FA                     ___ftadd@exp1 005E  
                   ___ftadd@exp2 005D                     ___ftadd@sign 005C                              _GIE 005F  
                   __CFG_CPD$OFF 0000                              _ISR 002D                              fsr0 0004  
                            indf 0000                     ___awmod@sign 0044                     __CFG_FOSC$XT 0000  
                   __CFG_LVP$OFF 0000                             ?_ISR 0070                     ___ftdiv@cntr 0024  
                   ___ftdiv@sign 0029                             _ADIE 0466                             _ADIF 0066  
                           _PEIE 005E                     __CFG_WRT$OFF 0000                             _main 07E3  
                   ___ftpack@arg 0070                     ___ftpack@exp 0073                             btemp 007E  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0016  
                           ttemp 007E                             wtemp 007E                     ___ftmul@cntr 002E  
                   ___ftmul@sign 002F                            ??_ISR 00A0                     ___fttol@exp1 003D  
                   ___fttol@lval 0039                            ?_main 0070                  __end_of___ftadd 027D  
                  __CFG_WDTE$OFF 0000                  __end_of___awmod 071D                  __end_of___ftdiv 0406  
                __end_of___ftneg 0FA8                  __end_of___ftmul 0350                  __end_of___fttol 052D  
                          i1l302 05F8                            i1l358 021C                            i1l296 05DF  
                          _PORTB 0006                            _TRISB 0086                            u99_25 05BD  
                  __CFG_PWRTE$ON 0000                  __end_of_readADC 1000                    ___awtoft@sign 007D  
                          _delay 0FA8                      readADC@temp 0074                            _floor 0406  
                          _frexp 07A9                            _errno 00B7                    ___ftpack@sign 0074  
                          _round 0611                            _trunc 071D                            pclath 000A  
                          ltemp0 007E                            ltemp1 0082                            ltemp2 0086  
                          ltemp3 0080                            ttemp0 007E                            ttemp1 0081  
                          ttemp2 0084                            ttemp3 0087                            ttemp4 007F  
                          status 0003                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F                  __initialization 0019  
                   __end_of_main 07FB  round_to_one_decimal@rounded_num 006B                           ??_main 00B7  
                  ___fttol@sign1 0038                           ?_delay 0070                           _ADCON0 001F  
                         _ADCON1 009F                           ?_floor 005F                           ?_frexp 0070  
               __end_of___altoft 07A9                           _ADRESH 001E                           _ADRESL 009E  
               __end_of___awtoft 0FD8                 __end_of___ftpack 0611                           ?_round 005F  
                         ?_trunc 0046                           u101_25 05D8                           i1l1201 0218  
                         i1l1113 04B9                           i1l1131 04EB                           i1l1053 05B8  
                         i1l1205 022E                           i1l1141 0513                           i1l1133 04FB  
                         i1l1301 0496                           i1l1063 05E4                           i1l1055 05C4  
                         i1l1231 06BF                           i1l1143 0516                           i1l1065 05EE  
                         i1l1057 05C9                           i1l1049 05B1                           i1l1313 06DA  
                         i1l1209 0240                           i1l1331 0703                           i1l1219 0263  
                         i1l1163 01A4                           i1l1227 0698                           i1l1147 0524  
                         i1l1139 0508                           u103_25 05E7                           i1l1325 06E7  
                         i1l1317 06E1                           i1l1421 0312                           i1l1413 02FA  
                         i1l1085 077D                           i1l1181 01CD                           i1l1327 06F5  
                         i1l1335 070E                           i1l1087 078F                           i1l1191 01F3  
                         i1l1159 019D                           i1l1425 0322                           i1l1409 02EA  
                         i1l1193 01F7                           i1l1169 01B3                           i1l1097 07B5  
                         i1l1339 0716                           i1l1355 037E                           i1l1187 01E2  
                         i1l1291 0440                           i1l1259 0739                           i1l1437 0FA8  
                         i1l1349 0368                           i1l1189 01EE                           i1l1471 0FC1  
                         i1l1391 0295                           i1l1199 020C                           i1l1287 0437  
                         i1l1377 03E2                           i1l1369 03C3                           i1l1397 02AB  
                         u113_25 04C0                           i1l1497 0156                           u106_25 05FF  
                         u131_25 01CE                           u140_25 020D                           u116_25 04EC  
                         u109_25 0782                           u134_25 01E3                           u119_25 050A  
                         u161_25 06EA                           u137_25 01F8                           u170_25 03A2  
                         u147_21 068B                           u147_22 068C                           u147_23 0691  
                         u147_24 0692                           u163_25 06FB                           u171_25 03C4  
                         u164_25 0704                           u172_25 03D5                           u149_21 06B2  
                         u149_22 06B3                           u149_23 06B8                           u149_24 06B9  
                         u173_25 03E3                           u181_25 02FB                           u182_25 0303  
                         u190_25 057C                           u169_25 0390                           u177_25 02B7  
                         u186_25 0323                           u178_25 02C9                           u187_25 032B  
                         u189_25 0FB4                           ___ftge 0671                        ??___ftadd 0058  
                      ??___awmod 0042                        ??___ftdiv 0020                        ??___ftneg 007E  
                      ??___ftmul 0026                        ??___fttol 0034                  ___awmod@divisor 003E  
                ___awmod@counter 0043                           floor@i 0063                           floor@x 005F  
          ___ftmul@f3_as_product 002B                        ??_readADC 0072                           saved_w 007E  
                         round@f 0062                           round@x 005F                           trunc@i 004A  
                         trunc@x 0046          __end_of__initialization 0029                       ___altoft@c 003E  
                     ___ftadd@f1 0052                       ___ftadd@f2 0055     __end_of_round_to_one_decimal 05A9  
                     ___ftge@ff1 0070                       ___ftge@ff2 0073                       ___ftdiv@f1 007B  
                     ___ftdiv@f2 0078                       ___ftdiv@f3 0025                       ___ftneg@f1 004F  
                     ___awtoft@c 0078                       ___ftmul@f1 0020                       ___ftmul@f2 0023  
                     ___fttol@f1 0030                   __pcstackCOMMON 0070                     __pidataBANK0 07FB  
                  __end_of_delay 0FB7            ISR@resultOfConversion 00A8                    __end_of_floor 049F  
                  __end_of_frexp 07E3                    __end_of_round 0671                    __end_of_trunc 0767  
             ISR@formattedResult 00B2                          ??_delay 0072                          ??_floor 0062  
                        ??_frexp 0074                          ??_round 007E                          ??_trunc 0049  
                     __pbssBANK1 00B7                        ISR@result 00AE                       __pmaintext 07E3  
                        ?___ftge 0070                       __pintentry 0004                        ?___altoft 003E  
                      ?___awtoft 0078                        ?___ftpack 0070          round_to_one_decimal@num 0068  
                     _count_flag 006E                  __size_of___ftge 005D                          ___ftadd 0174  
                        ___awmod 06CE                          ___ftdiv 0350                          ___ftneg 0F9E  
                        ___ftmul 027D                          ___fttol 049F                       ??___altoft 0042  
                     ??___awtoft 007B                       ??___ftpack 0075                          __ptext1 002D  
                        __ptext2 052D                          __ptext3 0611                          __ptext4 071D  
                        __ptext5 0F9E                          __ptext6 0406                          __ptext7 07A9  
                        __ptext8 049F                          __ptext9 0671                          _readADC 0FD8  
                   __size_of_ISR 0147             _round_to_one_decimal 052D                 ___awmod@dividend 0040  
           end_of_initialization 0029            ?_round_to_one_decimal 0068                      ___ftdiv@exp 0028  
                    ___ftmul@exp 002A                   __end_of___ftge 06CE                       floor@expon 0066  
            start_initialization 0019                      __end_of_ISR 0174                       frexp@value 0070  
                       ??___ftge 0076                      __pdataBANK0 006E           ??_round_to_one_decimal 007E  
              __size_of___altoft 0042                __size_of___awtoft 0021                __size_of___ftpack 0068  
                      ___latbits 0002                    __pcstackBANK0 0020                    __pcstackBANK1 00A0  
                     ISR@decimal 00AB                       ISR@d_value 00B0                         ISR@whole 00B5  
                       ?___ftadd 0052                         ?___awmod 003E                         ?___ftdiv 0078  
                       ?___ftneg 004F                         ?___ftmul 0020                         ?___fttol 0030  
                       ?_readADC 0070                   __size_of_delay 000F                   __size_of_floor 0099  
                 __size_of_frexp 003A                   __size_of_round 0060                   __size_of_trunc 004A  
              interrupt_function 0004                        frexp@eptr 0073                 __size_of___ftadd 0109  
               __size_of___awmod 004F                 __size_of___ftdiv 00B6                 __size_of___ftneg 000A  
                       ___altoft 0767                 __size_of___ftmul 00D3                 __size_of___fttol 008E  
                       ___awtoft 0FB7                         ___ftpack 05A9                 __size_of_readADC 0028  
                       __ptext10 0174                         __ptext11 0767                         __ptext12 027D  
                       __ptext13 0350                         __ptext14 06CE                         __ptext15 0FD8  
                       __ptext16 0FA8                         __ptext17 0FB7                         __ptext18 05A9  
                     trunc@expon 004D                    __size_of_main 0018                         delay@cnt 0070  
                       intlevel1 0000    __size_of_round_to_one_decimal 007C  
