

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Mar 14 11:46:34 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	text0,local,class=CODE,merge=1,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14  0000                     	;# 
    15  0001                     	;# 
    16  0002                     	;# 
    17  0003                     	;# 
    18  0004                     	;# 
    19  0005                     	;# 
    20  0006                     	;# 
    21  0007                     	;# 
    22  0008                     	;# 
    23  0009                     	;# 
    24  000A                     	;# 
    25  000B                     	;# 
    26  000C                     	;# 
    27  000D                     	;# 
    28  000E                     	;# 
    29  000E                     	;# 
    30  000F                     	;# 
    31  0010                     	;# 
    32  0011                     	;# 
    33  0012                     	;# 
    34  0013                     	;# 
    35  0014                     	;# 
    36  0015                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0017                     	;# 
    40  0018                     	;# 
    41  0019                     	;# 
    42  001A                     	;# 
    43  001B                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  001D                     	;# 
    47  001E                     	;# 
    48  001F                     	;# 
    49  0081                     	;# 
    50  0085                     	;# 
    51  0086                     	;# 
    52  0087                     	;# 
    53  0088                     	;# 
    54  0089                     	;# 
    55  008C                     	;# 
    56  008D                     	;# 
    57  008E                     	;# 
    58  0091                     	;# 
    59  0092                     	;# 
    60  0093                     	;# 
    61  0094                     	;# 
    62  0098                     	;# 
    63  0099                     	;# 
    64  009C                     	;# 
    65  009D                     	;# 
    66  009E                     	;# 
    67  009F                     	;# 
    68  010C                     	;# 
    69  010D                     	;# 
    70  010E                     	;# 
    71  010F                     	;# 
    72  018C                     	;# 
    73  018D                     	;# 
    74  001F                     _ADCON0	set	31
    75  001E                     _ADRESH	set	30
    76  0006                     _PORTB	set	6
    77  0066                     _ADIF	set	102
    78  005F                     _GIE	set	95
    79  00FA                     _GO	set	250
    80  00FA                     _GO_DONE	set	250
    81  005E                     _PEIE	set	94
    82  009F                     _ADCON1	set	159
    83  009E                     _ADRESL	set	158
    84  0086                     _TRISB	set	134
    85  0466                     _ADIE	set	1126
    86                           
    87                           	psect	text0
    88  0000                     __ptext0:	
    89                           ; #config settings
    90                           
    91                           
    92                           ;psect for function _delay
    93  0000                     
    94                           	psect	cinit
    95  0015                     start_initialization:	
    96  0015                     __initialization:	
    97  0015                     end_of_initialization:	
    98                           ;End of C runtime variable initialization code
    99                           
   100  0015                     __end_of__initialization:	
   101  0015  0183               	clrf	3
   102  0016  120A  118A  28F8   	ljmp	_main	;jump to C main() function
   103                           
   104                           	psect	cstackCOMMON
   105  0070                     __pcstackCOMMON:	
   106  0070                     ?_delay:	
   107  0070                     ?_main:	
   108                           ; 0 bytes @ 0x0
   109                           
   110  0070                     ?_ISR:	
   111                           ; 0 bytes @ 0x0
   112                           
   113  0070                     delay@cnt:	
   114                           ; 0 bytes @ 0x0
   115                           
   116                           
   117                           ; 2 bytes @ 0x0
   118  0070                     	ds	2
   119  0072                     ??_delay:	
   120  0072                     ?_readADC:	
   121                           ; 0 bytes @ 0x2
   122                           
   123                           
   124                           ; 2 bytes @ 0x2
   125  0072                     	ds	2
   126  0074                     ??_readADC:	
   127                           
   128                           ; 0 bytes @ 0x4
   129  0074                     	ds	2
   130  0076                     readADC@temp:	
   131                           
   132                           ; 2 bytes @ 0x6
   133  0076                     	ds	2
   134  0078                     ??_ISR:	
   135                           
   136                           ; 0 bytes @ 0x8
   137  0078                     	ds	4
   138  007C                     ISR@d_value:	
   139                           
   140                           ; 2 bytes @ 0xC
   141  007C                     	ds	2
   142                           
   143                           	psect	cstackBANK0
   144  0000                     __pcstackBANK0:	
   145  0000                     ??_main:	
   146                           
   147                           	psect	maintext
   148  00F8                     __pmaintext:	
   149                           ; 0 bytes @ 0x0
   150 ;;
   151 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   152 ;;
   153 ;; *************** function _main *****************
   154 ;; Defined at:
   155 ;;		line 36 in file "D:\JinBus\CpE 3201\Practical Activity #5\CpE 3201-LE5-1\LE5-1.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;		None
   160 ;; Return value:  Size  Location     Type
   161 ;;		None               void
   162 ;; Registers used:
   163 ;;		wreg, status,2
   164 ;; Tracked objects:
   165 ;;		On entry : 17F/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   169 ;;      Params:         0       0       0       0       0
   170 ;;      Locals:         0       0       0       0       0
   171 ;;      Temps:          0       0       0       0       0
   172 ;;      Totals:         0       0       0       0       0
   173 ;;Total ram usage:        0 bytes
   174 ;; Hardware stack levels required when called:    3
   175 ;; This function calls:
   176 ;;		Nothing
   177 ;; This function is called by:
   178 ;;		Startup code after reset
   179 ;; This function uses a non-reentrant model
   180 ;;
   181                           
   182                           
   183                           ;psect for function _main
   184  00F8                     _main:	
   185                           
   186                           ;LE5-1.c: 37: TRISB = 0x00;
   187                           
   188                           ;incstack = 0
   189                           ; Regs used in _main: [wreg+status,2]
   190  00F8  1683               	bsf	3,5	;RP0=1, select bank1
   191  00F9  1303               	bcf	3,6	;RP1=0, select bank1
   192  00FA  0186               	clrf	6	;volatile
   193                           
   194                           ;LE5-1.c: 38: PORTB = 0x00;
   195  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   196  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   197  00FD  0186               	clrf	6	;volatile
   198                           
   199                           ;LE5-1.c: 39: ADCON1 = 0x80;
   200  00FE  3080               	movlw	128
   201  00FF  1683               	bsf	3,5	;RP0=1, select bank1
   202  0100  1303               	bcf	3,6	;RP1=0, select bank1
   203  0101  009F               	movwf	31	;volatile
   204                           
   205                           ;LE5-1.c: 42: ADCON0 = 0x41;
   206  0102  3041               	movlw	65
   207  0103  1283               	bcf	3,5	;RP0=0, select bank0
   208  0104  1303               	bcf	3,6	;RP1=0, select bank0
   209  0105  009F               	movwf	31	;volatile
   210                           
   211                           ;LE5-1.c: 44: ADIE = 1;
   212  0106  1683               	bsf	3,5	;RP0=1, select bank1
   213  0107  1303               	bcf	3,6	;RP1=0, select bank1
   214  0108  170C               	bsf	12,6	;volatile
   215                           
   216                           ;LE5-1.c: 45: ADIF = 0;
   217  0109  1283               	bcf	3,5	;RP0=0, select bank0
   218  010A  1303               	bcf	3,6	;RP1=0, select bank0
   219  010B  130C               	bcf	12,6	;volatile
   220                           
   221                           ;LE5-1.c: 46: PEIE = 1;
   222  010C  170B               	bsf	11,6	;volatile
   223                           
   224                           ;LE5-1.c: 47: GIE = 1;
   225  010D  178B               	bsf	11,7	;volatile
   226                           
   227                           ;LE5-1.c: 48: GO = 1;
   228  010E  151F               	bsf	31,2	;volatile
   229  010F                     l39:	
   230                           ;LE5-1.c: 50: for(;;) {
   231                           
   232                           
   233                           ;LE5-1.c: 52: }
   234  010F  290F               	goto	l39
   235  0110                     __end_of_main:	
   236                           
   237                           	psect	text1
   238  0019                     __ptext1:	
   239 ;; *************** function _ISR *****************
   240 ;; Defined at:
   241 ;;		line 55 in file "D:\JinBus\CpE 3201\Practical Activity #5\CpE 3201-LE5-1\LE5-1.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;  d_value         2   12[COMMON] int 
   246 ;; Return value:  Size  Location     Type
   247 ;;		None               void
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : 0/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   255 ;;      Params:         0       0       0       0       0
   256 ;;      Locals:         2       0       0       0       0
   257 ;;      Temps:          4       0       0       0       0
   258 ;;      Totals:         6       0       0       0       0
   259 ;;Total ram usage:        6 bytes
   260 ;; Hardware stack levels used:    1
   261 ;; Hardware stack levels required when called:    2
   262 ;; This function calls:
   263 ;;		_readADC
   264 ;; This function is called by:
   265 ;;		Interrupt level 1
   266 ;; This function uses a non-reentrant model
   267 ;;
   268                           
   269                           
   270                           ;psect for function _ISR
   271  0019                     _ISR:	
   272                           
   273                           ;LE5-1.c: 56: int d_value = 0;
   274  0019  01FC               	clrf	ISR@d_value
   275  001A  01FD               	clrf	ISR@d_value+1
   276                           
   277                           ;LE5-1.c: 57: GIE = 0;
   278  001B  138B               	bcf	11,7	;volatile
   279                           
   280                           ;LE5-1.c: 58: if(ADIF==1) {
   281  001C  1F0C               	btfss	12,6	;volatile
   282  001D  28B5               	goto	i1l595
   283                           
   284                           ;LE5-1.c: 59: ADIF = 0;
   285  001E  130C               	bcf	12,6	;volatile
   286                           
   287                           ;LE5-1.c: 61: d_value = readADC();
   288  001F  120A  118A  20C4  120A  118A  	fcall	_readADC
   289  0024  0873               	movf	?_readADC+1,w
   290  0025  01FD               	clrf	ISR@d_value+1
   291  0026  07FD               	addwf	ISR@d_value+1,f
   292  0027  0872               	movf	?_readADC,w
   293  0028  01FC               	clrf	ISR@d_value
   294  0029  07FC               	addwf	ISR@d_value,f
   295                           
   296                           ;LE5-1.c: 63: if(d_value>=0 && d_value<=169)
   297  002A  1BFD               	btfsc	ISR@d_value+1,7
   298  002B  283B               	goto	i1l565
   299  002C  087D               	movf	ISR@d_value+1,w
   300  002D  3A80               	xorlw	128
   301  002E  00FF               	movwf	127
   302  002F  3080               	movlw	128
   303  0030  027F               	subwf	127,w
   304  0031  1D03               	skipz
   305  0032  2835               	goto	u5_25
   306  0033  30AA               	movlw	170
   307  0034  027C               	subwf	ISR@d_value,w
   308  0035                     u5_25:	
   309  0035  1803               	skipnc
   310  0036  283B               	goto	i1l565
   311                           
   312                           ;LE5-1.c: 64: PORTB = 0x00;
   313  0037  1283               	bcf	3,5	;RP0=0, select bank0
   314  0038  1303               	bcf	3,6	;RP1=0, select bank0
   315  0039  0186               	clrf	6	;volatile
   316  003A  28B5               	goto	i1l595
   317  003B                     i1l565:	
   318                           
   319                           ;LE5-1.c: 65: else if(d_value>=170 && d_value<=340)
   320  003B  087D               	movf	ISR@d_value+1,w
   321  003C  3A80               	xorlw	128
   322  003D  00FF               	movwf	127
   323  003E  3080               	movlw	128
   324  003F  027F               	subwf	127,w
   325  0040  1D03               	skipz
   326  0041  2844               	goto	u6_25
   327  0042  30AA               	movlw	170
   328  0043  027C               	subwf	ISR@d_value,w
   329  0044                     u6_25:	
   330  0044  1C03               	skipc
   331  0045  2853               	goto	i1l571
   332  0046  087D               	movf	ISR@d_value+1,w
   333  0047  3A80               	xorlw	128
   334  0048  00FF               	movwf	127
   335  0049  3081               	movlw	129
   336  004A  027F               	subwf	127,w
   337  004B  1D03               	skipz
   338  004C  284F               	goto	u7_25
   339  004D  3055               	movlw	85
   340  004E  027C               	subwf	ISR@d_value,w
   341  004F                     u7_25:	
   342  004F  1803               	skipnc
   343  0050  2853               	goto	i1l571
   344                           
   345                           ;LE5-1.c: 66: PORTB = 0x01;
   346  0051  3001               	movlw	1
   347  0052  28B2               	goto	L4
   348  0053                     i1l571:	
   349                           
   350                           ;LE5-1.c: 67: else if(d_value>=341 && d_value<=511)
   351  0053  087D               	movf	ISR@d_value+1,w
   352  0054  3A80               	xorlw	128
   353  0055  00FF               	movwf	127
   354  0056  3081               	movlw	129
   355  0057  027F               	subwf	127,w
   356  0058  1D03               	skipz
   357  0059  285C               	goto	u8_25
   358  005A  3055               	movlw	85
   359  005B  027C               	subwf	ISR@d_value,w
   360  005C                     u8_25:	
   361  005C  1C03               	skipc
   362  005D  286B               	goto	i1l577
   363  005E  087D               	movf	ISR@d_value+1,w
   364  005F  3A80               	xorlw	128
   365  0060  00FF               	movwf	127
   366  0061  3082               	movlw	130
   367  0062  027F               	subwf	127,w
   368  0063  1D03               	skipz
   369  0064  2867               	goto	u9_25
   370  0065  3000               	movlw	0
   371  0066  027C               	subwf	ISR@d_value,w
   372  0067                     u9_25:	
   373  0067  1803               	skipnc
   374  0068  286B               	goto	i1l577
   375                           
   376                           ;LE5-1.c: 68: PORTB = 0x03;
   377  0069  3003               	movlw	3
   378  006A  28B2               	goto	L4
   379  006B                     i1l577:	
   380                           
   381                           ;LE5-1.c: 69: else if(d_value>=512 && d_value<=682)
   382  006B  087D               	movf	ISR@d_value+1,w
   383  006C  3A80               	xorlw	128
   384  006D  00FF               	movwf	127
   385  006E  3082               	movlw	130
   386  006F  027F               	subwf	127,w
   387  0070  1D03               	skipz
   388  0071  2874               	goto	u10_25
   389  0072  3000               	movlw	0
   390  0073  027C               	subwf	ISR@d_value,w
   391  0074                     u10_25:	
   392  0074  1C03               	skipc
   393  0075  2883               	goto	i1l583
   394  0076  087D               	movf	ISR@d_value+1,w
   395  0077  3A80               	xorlw	128
   396  0078  00FF               	movwf	127
   397  0079  3082               	movlw	130
   398  007A  027F               	subwf	127,w
   399  007B  1D03               	skipz
   400  007C  287F               	goto	u11_25
   401  007D  30AB               	movlw	171
   402  007E  027C               	subwf	ISR@d_value,w
   403  007F                     u11_25:	
   404  007F  1803               	skipnc
   405  0080  2883               	goto	i1l583
   406                           
   407                           ;LE5-1.c: 70: PORTB = 0x07;
   408  0081  3007               	movlw	7
   409  0082  28B2               	goto	L4
   410  0083                     i1l583:	
   411                           
   412                           ;LE5-1.c: 71: else if(d_value>=683 && d_value<=853)
   413  0083  087D               	movf	ISR@d_value+1,w
   414  0084  3A80               	xorlw	128
   415  0085  00FF               	movwf	127
   416  0086  3082               	movlw	130
   417  0087  027F               	subwf	127,w
   418  0088  1D03               	skipz
   419  0089  288C               	goto	u12_25
   420  008A  30AB               	movlw	171
   421  008B  027C               	subwf	ISR@d_value,w
   422  008C                     u12_25:	
   423  008C  1C03               	skipc
   424  008D  289B               	goto	i1l589
   425  008E  087D               	movf	ISR@d_value+1,w
   426  008F  3A80               	xorlw	128
   427  0090  00FF               	movwf	127
   428  0091  3083               	movlw	131
   429  0092  027F               	subwf	127,w
   430  0093  1D03               	skipz
   431  0094  2897               	goto	u13_25
   432  0095  3056               	movlw	86
   433  0096  027C               	subwf	ISR@d_value,w
   434  0097                     u13_25:	
   435  0097  1803               	skipnc
   436  0098  289B               	goto	i1l589
   437                           
   438                           ;LE5-1.c: 72: PORTB = 0x0F;
   439  0099  300F               	movlw	15
   440  009A  28B2               	goto	L4
   441  009B                     i1l589:	
   442                           
   443                           ;LE5-1.c: 73: else if(d_value>=854 && d_value<=1024)
   444  009B  087D               	movf	ISR@d_value+1,w
   445  009C  3A80               	xorlw	128
   446  009D  00FF               	movwf	127
   447  009E  3083               	movlw	131
   448  009F  027F               	subwf	127,w
   449  00A0  1D03               	skipz
   450  00A1  28A4               	goto	u14_25
   451  00A2  3056               	movlw	86
   452  00A3  027C               	subwf	ISR@d_value,w
   453  00A4                     u14_25:	
   454  00A4  1C03               	skipc
   455  00A5  28B5               	goto	i1l595
   456  00A6  087D               	movf	ISR@d_value+1,w
   457  00A7  3A80               	xorlw	128
   458  00A8  00FF               	movwf	127
   459  00A9  3084               	movlw	132
   460  00AA  027F               	subwf	127,w
   461  00AB  1D03               	skipz
   462  00AC  28AF               	goto	u15_25
   463  00AD  3001               	movlw	1
   464  00AE  027C               	subwf	ISR@d_value,w
   465  00AF                     u15_25:	
   466  00AF  1803               	skipnc
   467  00B0  28B5               	goto	i1l595
   468                           
   469                           ;LE5-1.c: 74: PORTB = 0x1F;
   470  00B1  301F               	movlw	31
   471  00B2                     L4:	
   472  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   473  00B3  1303               	bcf	3,6	;RP1=0, select bank0
   474  00B4  0086               	movwf	6	;volatile
   475  00B5                     i1l595:	
   476                           
   477                           ;LE5-1.c: 75: }
   478                           ;LE5-1.c: 76: GO = 1;
   479  00B5  1283               	bcf	3,5	;RP0=0, select bank0
   480  00B6  1303               	bcf	3,6	;RP1=0, select bank0
   481  00B7  151F               	bsf	31,2	;volatile
   482                           
   483                           ;LE5-1.c: 77: GIE = 1;
   484  00B8  178B               	bsf	11,7	;volatile
   485  00B9  087B               	movf	??_ISR+3,w
   486  00BA  00FF               	movwf	127
   487  00BB  087A               	movf	??_ISR+2,w
   488  00BC  008A               	movwf	10
   489  00BD  0879               	movf	??_ISR+1,w
   490  00BE  0084               	movwf	4
   491  00BF  0E78               	swapf	??_ISR^(0+-128),w
   492  00C0  0083               	movwf	3
   493  00C1  0EFE               	swapf	126,f
   494  00C2  0E7E               	swapf	126,w
   495  00C3  0009               	retfie
   496  00C4                     __end_of_ISR:	
   497                           
   498                           	psect	intentry
   499  0004                     __pintentry:	
   500                           ;incstack = 0
   501                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   502                           
   503  0004                     interrupt_function:	
   504  007E                     saved_w	set	btemp
   505  0004  00FE               	movwf	btemp
   506  0005  0E03               	swapf	3,w
   507  0006  00F8               	movwf	??_ISR
   508  0007  0804               	movf	4,w
   509  0008  00F9               	movwf	??_ISR+1
   510  0009  080A               	movf	10,w
   511  000A  00FA               	movwf	??_ISR+2
   512  000B  1283               	bcf	3,5	;RP0=0, select bank0
   513  000C  1303               	bcf	3,6	;RP1=0, select bank0
   514  000D  087F               	movf	btemp+1,w
   515  000E  00FB               	movwf	??_ISR+3
   516  000F  120A  118A  2819   	ljmp	_ISR
   517                           
   518                           	psect	text2
   519  00C4                     __ptext2:	
   520 ;; *************** function _readADC *****************
   521 ;; Defined at:
   522 ;;		line 24 in file "D:\JinBus\CpE 3201\Practical Activity #5\CpE 3201-LE5-1\LE5-1.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;  temp            2    6[COMMON] int 
   527 ;; Return value:  Size  Location     Type
   528 ;;                  2    2[COMMON] int 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         2       0       0       0       0
   537 ;;      Locals:         2       0       0       0       0
   538 ;;      Temps:          2       0       0       0       0
   539 ;;      Totals:         6       0       0       0       0
   540 ;;Total ram usage:        6 bytes
   541 ;; Hardware stack levels used:    1
   542 ;; Hardware stack levels required when called:    1
   543 ;; This function calls:
   544 ;;		_delay
   545 ;; This function is called by:
   546 ;;		_ISR
   547 ;; This function uses a non-reentrant model
   548 ;;
   549                           
   550                           
   551                           ;psect for function _readADC
   552  00C4                     _readADC:	
   553                           
   554                           ;LE5-1.c: 25: int temp = 0;
   555                           
   556                           ;incstack = 0
   557                           ; Regs used in _readADC: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   558  00C4  01F6               	clrf	readADC@temp
   559  00C5  01F7               	clrf	readADC@temp+1
   560                           
   561                           ;LE5-1.c: 26: delay(1000);
   562  00C6  30E8               	movlw	232
   563  00C7  00F0               	movwf	delay@cnt
   564  00C8  3003               	movlw	3
   565  00C9  00F1               	movwf	delay@cnt+1
   566  00CA  120A  118A  2110  120A  118A  	fcall	_delay
   567                           
   568                           ;LE5-1.c: 27: GO = 1;
   569  00CF  1283               	bcf	3,5	;RP0=0, select bank0
   570  00D0  1303               	bcf	3,6	;RP1=0, select bank0
   571  00D1  151F               	bsf	31,2	;volatile
   572  00D2                     i1l33:	
   573                           ;LE5-1.c: 28: while(GO_DONE==1);
   574                           
   575  00D2  191F               	btfsc	31,2	;volatile
   576  00D3  28D2               	goto	i1l33
   577                           
   578                           ;LE5-1.c: 30: temp = ADRESH;
   579  00D4  081E               	movf	30,w	;volatile
   580  00D5  00F4               	movwf	??_readADC
   581  00D6  01F5               	clrf	??_readADC+1
   582  00D7  0874               	movf	??_readADC,w
   583  00D8  00F6               	movwf	readADC@temp
   584  00D9  0875               	movf	??_readADC+1,w
   585  00DA  00F7               	movwf	readADC@temp+1
   586                           
   587                           ;LE5-1.c: 31: temp = temp << 8;
   588  00DB  0877               	movf	readADC@temp+1,w
   589  00DC  00F5               	movwf	??_readADC+1
   590  00DD  0876               	movf	readADC@temp,w
   591  00DE  00F4               	movwf	??_readADC
   592  00DF  0874               	movf	??_readADC,w
   593  00E0  00F5               	movwf	??_readADC+1
   594  00E1  01F4               	clrf	??_readADC
   595  00E2  0874               	movf	??_readADC,w
   596  00E3  00F6               	movwf	readADC@temp
   597  00E4  0875               	movf	??_readADC+1,w
   598  00E5  00F7               	movwf	readADC@temp+1
   599                           
   600                           ;LE5-1.c: 32: temp = temp | ADRESL;
   601  00E6  0876               	movf	readADC@temp,w
   602  00E7  1683               	bsf	3,5	;RP0=1, select bank1
   603  00E8  1303               	bcf	3,6	;RP1=0, select bank1
   604  00E9  041E               	iorwf	30,w	;volatile
   605  00EA  00F4               	movwf	??_readADC
   606  00EB  0877               	movf	readADC@temp+1,w
   607  00EC  00F5               	movwf	??_readADC+1
   608  00ED  0874               	movf	??_readADC,w
   609  00EE  00F6               	movwf	readADC@temp
   610  00EF  0875               	movf	??_readADC+1,w
   611  00F0  00F7               	movwf	readADC@temp+1
   612                           
   613                           ;LE5-1.c: 33: return temp;
   614  00F1  0877               	movf	readADC@temp+1,w
   615  00F2  01F3               	clrf	?_readADC+1
   616  00F3  07F3               	addwf	?_readADC+1,f
   617  00F4  0876               	movf	readADC@temp,w
   618  00F5  01F2               	clrf	?_readADC
   619  00F6  07F2               	addwf	?_readADC,f
   620  00F7  0008               	return
   621  00F8                     __end_of_readADC:	
   622                           
   623                           	psect	text3
   624  0110                     __ptext3:	
   625 ;; *************** function _delay *****************
   626 ;; Defined at:
   627 ;;		line 20 in file "D:\JinBus\CpE 3201\Practical Activity #5\CpE 3201-LE5-1\LE5-1.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  cnt             2    0[COMMON] int 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;		None
   632 ;; Return value:  Size  Location     Type
   633 ;;		None               void
   634 ;; Registers used:
   635 ;;		wreg
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         2       0       0       0       0
   642 ;;      Locals:         0       0       0       0       0
   643 ;;      Temps:          0       0       0       0       0
   644 ;;      Totals:         2       0       0       0       0
   645 ;;Total ram usage:        2 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_readADC
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           
   655                           ;psect for function _delay
   656  0110                     _delay:	
   657  0110                     i1l515:	
   658                           ;LE5-1.c: 21: while(cnt--);
   659                           
   660                           ;incstack = 0
   661                           ; Regs used in _delay: [wreg]
   662                           
   663  0110  30FF               	movlw	255
   664  0111  07F0               	addwf	delay@cnt,f
   665  0112  1803               	skipnc
   666  0113  0AF1               	incf	delay@cnt+1,f
   667  0114  30FF               	movlw	255
   668  0115  07F1               	addwf	delay@cnt+1,f
   669  0116  30FF               	movlw	255
   670  0117  0671               	xorwf	delay@cnt+1,w
   671  0118  1D03               	skipz
   672  0119  291C               	goto	u1_25
   673  011A  30FF               	movlw	255
   674  011B  0670               	xorwf	delay@cnt,w
   675  011C                     u1_25:	
   676  011C  1903               	btfsc	3,2
   677  011D  0008               	return
   678  011E  2910               	goto	i1l515
   679  011F                     __end_of_delay:	
   680  007E                     btemp	set	126	;btemp
   681  007E                     wtemp	set	126
   682  007E                     wtemp0	set	126
   683  0080                     wtemp1	set	128
   684  0082                     wtemp2	set	130
   685  0084                     wtemp3	set	132
   686  0086                     wtemp4	set	134
   687  0088                     wtemp5	set	136
   688  007F                     wtemp6	set	127
   689  007E                     ttemp	set	126
   690  007E                     ttemp0	set	126
   691  0081                     ttemp1	set	129
   692  0084                     ttemp2	set	132
   693  0087                     ttemp3	set	135
   694  007F                     ttemp4	set	127
   695  007E                     ltemp	set	126
   696  007E                     ltemp0	set	126
   697  0082                     ltemp1	set	130
   698  0086                     ltemp2	set	134
   699  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_readADC
    _readADC->_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _ISR                                                  6     6      0     283
                                              8 COMMON     6     6      0
                            _readADC
 ---------------------------------------------------------------------------------
 (2) _readADC                                              6     4      2     103
                                              2 COMMON     6     4      2
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                2     0      2      58
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _ISR (ROOT)
   _readADC
     _delay

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Mar 14 11:46:34 2023

            __CFG_CP$OFF 0000                       l39 010F                       _GO 00FA  
                    _GIE 005F             __CFG_CPD$OFF 0000                      _ISR 0019  
                    fsr0 0004             __CFG_FOSC$XT 0000             __CFG_LVP$OFF 0000  
                   ?_ISR 0070                     _ADIE 0466                     _ADIF 0066  
                   _PEIE 005E                     i1l33 00D2                     u1_25 011C  
                   u5_25 0035                     u6_25 0044                     u7_25 004F  
                   u8_25 005C                     u9_25 0067             __CFG_WRT$OFF 0000  
                   _main 00F8                     btemp 007E            __CFG_BOREN$ON 0000  
                   ltemp 007E                     start 0012                     ttemp 007E  
                   wtemp 007E                    ??_ISR 0078                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    i1l515 0110                    i1l571 0053  
                  i1l565 003B                    i1l583 0083                    i1l577 006B  
                  i1l595 00B5                    i1l589 009B                    u10_25 0074  
                  u11_25 007F                    u12_25 008C                    u13_25 0097  
                  u14_25 00A4                    u15_25 00AF                    _PORTB 0006  
                  _TRISB 0086            __CFG_PWRTE$ON 0000          __end_of_readADC 00F8  
                  _delay 0110              readADC@temp 0076                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 0015  
           __end_of_main 0110                   ??_main 0000                   ?_delay 0070  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                ??_readADC 0074                   saved_w 007E  
__end_of__initialization 0015           __pcstackCOMMON 0070            __end_of_delay 011F  
                ??_delay 0072               __pmaintext 00F8               __pintentry 0004  
                _GO_DONE 00FA                  __ptext0 0000                  __ptext1 0019  
                __ptext2 00C4                  __ptext3 0110                  _readADC 00C4  
           __size_of_ISR 00AB     end_of_initialization 0015      start_initialization 0015  
            __end_of_ISR 00C4                ___latbits 0002            __pcstackBANK0 0000  
             ISR@d_value 007C                 ?_readADC 0072           __size_of_delay 000F  
      interrupt_function 0004         __size_of_readADC 0034            __size_of_main 0018  
               delay@cnt 0070                 intlevel1 0000  
