

Microchip Technology PIC LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Mar 28 13:27:30 2023

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK3,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	dabs	1,0x7E,2
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108                           
   109                           	psect	idataBANK3
   110  12D2                     __pidataBANK3:	
   111                           
   112                           ;initializer for main@F1274
   113  12D2  3454               	retlw	84
   114  12D3  3465               	retlw	101
   115  12D4  346D               	retlw	109
   116  12D5  3470               	retlw	112
   117  12D6  3465               	retlw	101
   118  12D7  3472               	retlw	114
   119  12D8  3461               	retlw	97
   120  12D9  3474               	retlw	116
   121  12DA  3475               	retlw	117
   122  12DB  3472               	retlw	114
   123  12DC  3465               	retlw	101
   124  12DD  343A               	retlw	58
   125  12DE  3420               	retlw	32
   126  12DF  3400               	retlw	0
   127                           
   128                           ;initializer for main@F1272
   129  12E0  3448               	retlw	72
   130  12E1  3475               	retlw	117
   131  12E2  346D               	retlw	109
   132  12E3  3469               	retlw	105
   133  12E4  3464               	retlw	100
   134  12E5  3469               	retlw	105
   135  12E6  3474               	retlw	116
   136  12E7  3479               	retlw	121
   137  12E8  343A               	retlw	58
   138  12E9  3420               	retlw	32
   139  12EA  3400               	retlw	0
   140                           
   141                           	psect	strings
   142  1000                     __pstrings:	
   143  1000                     stringtab:	
   144  1000                     __stringtab:	
   145  1000                     stringcode:	
   146                           ;	String table - string pointers are 1 byte each
   147                           
   148  1000                     stringdir:	
   149  1000  3010               	movlw	high stringdir
   150  1001  008A               	movwf	10
   151  1002  0804               	movf	4,w
   152  1003  0A84               	incf	4,f
   153  1004  0782               	addwf	2,f
   154  1005                     __stringbase:	
   155  1005  3400               	retlw	0
   156  1006                     __end_of__stringtab:	
   157  1006                     _dpowers:	
   158  1006  3401               	retlw	1
   159  1007  3400               	retlw	0
   160  1008  3400               	retlw	0
   161  1009  3400               	retlw	0
   162  100A  340A               	retlw	10
   163  100B  3400               	retlw	0
   164  100C  3400               	retlw	0
   165  100D  3400               	retlw	0
   166  100E  3464               	retlw	100
   167  100F  3400               	retlw	0
   168  1010  3400               	retlw	0
   169  1011  3400               	retlw	0
   170  1012  34E8               	retlw	232
   171  1013  3403               	retlw	3
   172  1014  3400               	retlw	0
   173  1015  3400               	retlw	0
   174  1016  3410               	retlw	16
   175  1017  3427               	retlw	39
   176  1018  3400               	retlw	0
   177  1019  3400               	retlw	0
   178  101A  34A0               	retlw	160
   179  101B  3486               	retlw	134
   180  101C  3401               	retlw	1
   181  101D  3400               	retlw	0
   182  101E  3440               	retlw	64
   183  101F  3442               	retlw	66
   184  1020  340F               	retlw	15
   185  1021  3400               	retlw	0
   186  1022  3480               	retlw	128
   187  1023  3496               	retlw	150
   188  1024  3498               	retlw	152
   189  1025  3400               	retlw	0
   190  1026  3400               	retlw	0
   191  1027  34E1               	retlw	225
   192  1028  34F5               	retlw	245
   193  1029  3405               	retlw	5
   194  102A  3400               	retlw	0
   195  102B  34CA               	retlw	202
   196  102C  349A               	retlw	154
   197  102D  343B               	retlw	59
   198  102E                     __end_of_dpowers:	
   199  102E                     __npowers_:	
   200  102E  3400               	retlw	0
   201  102F  3480               	retlw	128
   202  1030  343F               	retlw	63
   203  1031  34CD               	retlw	205
   204  1032  34CC               	retlw	204
   205  1033  343D               	retlw	61
   206  1034  34D7               	retlw	215
   207  1035  3423               	retlw	35
   208  1036  343C               	retlw	60
   209  1037  3412               	retlw	18
   210  1038  3483               	retlw	131
   211  1039  343A               	retlw	58
   212  103A  34B7               	retlw	183
   213  103B  34D1               	retlw	209
   214  103C  3438               	retlw	56
   215  103D  34C6               	retlw	198
   216  103E  3427               	retlw	39
   217  103F  3437               	retlw	55
   218  1040  3438               	retlw	56
   219  1041  3486               	retlw	134
   220  1042  3435               	retlw	53
   221  1043  34C0               	retlw	192
   222  1044  34D6               	retlw	214
   223  1045  3433               	retlw	51
   224  1046  34CC               	retlw	204
   225  1047  342B               	retlw	43
   226  1048  3432               	retlw	50
   227  1049  3470               	retlw	112
   228  104A  3489               	retlw	137
   229  104B  3430               	retlw	48
   230  104C  34E7               	retlw	231
   231  104D  34DB               	retlw	219
   232  104E  342E               	retlw	46
   233  104F  34E5               	retlw	229
   234  1050  343C               	retlw	60
   235  1051  341E               	retlw	30
   236  1052  3442               	retlw	66
   237  1053  34A2               	retlw	162
   238  1054  340D               	retlw	13
   239  1055                     __end_of__npowers_:	
   240  1055                     __powers_:	
   241  1055  3400               	retlw	0
   242  1056  3480               	retlw	128
   243  1057  343F               	retlw	63
   244  1058  3400               	retlw	0
   245  1059  3420               	retlw	32
   246  105A  3441               	retlw	65
   247  105B  3400               	retlw	0
   248  105C  34C8               	retlw	200
   249  105D  3442               	retlw	66
   250  105E  3400               	retlw	0
   251  105F  347A               	retlw	122
   252  1060  3444               	retlw	68
   253  1061  3440               	retlw	64
   254  1062  341C               	retlw	28
   255  1063  3446               	retlw	70
   256  1064  3450               	retlw	80
   257  1065  34C3               	retlw	195
   258  1066  3447               	retlw	71
   259  1067  3424               	retlw	36
   260  1068  3474               	retlw	116
   261  1069  3449               	retlw	73
   262  106A  3497               	retlw	151
   263  106B  3418               	retlw	24
   264  106C  344B               	retlw	75
   265  106D  34BC               	retlw	188
   266  106E  34BE               	retlw	190
   267  106F  344C               	retlw	76
   268  1070  346B               	retlw	107
   269  1071  346E               	retlw	110
   270  1072  344E               	retlw	78
   271  1073  3403               	retlw	3
   272  1074  3415               	retlw	21
   273  1075  3450               	retlw	80
   274  1076  3479               	retlw	121
   275  1077  34AD               	retlw	173
   276  1078  3460               	retlw	96
   277  1079  34F3               	retlw	243
   278  107A  3449               	retlw	73
   279  107B  3471               	retlw	113
   280  107C                     __end_of__powers_:	
   281  0006                     _PORTB	set	6
   282  0013                     _SSPBUF	set	19
   283  0014                     _SSPCON	set	20
   284  0040                     _RD0	set	64
   285  0041                     _RD1	set	65
   286  0042                     _RD2	set	66
   287  0093                     _SSPADD	set	147
   288  0091                     _SSPCON2	set	145
   289  0094                     _SSPSTAT	set	148
   290  0086                     _TRISB	set	134
   291  0088                     _TRISD	set	136
   292  048D                     _ACKDT	set	1165
   293  048C                     _ACKEN	set	1164
   294  048A                     _PEN	set	1162
   295  048B                     _RCEN	set	1163
   296  0489                     _RSEN	set	1161
   297  0488                     _SEN	set	1160
   298  043B                     _TRISC3	set	1083
   299  043C                     _TRISC4	set	1084
   300  107C                     __stringdata:	
   301  107C                     STR_1:	
   302  107C  3425               	retlw	37	;'%'
   303  107D  3466               	retlw	102	;'f'
   304  107E  3400               	retlw	0
   305  107F                     __end_of__stringdata:	
   306                           
   307                           ; #config settings
   308  0000                     
   309                           	psect	cinit
   310  07F0                     start_initialization:	
   311  07F0                     __initialization:	
   312                           
   313                           ; Initialize objects allocated to BANK3
   314  07F0  1783               	bsf	3,7	;select IRP bank2
   315  07F1  30DA               	movlw	low (__pdataBANK3+25)
   316  07F2  00FD               	movwf	btemp+-1
   317  07F3  3012               	movlw	high __pidataBANK3
   318  07F4  00FE               	movwf	btemp
   319  07F5  30D2               	movlw	low __pidataBANK3
   320  07F6  00FF               	movwf	btemp+1
   321  07F7  30C1               	movlw	low __pdataBANK3
   322  07F8  0084               	movwf	4
   323  07F9  160A  118A  2278   	fcall	init_ram0
   324  07FC                     end_of_initialization:	
   325                           ;End of C runtime variable initialization code
   326                           
   327  07FC                     __end_of__initialization:	
   328  07FC  0183               	clrf	3
   329  07FD  120A  158A  2D0E   	ljmp	_main	;jump to C main() function
   330                           
   331                           	psect	dataBANK3
   332  01C1                     __pdataBANK3:	
   333  01C1                     main@F1274:	
   334  01C1                     	ds	14
   335  01CF                     main@F1272:	
   336  01CF                     	ds	11
   337                           
   338                           	psect	inittext
   339  1274                     init_fetch0:	
   340                           ;	Called with low address in FSR and high address in W
   341                           
   342  1274  087E               	movf	126,w
   343  1275  008A               	movwf	10
   344  1276  087F               	movf	127,w
   345  1277  0082               	movwf	2
   346  1278                     init_ram0:	
   347                           ;Called with:
   348                           ;	high address of idata address in btemp 
   349                           ;	low address of idata address in btemp+1 
   350                           ;	low address of data in FSR
   351                           ;	high address + 1 of data in btemp-1
   352                           
   353  1278  2274  160A  118A   	fcall	init_fetch0
   354  127B  0080               	movwf	0
   355  127C  0A84               	incf	4,f
   356  127D  0804               	movf	4,w
   357  127E  067D               	xorwf	125,w
   358  127F  1903               	btfsc	3,2
   359  1280  3400               	retlw	0
   360  1281  0AFF               	incf	127,f
   361  1282  1903               	btfsc	3,2
   362  1283  0AFE               	incf	126,f
   363  1284  2A78               	goto	init_ram0
   364                           
   365                           	psect	cstackBANK3
   366  0190                     __pcstackBANK3:	
   367  0190                     main@msgTemperature:	
   368                           
   369                           ; 14 bytes @ 0x0
   370  0190                     	ds	14
   371  019E                     main@msgHumidity:	
   372                           
   373                           ; 11 bytes @ 0xE
   374  019E                     	ds	11
   375  01A9                     main@humidityFl:	
   376                           
   377                           ; 3 bytes @ 0x19
   378  01A9                     	ds	3
   379  01AC                     main@temperatureFl:	
   380                           
   381                           ; 3 bytes @ 0x1C
   382  01AC                     	ds	3
   383  01AF                     main@humidityStr:	
   384                           
   385                           ; 4 bytes @ 0x1F
   386  01AF                     	ds	4
   387  01B3                     main@temperatureStr:	
   388                           
   389                           ; 4 bytes @ 0x23
   390  01B3                     	ds	4
   391  01B7                     main@LSBH:	
   392                           
   393                           ; 2 bytes @ 0x27
   394  01B7                     	ds	2
   395  01B9                     main@LSBT:	
   396                           
   397                           ; 2 bytes @ 0x29
   398  01B9                     	ds	2
   399  01BB                     main@MSBH:	
   400                           
   401                           ; 2 bytes @ 0x2B
   402  01BB                     	ds	2
   403  01BD                     main@MSBT:	
   404                           
   405                           ; 2 bytes @ 0x2D
   406  01BD                     	ds	2
   407  01BF                     main@i:	
   408                           
   409                           ; 2 bytes @ 0x2F
   410  01BF                     	ds	2
   411                           
   412                           	psect	cstackBANK1
   413  00A0                     __pcstackBANK1:	
   414  00A0                     _sprintf$578:	
   415                           
   416                           ; 3 bytes @ 0x0
   417  00A0                     	ds	3
   418  00A3                     _sprintf$149:	
   419                           
   420                           ; 4 bytes @ 0x3
   421  00A3                     	ds	4
   422  00A7                     sprintf@ap:	
   423                           
   424                           ; 1 bytes @ 0x7
   425  00A7                     	ds	1
   426  00A8                     sprintf@vd:	
   427                           
   428                           ; 4 bytes @ 0x8
   429  00A8                     	ds	4
   430  00AC                     sprintf@vd_151:	
   431                           
   432                           ; 4 bytes @ 0xC
   433  00AC                     	ds	4
   434  00B0                     sprintf@flag:	
   435                           
   436                           ; 2 bytes @ 0x10
   437  00B0                     	ds	2
   438  00B2                     sprintf@prec:	
   439                           
   440                           ; 2 bytes @ 0x12
   441  00B2                     	ds	2
   442  00B4                     sprintf@_val:	
   443                           
   444                           ; 4 bytes @ 0x14
   445  00B4                     	ds	4
   446  00B8                     sprintf@integ:	
   447                           
   448                           ; 3 bytes @ 0x18
   449  00B8                     	ds	3
   450  00BB                     sprintf@exp:	
   451                           
   452                           ; 2 bytes @ 0x1B
   453  00BB                     	ds	2
   454  00BD                     sprintf@sp:	
   455                           
   456                           ; 1 bytes @ 0x1D
   457  00BD                     	ds	1
   458  00BE                     sprintf@fval:	
   459                           
   460                           ; 3 bytes @ 0x1E
   461  00BE                     	ds	3
   462  00C1                     sprintf@c:	
   463                           
   464                           ; 1 bytes @ 0x21
   465  00C1                     	ds	1
   466  00C2                     ??_main:	
   467                           
   468                           ; 0 bytes @ 0x22
   469  00C2                     	ds	4
   470                           
   471                           	psect	cstackCOMMON
   472  0070                     __pcstackCOMMON:	
   473  0070                     ?_delay_ms:	
   474  0070                     ?_instCtrl:	
   475                           ; 0 bytes @ 0x0
   476                           
   477  0070                     ?_initLCD:	
   478                           ; 0 bytes @ 0x0
   479                           
   480  0070                     ?_dataCtrl:	
   481                           ; 0 bytes @ 0x0
   482                           
   483  0070                     ?_init_I2C_Master:	
   484                           ; 0 bytes @ 0x0
   485                           
   486  0070                     ??_init_I2C_Master:	
   487                           ; 0 bytes @ 0x0
   488                           
   489  0070                     ?_I2C_Wait:	
   490                           ; 0 bytes @ 0x0
   491                           
   492  0070                     ??_I2C_Wait:	
   493                           ; 0 bytes @ 0x0
   494                           
   495  0070                     ?_I2C_Start:	
   496                           ; 0 bytes @ 0x0
   497                           
   498  0070                     ??_I2C_Start:	
   499                           ; 0 bytes @ 0x0
   500                           
   501  0070                     ?_I2C_Stop:	
   502                           ; 0 bytes @ 0x0
   503                           
   504  0070                     ??_I2C_Stop:	
   505                           ; 0 bytes @ 0x0
   506                           
   507  0070                     ?_I2C_RepeatedStart:	
   508                           ; 0 bytes @ 0x0
   509                           
   510  0070                     ??_I2C_RepeatedStart:	
   511                           ; 0 bytes @ 0x0
   512                           
   513  0070                     ?_I2C_Send:	
   514                           ; 0 bytes @ 0x0
   515                           
   516  0070                     ??_I2C_Send:	
   517                           ; 0 bytes @ 0x0
   518                           
   519  0070                     ??_I2C_Receive:	
   520                           ; 0 bytes @ 0x0
   521                           
   522  0070                     ?_main:	
   523                           ; 0 bytes @ 0x0
   524                           
   525  0070                     ?___ftge:	
   526                           ; 0 bytes @ 0x0
   527                           
   528  0070                     ?_I2C_Receive:	
   529                           ; 1 bit 
   530                           
   531  0070                     ?_strlen:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?___wmul:	
   535                           ; 2 bytes @ 0x0
   536                           
   537  0070                     ?___awmod:	
   538                           ; 2 bytes @ 0x0
   539                           
   540  0070                     ?___ftpack:	
   541                           ; 2 bytes @ 0x0
   542                           
   543  0070                     ?___ftneg:	
   544                           ; 3 bytes @ 0x0
   545                           
   546  0070                     ?__tdiv_to_l_:	
   547                           ; 3 bytes @ 0x0
   548                           
   549  0070                     ?__div_to_l_:	
   550                           ; 4 bytes @ 0x0
   551                           
   552  0070                     ?___lldiv:	
   553                           ; 4 bytes @ 0x0
   554                           
   555  0070                     ?___llmod:	
   556                           ; 4 bytes @ 0x0
   557                           
   558  0070                     I2C_Send@data:	
   559                           ; 4 bytes @ 0x0
   560                           
   561  0070                     delay_ms@ms_Count:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ___wmul@multiplier:	
   565                           ; 2 bytes @ 0x0
   566                           
   567  0070                     ___awmod@divisor:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0070                     __div_to_l_@f1:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0070                     ___ftpack@arg:	
   574                           ; 3 bytes @ 0x0
   575                           
   576  0070                     __tdiv_to_l_@f1:	
   577                           ; 3 bytes @ 0x0
   578                           
   579  0070                     ___ftge@ff1:	
   580                           ; 3 bytes @ 0x0
   581                           
   582  0070                     ___ftneg@f1:	
   583                           ; 3 bytes @ 0x0
   584                           
   585  0070                     ___lldiv@divisor:	
   586                           ; 3 bytes @ 0x0
   587                           
   588  0070                     ___llmod@divisor:	
   589                           ; 4 bytes @ 0x0
   590                           
   591                           
   592                           ; 4 bytes @ 0x0
   593  0070                     	ds	1
   594  0071                     I2C_Receive@ack:	
   595                           
   596                           ; 1 bytes @ 0x1
   597  0071                     	ds	1
   598  0072                     ??_strlen:	
   599  0072                     ??_delay_ms:	
   600                           ; 0 bytes @ 0x2
   601                           
   602  0072                     I2C_Receive@temp:	
   603                           ; 0 bytes @ 0x2
   604                           
   605  0072                     delay_ms@i:	
   606                           ; 1 bytes @ 0x2
   607                           
   608  0072                     ___wmul@multiplicand:	
   609                           ; 2 bytes @ 0x2
   610                           
   611  0072                     ___awmod@dividend:	
   612                           ; 2 bytes @ 0x2
   613                           
   614                           
   615                           ; 2 bytes @ 0x2
   616  0072                     	ds	1
   617  0073                     ??___ftneg:	
   618  0073                     ___ftpack@exp:	
   619                           ; 0 bytes @ 0x3
   620                           
   621  0073                     __div_to_l_@f2:	
   622                           ; 1 bytes @ 0x3
   623                           
   624  0073                     __tdiv_to_l_@f2:	
   625                           ; 3 bytes @ 0x3
   626                           
   627  0073                     ___ftge@ff2:	
   628                           ; 3 bytes @ 0x3
   629                           
   630                           
   631                           ; 3 bytes @ 0x3
   632  0073                     	ds	1
   633  0074                     ??___wmul:	
   634  0074                     ??___awmod:	
   635                           ; 0 bytes @ 0x4
   636                           
   637  0074                     ___ftpack@sign:	
   638                           ; 0 bytes @ 0x4
   639                           
   640  0074                     delay_ms@j:	
   641                           ; 1 bytes @ 0x4
   642                           
   643  0074                     ___wmul@product:	
   644                           ; 2 bytes @ 0x4
   645                           
   646  0074                     ___lldiv@dividend:	
   647                           ; 2 bytes @ 0x4
   648                           
   649  0074                     ___llmod@dividend:	
   650                           ; 4 bytes @ 0x4
   651                           
   652                           
   653                           ; 4 bytes @ 0x4
   654  0074                     	ds	1
   655  0075                     ??___ftpack:	
   656  0075                     ___awmod@counter:	
   657                           ; 0 bytes @ 0x5
   658                           
   659                           
   660                           ; 1 bytes @ 0x5
   661  0075                     	ds	1
   662  0076                     ??__tdiv_to_l_:	
   663  0076                     ??__div_to_l_:	
   664                           ; 0 bytes @ 0x6
   665                           
   666  0076                     ??_instCtrl:	
   667                           ; 0 bytes @ 0x6
   668                           
   669  0076                     ??_dataCtrl:	
   670                           ; 0 bytes @ 0x6
   671                           
   672  0076                     ??___ftge:	
   673                           ; 0 bytes @ 0x6
   674                           
   675  0076                     instCtrl@INST:	
   676                           ; 0 bytes @ 0x6
   677                           
   678  0076                     dataCtrl@DATA:	
   679                           ; 1 bytes @ 0x6
   680                           
   681  0076                     ___awmod@sign:	
   682                           ; 1 bytes @ 0x6
   683                           
   684  0076                     strlen@cp:	
   685                           ; 1 bytes @ 0x6
   686                           
   687                           
   688                           ; 1 bytes @ 0x6
   689  0076                     	ds	1
   690  0077                     ??_initLCD:	
   691  0077                     ?___awdiv:	
   692                           ; 0 bytes @ 0x7
   693                           
   694  0077                     strlen@s:	
   695                           ; 2 bytes @ 0x7
   696                           
   697  0077                     ___awdiv@divisor:	
   698                           ; 1 bytes @ 0x7
   699                           
   700                           
   701                           ; 2 bytes @ 0x7
   702  0077                     	ds	1
   703  0078                     ??___lldiv:	
   704  0078                     ??___llmod:	
   705                           ; 0 bytes @ 0x8
   706                           
   707  0078                     ?___lltoft:	
   708                           ; 0 bytes @ 0x8
   709                           
   710  0078                     ?___lwtoft:	
   711                           ; 3 bytes @ 0x8
   712                           
   713  0078                     ___lwtoft@c:	
   714                           ; 3 bytes @ 0x8
   715                           
   716  0078                     ___lltoft@c:	
   717                           ; 2 bytes @ 0x8
   718                           
   719                           
   720                           ; 4 bytes @ 0x8
   721  0078                     	ds	1
   722  0079                     ___llmod@counter:	
   723  0079                     ___awdiv@dividend:	
   724                           ; 1 bytes @ 0x9
   725                           
   726  0079                     ___lldiv@quotient:	
   727                           ; 2 bytes @ 0x9
   728                           
   729                           
   730                           ; 4 bytes @ 0x9
   731  0079                     	ds	2
   732  007B                     ??___awdiv:	
   733  007B                     ??___lwtoft:	
   734                           ; 0 bytes @ 0xB
   735                           
   736                           
   737                           ; 0 bytes @ 0xB
   738  007B                     	ds	1
   739  007C                     ??___bmul:	
   740  007C                     ??___lltoft:	
   741                           ; 0 bytes @ 0xC
   742                           
   743                           
   744                           ; 0 bytes @ 0xC
   745  007C                     	ds	1
   746  007D                     ___lldiv@counter:	
   747  007D                     ___lltoft@exp:	
   748                           ; 1 bytes @ 0xD
   749                           
   750                           
   751                           ; 1 bytes @ 0xD
   752  007D                     	ds	1
   753  007E                     ??___ftsub:	
   754                           
   755                           	psect	cstackBANK0
   756  0020                     __pcstackBANK0:	
   757                           ; 0 bytes @ 0xE
   758                           
   759  0020                     ?___ftdiv:	
   760  0020                     ___awdiv@counter:	
   761                           ; 3 bytes @ 0x0
   762                           
   763  0020                     ___ftdiv@f2:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0020                     __div_to_l_@quot:	
   767                           ; 3 bytes @ 0x0
   768                           
   769  0020                     __tdiv_to_l_@quot:	
   770                           ; 4 bytes @ 0x0
   771                           
   772                           
   773                           ; 4 bytes @ 0x0
   774  0020                     	ds	1
   775  0021                     ___awdiv@sign:	
   776                           
   777                           ; 1 bytes @ 0x1
   778  0021                     	ds	1
   779  0022                     ___awdiv@quotient:	
   780                           
   781                           ; 2 bytes @ 0x2
   782  0022                     	ds	1
   783  0023                     ___ftdiv@f1:	
   784                           
   785                           ; 3 bytes @ 0x3
   786  0023                     	ds	1
   787  0024                     ?___bmul:	
   788  0024                     ___bmul@multiplicand:	
   789                           ; 1 bytes @ 0x4
   790                           
   791  0024                     __div_to_l_@cntr:	
   792                           ; 1 bytes @ 0x4
   793                           
   794  0024                     __tdiv_to_l_@cntr:	
   795                           ; 1 bytes @ 0x4
   796                           
   797                           
   798                           ; 1 bytes @ 0x4
   799  0024                     	ds	1
   800  0025                     ___bmul@product:	
   801  0025                     __div_to_l_@exp1:	
   802                           ; 1 bytes @ 0x5
   803                           
   804  0025                     __tdiv_to_l_@exp1:	
   805                           ; 1 bytes @ 0x5
   806                           
   807                           
   808                           ; 1 bytes @ 0x5
   809  0025                     	ds	1
   810  0026                     ??___ftdiv:	
   811  0026                     ___bmul@multiplier:	
   812                           ; 0 bytes @ 0x6
   813                           
   814                           
   815                           ; 1 bytes @ 0x6
   816  0026                     	ds	4
   817  002A                     ___ftdiv@cntr:	
   818                           
   819                           ; 1 bytes @ 0xA
   820  002A                     	ds	1
   821  002B                     ___ftdiv@f3:	
   822                           
   823                           ; 3 bytes @ 0xB
   824  002B                     	ds	3
   825  002E                     ___ftdiv@exp:	
   826                           
   827                           ; 1 bytes @ 0xE
   828  002E                     	ds	1
   829  002F                     ___ftdiv@sign:	
   830                           
   831                           ; 1 bytes @ 0xF
   832  002F                     	ds	1
   833  0030                     ?___ftmul:	
   834  0030                     ___ftmul@f1:	
   835                           ; 3 bytes @ 0x10
   836                           
   837                           
   838                           ; 3 bytes @ 0x10
   839  0030                     	ds	3
   840  0033                     ___ftmul@f2:	
   841                           
   842                           ; 3 bytes @ 0x13
   843  0033                     	ds	3
   844  0036                     ??___ftmul:	
   845                           
   846                           ; 0 bytes @ 0x16
   847  0036                     	ds	4
   848  003A                     ___ftmul@exp:	
   849                           
   850                           ; 1 bytes @ 0x1A
   851  003A                     	ds	1
   852  003B                     ___ftmul@f3_as_product:	
   853                           
   854                           ; 3 bytes @ 0x1B
   855  003B                     	ds	3
   856  003E                     ___ftmul@cntr:	
   857                           
   858                           ; 1 bytes @ 0x1E
   859  003E                     	ds	1
   860  003F                     ___ftmul@sign:	
   861                           
   862                           ; 1 bytes @ 0x1F
   863  003F                     	ds	1
   864  0040                     ?_fround:	
   865  0040                     ?_scale:	
   866                           ; 3 bytes @ 0x20
   867                           
   868                           
   869                           ; 3 bytes @ 0x20
   870  0040                     	ds	3
   871  0043                     ??_fround:	
   872  0043                     ??_scale:	
   873                           ; 0 bytes @ 0x23
   874                           
   875                           
   876                           ; 0 bytes @ 0x23
   877  0043                     	ds	2
   878  0045                     _scale$577:	
   879                           
   880                           ; 3 bytes @ 0x25
   881  0045                     	ds	3
   882  0048                     scale@scl:	
   883                           
   884                           ; 1 bytes @ 0x28
   885  0048                     	ds	1
   886  0049                     ?___fttol:	
   887  0049                     ___fttol@f1:	
   888                           ; 4 bytes @ 0x29
   889                           
   890  0049                     _fround$576:	
   891                           ; 3 bytes @ 0x29
   892                           
   893                           
   894                           ; 3 bytes @ 0x29
   895  0049                     	ds	3
   896  004C                     _fround$575:	
   897                           
   898                           ; 3 bytes @ 0x2C
   899  004C                     	ds	1
   900  004D                     ??___fttol:	
   901                           
   902                           ; 0 bytes @ 0x2D
   903  004D                     	ds	2
   904  004F                     fround@prec:	
   905                           
   906                           ; 1 bytes @ 0x2F
   907  004F                     	ds	1
   908  0050                     ?___ftadd:	
   909  0050                     ___ftadd@f1:	
   910                           ; 3 bytes @ 0x30
   911                           
   912                           
   913                           ; 3 bytes @ 0x30
   914  0050                     	ds	1
   915  0051                     ___fttol@sign1:	
   916                           
   917                           ; 1 bytes @ 0x31
   918  0051                     	ds	1
   919  0052                     ___fttol@lval:	
   920                           
   921                           ; 4 bytes @ 0x32
   922  0052                     	ds	1
   923  0053                     ___ftadd@f2:	
   924                           
   925                           ; 3 bytes @ 0x33
   926  0053                     	ds	3
   927  0056                     ??___ftadd:	
   928  0056                     ___fttol@exp1:	
   929                           ; 0 bytes @ 0x36
   930                           
   931                           
   932                           ; 1 bytes @ 0x36
   933  0056                     	ds	4
   934  005A                     ___ftadd@sign:	
   935                           
   936                           ; 1 bytes @ 0x3A
   937  005A                     	ds	1
   938  005B                     ___ftadd@exp2:	
   939                           
   940                           ; 1 bytes @ 0x3B
   941  005B                     	ds	1
   942  005C                     ___ftadd@exp1:	
   943                           
   944                           ; 1 bytes @ 0x3C
   945  005C                     	ds	1
   946  005D                     ?___ftsub:	
   947  005D                     ___ftsub@f2:	
   948                           ; 3 bytes @ 0x3D
   949                           
   950                           
   951                           ; 3 bytes @ 0x3D
   952  005D                     	ds	3
   953  0060                     ___ftsub@f1:	
   954                           
   955                           ; 3 bytes @ 0x40
   956  0060                     	ds	3
   957  0063                     ?_sprintf:	
   958  0063                     sprintf@f:	
   959                           ; 2 bytes @ 0x43
   960                           
   961                           
   962                           ; 1 bytes @ 0x43
   963  0063                     	ds	4
   964  0067                     ??_sprintf:	
   965                           
   966                           ; 0 bytes @ 0x47
   967  0067                     	ds	6
   968                           
   969                           	psect	maintext
   970  0D0E                     __pmaintext:	
   971 ;;
   972 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   973 ;;
   974 ;; *************** function _main *****************
   975 ;; Defined at:
   976 ;;		line 106 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  msgTemperatu   14    0[BANK3 ] unsigned char [14]
   981 ;;  msgHumidity    11   14[BANK3 ] unsigned char [11]
   982 ;;  temperatureS    4   35[BANK3 ] unsigned char [4]
   983 ;;  humidityStr     4   31[BANK3 ] unsigned char [4]
   984 ;;  temperatureF    3   28[BANK3 ] float 
   985 ;;  humidityFl      3   25[BANK3 ] float 
   986 ;;  i               2   47[BANK3 ] int 
   987 ;;  MSBT            2   45[BANK3 ] unsigned int 
   988 ;;  MSBH            2   43[BANK3 ] unsigned int 
   989 ;;  LSBT            2   41[BANK3 ] unsigned int 
   990 ;;  LSBH            2   39[BANK3 ] unsigned int 
   991 ;; Return value:  Size  Location     Type
   992 ;;		None               void
   993 ;; Registers used:
   994 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   995 ;; Tracked objects:
   996 ;;		On entry : 17F/0
   997 ;;		On exit  : 0/0
   998 ;;		Unchanged: 0/0
   999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1000 ;;      Params:         0       0       0       0       0
  1001 ;;      Locals:         0       0       0      49       0
  1002 ;;      Temps:          0       0       4       0       0
  1003 ;;      Totals:         0       0       4      49       0
  1004 ;;Total ram usage:       53 bytes
  1005 ;; Hardware stack levels required when called:    4
  1006 ;; This function calls:
  1007 ;;		_I2C_Receive
  1008 ;;		_I2C_RepeatedStart
  1009 ;;		_I2C_Send
  1010 ;;		_I2C_Start
  1011 ;;		_I2C_Stop
  1012 ;;		___ftadd
  1013 ;;		___ftdiv
  1014 ;;		___ftmul
  1015 ;;		___lwtoft
  1016 ;;		_dataCtrl
  1017 ;;		_delay_ms
  1018 ;;		_initLCD
  1019 ;;		_init_I2C_Master
  1020 ;;		_instCtrl
  1021 ;;		_sprintf
  1022 ;;		_strlen
  1023 ;; This function is called by:
  1024 ;;		Startup code after reset
  1025 ;; This function uses a non-reentrant model
  1026 ;;
  1027                           
  1028                           
  1029                           ;psect for function _main
  1030  0D0E                     _main:	
  1031                           
  1032                           ;dumalaganDa_LE7-3.c: 107: TRISB = 0x00;
  1033                           
  1034                           ;incstack = 0
  1035                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1036  0D0E  1683               	bsf	3,5	;RP0=1, select bank1
  1037  0D0F  1303               	bcf	3,6	;RP1=0, select bank1
  1038  0D10  0186               	clrf	6	;volatile
  1039                           
  1040                           ;dumalaganDa_LE7-3.c: 108: TRISD = 0x00;
  1041  0D11  0188               	clrf	8	;volatile
  1042                           
  1043                           ;dumalaganDa_LE7-3.c: 110: initLCD();
  1044  0D12  160A  118A  2350  120A  158A  	fcall	_initLCD
  1045                           
  1046                           ;dumalaganDa_LE7-3.c: 112: init_I2C_Master();
  1047  0D17  160A  118A  2265  120A  158A  	fcall	_init_I2C_Master
  1048  0D1C                     l86:	
  1049                           ;dumalaganDa_LE7-3.c: 113: for(;;) {
  1050                           
  1051                           
  1052                           ;dumalaganDa_LE7-3.c: 114: int i;
  1053                           ;dumalaganDa_LE7-3.c: 115: unsigned int MSBH = 0;
  1054  0D1C  1683               	bsf	3,5	;RP0=1, select bank3
  1055  0D1D  1703               	bsf	3,6	;RP1=1, select bank3
  1056  0D1E  01BB               	clrf	main@MSBH^(0+384)
  1057  0D1F  01BC               	clrf	(main@MSBH+1)^(0+384)
  1058                           
  1059                           ;dumalaganDa_LE7-3.c: 116: unsigned int LSBH = 0;
  1060  0D20  01B7               	clrf	main@LSBH^(0+384)
  1061  0D21  01B8               	clrf	(main@LSBH+1)^(0+384)
  1062                           
  1063                           ;dumalaganDa_LE7-3.c: 117: unsigned int MSBT = 0;
  1064  0D22  01BD               	clrf	main@MSBT^(0+384)
  1065  0D23  01BE               	clrf	(main@MSBT+1)^(0+384)
  1066                           
  1067                           ;dumalaganDa_LE7-3.c: 118: unsigned int LSBT = 0;
  1068  0D24  01B9               	clrf	main@LSBT^(0+384)
  1069  0D25  01BA               	clrf	(main@LSBT+1)^(0+384)
  1070                           
  1071                           ;dumalaganDa_LE7-3.c: 119: float humidityFl = 0.0;
  1072  0D26  3000               	movlw	0
  1073  0D27  00A9               	movwf	main@humidityFl^(0+384)
  1074  0D28  3000               	movlw	0
  1075  0D29  00AA               	movwf	(main@humidityFl+1)^(0+384)
  1076  0D2A  3000               	movlw	0
  1077  0D2B  00AB               	movwf	(main@humidityFl+2)^(0+384)
  1078                           
  1079                           ;dumalaganDa_LE7-3.c: 120: float temperatureFl = 0.0;
  1080  0D2C  3000               	movlw	0
  1081  0D2D  00AC               	movwf	main@temperatureFl^(0+384)
  1082  0D2E  3000               	movlw	0
  1083  0D2F  00AD               	movwf	(main@temperatureFl+1)^(0+384)
  1084  0D30  3000               	movlw	0
  1085  0D31  00AE               	movwf	(main@temperatureFl+2)^(0+384)
  1086                           
  1087                           ;dumalaganDa_LE7-3.c: 121: char msgHumidity[] = "Humidity: ";
  1088  0D32  309E               	movlw	main@msgHumidity& (0+255)
  1089  0D33  0084               	movwf	4
  1090  0D34  30CF               	movlw	low main@F1272
  1091  0D35  1683               	bsf	3,5	;RP0=1, select bank1
  1092  0D36  1303               	bcf	3,6	;RP1=0, select bank1
  1093  0D37  00C2               	movwf	??_main^(0+128)
  1094  0D38  0804               	movf	4,w
  1095  0D39  00C3               	movwf	(??_main^(0+128)+1)
  1096  0D3A  300B               	movlw	11
  1097  0D3B  00C4               	movwf	(??_main^(0+128)+2)
  1098  0D3C                     u3710:	
  1099  0D3C  0842               	movf	??_main^(0+128),w
  1100  0D3D  0084               	movwf	4
  1101  0D3E  1783               	bsf	3,7	;select IRP bank3
  1102  0D3F  0800               	movf	0,w
  1103  0D40  00C5               	movwf	(??_main^(0+128)+3)
  1104  0D41  0AC2               	incf	??_main^(0+128),f
  1105  0D42  0843               	movf	(??_main^(0+128)+1),w
  1106  0D43  0084               	movwf	4
  1107  0D44  0845               	movf	(??_main^(0+128)+3),w
  1108  0D45  0080               	movwf	0
  1109  0D46  0AC3               	incf	(??_main^(0+128)+1),f
  1110  0D47  0BC4               	decfsz	(??_main^(0+128)+2),f
  1111  0D48  2D3C               	goto	u3710
  1112                           
  1113                           ;dumalaganDa_LE7-3.c: 122: char msgTemperature[] = "Temperature: ";
  1114  0D49  3090               	movlw	main@msgTemperature& (0+255)
  1115  0D4A  0084               	movwf	4
  1116  0D4B  30C1               	movlw	low main@F1274
  1117  0D4C  00C2               	movwf	??_main^(0+128)
  1118  0D4D  0804               	movf	4,w
  1119  0D4E  00C3               	movwf	(??_main^(0+128)+1)
  1120  0D4F  300E               	movlw	14
  1121  0D50  00C4               	movwf	(??_main^(0+128)+2)
  1122  0D51                     u3720:	
  1123  0D51  0842               	movf	??_main^(0+128),w
  1124  0D52  0084               	movwf	4
  1125  0D53  1783               	bsf	3,7	;select IRP bank3
  1126  0D54  0800               	movf	0,w
  1127  0D55  00C5               	movwf	(??_main^(0+128)+3)
  1128  0D56  0AC2               	incf	??_main^(0+128),f
  1129  0D57  0843               	movf	(??_main^(0+128)+1),w
  1130  0D58  0084               	movwf	4
  1131  0D59  0845               	movf	(??_main^(0+128)+3),w
  1132  0D5A  0080               	movwf	0
  1133  0D5B  0AC3               	incf	(??_main^(0+128)+1),f
  1134  0D5C  0BC4               	decfsz	(??_main^(0+128)+2),f
  1135  0D5D  2D51               	goto	u3720
  1136                           
  1137                           ;dumalaganDa_LE7-3.c: 123: char humidityStr[4];
  1138                           ;dumalaganDa_LE7-3.c: 124: char temperatureStr[4];
  1139                           ;dumalaganDa_LE7-3.c: 126: instCtrl(0x03);
  1140  0D5E  3003               	movlw	3
  1141  0D5F  160A  118A  2298  120A  158A  	fcall	_instCtrl
  1142                           
  1143                           ;dumalaganDa_LE7-3.c: 127: instCtrl(0x06);
  1144  0D64  3006               	movlw	6
  1145  0D65  160A  118A  2298  120A  158A  	fcall	_instCtrl
  1146                           
  1147                           ;dumalaganDa_LE7-3.c: 128: instCtrl(0x0C);
  1148  0D6A  300C               	movlw	12
  1149  0D6B  160A  118A  2298  120A  158A  	fcall	_instCtrl
  1150                           
  1151                           ;dumalaganDa_LE7-3.c: 129: instCtrl(0x80);
  1152  0D70  3080               	movlw	128
  1153  0D71  160A  118A  2298  120A  158A  	fcall	_instCtrl
  1154                           
  1155                           ;dumalaganDa_LE7-3.c: 130: I2C_Start();
  1156  0D76  160A  118A  2247  120A  158A  	fcall	_I2C_Start
  1157                           
  1158                           ;dumalaganDa_LE7-3.c: 131: I2C_Send(0x80);
  1159  0D7B  3080               	movlw	128
  1160  0D7C  120A  158A  2000  120A  158A  	fcall	_I2C_Send
  1161                           
  1162                           ;dumalaganDa_LE7-3.c: 132: I2C_Send(0xE5);
  1163  0D81  30E5               	movlw	229
  1164  0D82  120A  158A  2000  120A  158A  	fcall	_I2C_Send
  1165                           
  1166                           ;dumalaganDa_LE7-3.c: 133: I2C_RepeatedStart();
  1167  0D87  160A  118A  2240  120A  158A  	fcall	_I2C_RepeatedStart
  1168                           
  1169                           ;dumalaganDa_LE7-3.c: 134: I2C_Send(0x81);
  1170  0D8C  3081               	movlw	129
  1171  0D8D  120A  158A  2000  120A  158A  	fcall	_I2C_Send
  1172                           
  1173                           ;dumalaganDa_LE7-3.c: 135: MSBH = I2C_Receive(1);
  1174  0D92  3001               	movlw	1
  1175  0D93  160A  118A  232A  120A  158A  	fcall	_I2C_Receive
  1176  0D98  1683               	bsf	3,5	;RP0=1, select bank1
  1177  0D99  1303               	bcf	3,6	;RP1=0, select bank1
  1178  0D9A  00C2               	movwf	??_main^(0+128)
  1179  0D9B  01C3               	clrf	(??_main^(0+128)+1)
  1180  0D9C  0842               	movf	??_main^(0+128),w
  1181  0D9D  1683               	bsf	3,5	;RP0=1, select bank3
  1182  0D9E  1703               	bsf	3,6	;RP1=1, select bank3
  1183  0D9F  00BB               	movwf	main@MSBH^(0+384)
  1184  0DA0  1683               	bsf	3,5	;RP0=1, select bank1
  1185  0DA1  1303               	bcf	3,6	;RP1=0, select bank1
  1186  0DA2  0843               	movf	(??_main+1)^(0+128),w
  1187  0DA3  1683               	bsf	3,5	;RP0=1, select bank3
  1188  0DA4  1703               	bsf	3,6	;RP1=1, select bank3
  1189  0DA5  00BC               	movwf	(main@MSBH+1)^(0+384)
  1190                           
  1191                           ;dumalaganDa_LE7-3.c: 136: LSBH = I2C_Receive(0);
  1192  0DA6  3000               	movlw	0
  1193  0DA7  160A  118A  232A  120A  158A  	fcall	_I2C_Receive
  1194  0DAC  1683               	bsf	3,5	;RP0=1, select bank1
  1195  0DAD  1303               	bcf	3,6	;RP1=0, select bank1
  1196  0DAE  00C2               	movwf	??_main^(0+128)
  1197  0DAF  01C3               	clrf	(??_main^(0+128)+1)
  1198  0DB0  0842               	movf	??_main^(0+128),w
  1199  0DB1  1683               	bsf	3,5	;RP0=1, select bank3
  1200  0DB2  1703               	bsf	3,6	;RP1=1, select bank3
  1201  0DB3  00B7               	movwf	main@LSBH^(0+384)
  1202  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  1203  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  1204  0DB6  0843               	movf	(??_main+1)^(0+128),w
  1205  0DB7  1683               	bsf	3,5	;RP0=1, select bank3
  1206  0DB8  1703               	bsf	3,6	;RP1=1, select bank3
  1207  0DB9  00B8               	movwf	(main@LSBH+1)^(0+384)
  1208                           
  1209                           ;dumalaganDa_LE7-3.c: 137: I2C_Stop();
  1210  0DBA  160A  118A  224E  120A  158A  	fcall	_I2C_Stop
  1211                           
  1212                           ;dumalaganDa_LE7-3.c: 138: delay_ms(50);
  1213  0DBF  3032               	movlw	50
  1214  0DC0  00F0               	movwf	delay_ms@ms_Count
  1215  0DC1  3000               	movlw	0
  1216  0DC2  00F1               	movwf	delay_ms@ms_Count+1
  1217  0DC3  160A  118A  239C  120A  158A  	fcall	_delay_ms
  1218                           
  1219                           ;dumalaganDa_LE7-3.c: 140: LSBH = LSBH & 0xFC;
  1220  0DC8  30FC               	movlw	252
  1221  0DC9  1683               	bsf	3,5	;RP0=1, select bank3
  1222  0DCA  1703               	bsf	3,6	;RP1=1, select bank3
  1223  0DCB  0537               	andwf	main@LSBH^(0+384),w
  1224  0DCC  00B7               	movwf	main@LSBH^(0+384)
  1225  0DCD  3000               	movlw	0
  1226  0DCE  0538               	andwf	(main@LSBH+1)^(0+384),w
  1227  0DCF  00B8               	movwf	(main@LSBH+1)^(0+384)
  1228                           
  1229                           ;dumalaganDa_LE7-3.c: 141: MSBH = MSBH << 8;
  1230  0DD0  083B               	movf	main@MSBH^(0+384),w
  1231  0DD1  1683               	bsf	3,5	;RP0=1, select bank1
  1232  0DD2  1303               	bcf	3,6	;RP1=0, select bank1
  1233  0DD3  00C3               	movwf	(??_main^(0+128)+1)
  1234  0DD4  01C2               	clrf	??_main^(0+128)
  1235  0DD5  0842               	movf	??_main^(0+128),w
  1236  0DD6  1683               	bsf	3,5	;RP0=1, select bank3
  1237  0DD7  1703               	bsf	3,6	;RP1=1, select bank3
  1238  0DD8  00BB               	movwf	main@MSBH^(0+384)
  1239  0DD9  1683               	bsf	3,5	;RP0=1, select bank1
  1240  0DDA  1303               	bcf	3,6	;RP1=0, select bank1
  1241  0DDB  0843               	movf	(??_main+1)^(0+128),w
  1242  0DDC  1683               	bsf	3,5	;RP0=1, select bank3
  1243  0DDD  1703               	bsf	3,6	;RP1=1, select bank3
  1244  0DDE  00BC               	movwf	(main@MSBH+1)^(0+384)
  1245                           
  1246                           ;dumalaganDa_LE7-3.c: 142: MSBH = MSBH | LSBH;
  1247  0DDF  0837               	movf	main@LSBH^(0+384),w
  1248  0DE0  043B               	iorwf	main@MSBH^(0+384),w
  1249  0DE1  00BB               	movwf	main@MSBH^(0+384)
  1250  0DE2  0838               	movf	(main@LSBH+1)^(0+384),w
  1251  0DE3  043C               	iorwf	(main@MSBH+1)^(0+384),w
  1252  0DE4  00BC               	movwf	(main@MSBH+1)^(0+384)
  1253                           
  1254                           ;dumalaganDa_LE7-3.c: 143: humidityFl = -6.0 + (125.0*(MSBH/65536.0));
  1255  0DE5  3000               	movlw	0
  1256  0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  1257  0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  1258  0DE8  00D0               	movwf	___ftadd@f1
  1259  0DE9  30C0               	movlw	192
  1260  0DEA  00D1               	movwf	___ftadd@f1+1
  1261  0DEB  30C0               	movlw	192
  1262  0DEC  00D2               	movwf	___ftadd@f1+2
  1263  0DED  3000               	movlw	0
  1264  0DEE  00B0               	movwf	___ftmul@f1
  1265  0DEF  30FA               	movlw	250
  1266  0DF0  00B1               	movwf	___ftmul@f1+1
  1267  0DF1  3042               	movlw	66
  1268  0DF2  00B2               	movwf	___ftmul@f1+2
  1269  0DF3  3000               	movlw	0
  1270  0DF4  00A0               	movwf	___ftdiv@f2
  1271  0DF5  3080               	movlw	128
  1272  0DF6  00A1               	movwf	___ftdiv@f2+1
  1273  0DF7  3047               	movlw	71
  1274  0DF8  00A2               	movwf	___ftdiv@f2+2
  1275  0DF9  1683               	bsf	3,5	;RP0=1, select bank3
  1276  0DFA  1703               	bsf	3,6	;RP1=1, select bank3
  1277  0DFB  083C               	movf	(main@MSBH+1)^(0+384),w
  1278  0DFC  01F9               	clrf	___lwtoft@c+1
  1279  0DFD  07F9               	addwf	___lwtoft@c+1,f
  1280  0DFE  083B               	movf	main@MSBH^(0+384),w
  1281  0DFF  01F8               	clrf	___lwtoft@c
  1282  0E00  07F8               	addwf	___lwtoft@c,f
  1283  0E01  160A  118A  22BE  120A  158A  	fcall	___lwtoft
  1284  0E06  0878               	movf	?___lwtoft,w
  1285  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0E09  00A3               	movwf	___ftdiv@f1
  1288  0E0A  0879               	movf	?___lwtoft+1,w
  1289  0E0B  00A4               	movwf	___ftdiv@f1+1
  1290  0E0C  087A               	movf	?___lwtoft+2,w
  1291  0E0D  00A5               	movwf	___ftdiv@f1+2
  1292  0E0E  120A  118A  2003  120A  158A  	fcall	___ftdiv
  1293  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0E15  0820               	movf	?___ftdiv,w
  1296  0E16  00B3               	movwf	___ftmul@f2
  1297  0E17  0821               	movf	?___ftdiv+1,w
  1298  0E18  00B4               	movwf	___ftmul@f2+1
  1299  0E19  0822               	movf	?___ftdiv+2,w
  1300  0E1A  00B5               	movwf	___ftmul@f2+2
  1301  0E1B  160A  118A  272D  120A  158A  	fcall	___ftmul
  1302  0E20  1283               	bcf	3,5	;RP0=0, select bank0
  1303  0E21  1303               	bcf	3,6	;RP1=0, select bank0
  1304  0E22  0830               	movf	?___ftmul,w
  1305  0E23  00D3               	movwf	___ftadd@f2
  1306  0E24  0831               	movf	?___ftmul+1,w
  1307  0E25  00D4               	movwf	___ftadd@f2+1
  1308  0E26  0832               	movf	?___ftmul+2,w
  1309  0E27  00D5               	movwf	___ftadd@f2+2
  1310  0E28  120A  158A  2034  120A  158A  	fcall	___ftadd
  1311  0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  1313  0E2F  0850               	movf	?___ftadd,w
  1314  0E30  1683               	bsf	3,5	;RP0=1, select bank3
  1315  0E31  1703               	bsf	3,6	;RP1=1, select bank3
  1316  0E32  00A9               	movwf	main@humidityFl^(0+384)
  1317  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0E35  0851               	movf	?___ftadd+1,w
  1320  0E36  1683               	bsf	3,5	;RP0=1, select bank3
  1321  0E37  1703               	bsf	3,6	;RP1=1, select bank3
  1322  0E38  00AA               	movwf	(main@humidityFl+1)^(0+384)
  1323  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0E3B  0852               	movf	?___ftadd+2,w
  1326  0E3C  1683               	bsf	3,5	;RP0=1, select bank3
  1327  0E3D  1703               	bsf	3,6	;RP1=1, select bank3
  1328  0E3E  00AB               	movwf	(main@humidityFl+2)^(0+384)
  1329                           
  1330                           ;dumalaganDa_LE7-3.c: 144: sprintf(humidityStr, "%f", humidityFl);
  1331  0E3F  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1332  0E40  1683               	bsf	3,5	;RP0=1, select bank1
  1333  0E41  1303               	bcf	3,6	;RP1=0, select bank1
  1334  0E42  00C2               	movwf	??_main^(0+128)
  1335  0E43  0842               	movf	??_main^(0+128),w
  1336  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  1337  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  1338  0E46  00E3               	movwf	sprintf@f
  1339  0E47  1683               	bsf	3,5	;RP0=1, select bank3
  1340  0E48  1703               	bsf	3,6	;RP1=1, select bank3
  1341  0E49  0829               	movf	main@humidityFl^(0+384),w
  1342  0E4A  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0E4B  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0E4C  00E4               	movwf	?_sprintf+1
  1345  0E4D  1683               	bsf	3,5	;RP0=1, select bank3
  1346  0E4E  1703               	bsf	3,6	;RP1=1, select bank3
  1347  0E4F  082A               	movf	(main@humidityFl+1)^(0+384),w
  1348  0E50  1283               	bcf	3,5	;RP0=0, select bank0
  1349  0E51  1303               	bcf	3,6	;RP1=0, select bank0
  1350  0E52  00E5               	movwf	?_sprintf+2
  1351  0E53  1683               	bsf	3,5	;RP0=1, select bank3
  1352  0E54  1703               	bsf	3,6	;RP1=1, select bank3
  1353  0E55  082B               	movf	(main@humidityFl+2)^(0+384),w
  1354  0E56  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0E57  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0E58  00E6               	movwf	?_sprintf+3
  1357  0E59  30AF               	movlw	main@humidityStr& (0+255)
  1358  0E5A  120A  118A  2257  120A  158A  	fcall	_sprintf
  1359                           
  1360                           ;dumalaganDa_LE7-3.c: 145: for(i=0; i<strlen(msgHumidity); i++)
  1361  0E5F  1683               	bsf	3,5	;RP0=1, select bank3
  1362  0E60  1703               	bsf	3,6	;RP1=1, select bank3
  1363  0E61  01BF               	clrf	main@i^(0+384)
  1364  0E62  01C0               	clrf	(main@i+1)^(0+384)
  1365  0E63                     l2568:	
  1366  0E63  309E               	movlw	main@msgHumidity& (0+255)
  1367  0E64  160A  118A  2376  120A  158A  	fcall	_strlen
  1368  0E69  0871               	movf	?_strlen+1,w
  1369  0E6A  1683               	bsf	3,5	;RP0=1, select bank3
  1370  0E6B  1703               	bsf	3,6	;RP1=1, select bank3
  1371  0E6C  0240               	subwf	(main@i+1)^(0+384),w
  1372  0E6D  1D03               	skipz
  1373  0E6E  2E71               	goto	u3735
  1374  0E6F  0870               	movf	?_strlen,w
  1375  0E70  023F               	subwf	main@i^(0+384),w
  1376  0E71                     u3735:	
  1377  0E71  1803               	btfsc	3,0
  1378  0E72  2E86               	goto	l2570
  1379                           
  1380                           ;dumalaganDa_LE7-3.c: 146: dataCtrl(msgHumidity[i]);
  1381  0E73  083F               	movf	main@i^(0+384),w
  1382  0E74  3E9E               	addlw	main@msgHumidity& (0+255)
  1383  0E75  0084               	movwf	4
  1384  0E76  1783               	bsf	3,7	;select IRP bank3
  1385  0E77  0800               	movf	0,w
  1386  0E78  160A  118A  2285  120A  158A  	fcall	_dataCtrl
  1387  0E7D  3001               	movlw	1
  1388  0E7E  1683               	bsf	3,5	;RP0=1, select bank3
  1389  0E7F  1703               	bsf	3,6	;RP1=1, select bank3
  1390  0E80  07BF               	addwf	main@i^(0+384),f
  1391  0E81  1803               	skipnc
  1392  0E82  0AC0               	incf	(main@i+1)^(0+384),f
  1393  0E83  3000               	movlw	0
  1394  0E84  07C0               	addwf	(main@i+1)^(0+384),f
  1395  0E85  2E63               	goto	l2568
  1396  0E86                     l2570:	
  1397                           
  1398                           ;dumalaganDa_LE7-3.c: 147: dataCtrl(humidityStr[0]);
  1399  0E86  082F               	movf	main@humidityStr^(0+384),w
  1400  0E87  160A  118A  2285  120A  158A  	fcall	_dataCtrl
  1401                           
  1402                           ;dumalaganDa_LE7-3.c: 148: dataCtrl(humidityStr[1]);
  1403  0E8C  1683               	bsf	3,5	;RP0=1, select bank3
  1404  0E8D  1703               	bsf	3,6	;RP1=1, select bank3
  1405  0E8E  0830               	movf	(main@humidityStr^(0+384)+1),w
  1406  0E8F  160A  118A  2285  120A  158A  	fcall	_dataCtrl
  1407                           
  1408                           ;dumalaganDa_LE7-3.c: 149: dataCtrl('%');
  1409  0E94  3025               	movlw	37
  1410  0E95  160A  118A  2285  120A  158A  	fcall	_dataCtrl
  1411                           
  1412                           ;dumalaganDa_LE7-3.c: 150: instCtrl(0xC0);
  1413  0E9A  30C0               	movlw	192
  1414  0E9B  160A  118A  2298  120A  158A  	fcall	_instCtrl
  1415                           
  1416                           ;dumalaganDa_LE7-3.c: 151: I2C_Start();
  1417  0EA0  160A  118A  2247  120A  158A  	fcall	_I2C_Start
  1418                           
  1419                           ;dumalaganDa_LE7-3.c: 152: I2C_Send(0x80);
  1420  0EA5  3080               	movlw	128
  1421  0EA6  120A  158A  2000  120A  158A  	fcall	_I2C_Send
  1422                           
  1423                           ;dumalaganDa_LE7-3.c: 153: I2C_Send(0xFE);
  1424  0EAB  30FE               	movlw	254
  1425  0EAC  120A  158A  2000  120A  158A  	fcall	_I2C_Send
  1426                           
  1427                           ;dumalaganDa_LE7-3.c: 154: I2C_Send(0xE3);
  1428  0EB1  30E3               	movlw	227
  1429  0EB2  120A  158A  2000  120A  158A  	fcall	_I2C_Send
  1430                           
  1431                           ;dumalaganDa_LE7-3.c: 155: I2C_RepeatedStart();
  1432  0EB7  160A  118A  2240  120A  158A  	fcall	_I2C_RepeatedStart
  1433                           
  1434                           ;dumalaganDa_LE7-3.c: 156: I2C_Send(0x81);
  1435  0EBC  3081               	movlw	129
  1436  0EBD  120A  158A  2000  120A  158A  	fcall	_I2C_Send
  1437                           
  1438                           ;dumalaganDa_LE7-3.c: 157: MSBT = I2C_Receive(1);
  1439  0EC2  3001               	movlw	1
  1440  0EC3  160A  118A  232A  120A  158A  	fcall	_I2C_Receive
  1441  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  1442  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  1443  0ECA  00C2               	movwf	??_main^(0+128)
  1444  0ECB  01C3               	clrf	(??_main^(0+128)+1)
  1445  0ECC  0842               	movf	??_main^(0+128),w
  1446  0ECD  1683               	bsf	3,5	;RP0=1, select bank3
  1447  0ECE  1703               	bsf	3,6	;RP1=1, select bank3
  1448  0ECF  00BD               	movwf	main@MSBT^(0+384)
  1449  0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  1450  0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  1451  0ED2  0843               	movf	(??_main+1)^(0+128),w
  1452  0ED3  1683               	bsf	3,5	;RP0=1, select bank3
  1453  0ED4  1703               	bsf	3,6	;RP1=1, select bank3
  1454  0ED5  00BE               	movwf	(main@MSBT+1)^(0+384)
  1455                           
  1456                           ;dumalaganDa_LE7-3.c: 158: LSBT = I2C_Receive(0);
  1457  0ED6  3000               	movlw	0
  1458  0ED7  160A  118A  232A  120A  158A  	fcall	_I2C_Receive
  1459  0EDC  1683               	bsf	3,5	;RP0=1, select bank1
  1460  0EDD  1303               	bcf	3,6	;RP1=0, select bank1
  1461  0EDE  00C2               	movwf	??_main^(0+128)
  1462  0EDF  01C3               	clrf	(??_main^(0+128)+1)
  1463  0EE0  0842               	movf	??_main^(0+128),w
  1464  0EE1  1683               	bsf	3,5	;RP0=1, select bank3
  1465  0EE2  1703               	bsf	3,6	;RP1=1, select bank3
  1466  0EE3  00B9               	movwf	main@LSBT^(0+384)
  1467  0EE4  1683               	bsf	3,5	;RP0=1, select bank1
  1468  0EE5  1303               	bcf	3,6	;RP1=0, select bank1
  1469  0EE6  0843               	movf	(??_main+1)^(0+128),w
  1470  0EE7  1683               	bsf	3,5	;RP0=1, select bank3
  1471  0EE8  1703               	bsf	3,6	;RP1=1, select bank3
  1472  0EE9  00BA               	movwf	(main@LSBT+1)^(0+384)
  1473                           
  1474                           ;dumalaganDa_LE7-3.c: 159: I2C_Stop();
  1475  0EEA  160A  118A  224E  120A  158A  	fcall	_I2C_Stop
  1476                           
  1477                           ;dumalaganDa_LE7-3.c: 160: delay_ms(50);
  1478  0EEF  3032               	movlw	50
  1479  0EF0  00F0               	movwf	delay_ms@ms_Count
  1480  0EF1  3000               	movlw	0
  1481  0EF2  00F1               	movwf	delay_ms@ms_Count+1
  1482  0EF3  160A  118A  239C  120A  158A  	fcall	_delay_ms
  1483                           
  1484                           ;dumalaganDa_LE7-3.c: 161: LSBT = LSBT & 0xFC;
  1485  0EF8  30FC               	movlw	252
  1486  0EF9  1683               	bsf	3,5	;RP0=1, select bank3
  1487  0EFA  1703               	bsf	3,6	;RP1=1, select bank3
  1488  0EFB  0539               	andwf	main@LSBT^(0+384),w
  1489  0EFC  00B9               	movwf	main@LSBT^(0+384)
  1490  0EFD  3000               	movlw	0
  1491  0EFE  053A               	andwf	(main@LSBT+1)^(0+384),w
  1492  0EFF  00BA               	movwf	(main@LSBT+1)^(0+384)
  1493                           
  1494                           ;dumalaganDa_LE7-3.c: 162: MSBT = MSBT << 8;
  1495  0F00  083D               	movf	main@MSBT^(0+384),w
  1496  0F01  1683               	bsf	3,5	;RP0=1, select bank1
  1497  0F02  1303               	bcf	3,6	;RP1=0, select bank1
  1498  0F03  00C3               	movwf	(??_main^(0+128)+1)
  1499  0F04  01C2               	clrf	??_main^(0+128)
  1500  0F05  0842               	movf	??_main^(0+128),w
  1501  0F06  1683               	bsf	3,5	;RP0=1, select bank3
  1502  0F07  1703               	bsf	3,6	;RP1=1, select bank3
  1503  0F08  00BD               	movwf	main@MSBT^(0+384)
  1504  0F09  1683               	bsf	3,5	;RP0=1, select bank1
  1505  0F0A  1303               	bcf	3,6	;RP1=0, select bank1
  1506  0F0B  0843               	movf	(??_main+1)^(0+128),w
  1507  0F0C  1683               	bsf	3,5	;RP0=1, select bank3
  1508  0F0D  1703               	bsf	3,6	;RP1=1, select bank3
  1509  0F0E  00BE               	movwf	(main@MSBT+1)^(0+384)
  1510                           
  1511                           ;dumalaganDa_LE7-3.c: 163: MSBT = MSBT | LSBT;
  1512  0F0F  0839               	movf	main@LSBT^(0+384),w
  1513  0F10  043D               	iorwf	main@MSBT^(0+384),w
  1514  0F11  00BD               	movwf	main@MSBT^(0+384)
  1515  0F12  083A               	movf	(main@LSBT+1)^(0+384),w
  1516  0F13  043E               	iorwf	(main@MSBT+1)^(0+384),w
  1517  0F14  00BE               	movwf	(main@MSBT+1)^(0+384)
  1518                           
  1519                           ;dumalaganDa_LE7-3.c: 164: temperatureFl = -46.85 + (175.72*(MSBT/65536.0));
  1520  0F15  3066               	movlw	102
  1521  0F16  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0F17  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0F18  00D0               	movwf	___ftadd@f1
  1524  0F19  303B               	movlw	59
  1525  0F1A  00D1               	movwf	___ftadd@f1+1
  1526  0F1B  30C2               	movlw	194
  1527  0F1C  00D2               	movwf	___ftadd@f1+2
  1528  0F1D  30B8               	movlw	184
  1529  0F1E  00B0               	movwf	___ftmul@f1
  1530  0F1F  302F               	movlw	47
  1531  0F20  00B1               	movwf	___ftmul@f1+1
  1532  0F21  3043               	movlw	67
  1533  0F22  00B2               	movwf	___ftmul@f1+2
  1534  0F23  3000               	movlw	0
  1535  0F24  00A0               	movwf	___ftdiv@f2
  1536  0F25  3080               	movlw	128
  1537  0F26  00A1               	movwf	___ftdiv@f2+1
  1538  0F27  3047               	movlw	71
  1539  0F28  00A2               	movwf	___ftdiv@f2+2
  1540  0F29  1683               	bsf	3,5	;RP0=1, select bank3
  1541  0F2A  1703               	bsf	3,6	;RP1=1, select bank3
  1542  0F2B  083E               	movf	(main@MSBT+1)^(0+384),w
  1543  0F2C  01F9               	clrf	___lwtoft@c+1
  1544  0F2D  07F9               	addwf	___lwtoft@c+1,f
  1545  0F2E  083D               	movf	main@MSBT^(0+384),w
  1546  0F2F  01F8               	clrf	___lwtoft@c
  1547  0F30  07F8               	addwf	___lwtoft@c,f
  1548  0F31  160A  118A  22BE  120A  158A  	fcall	___lwtoft
  1549  0F36  0878               	movf	?___lwtoft,w
  1550  0F37  1283               	bcf	3,5	;RP0=0, select bank0
  1551  0F38  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0F39  00A3               	movwf	___ftdiv@f1
  1553  0F3A  0879               	movf	?___lwtoft+1,w
  1554  0F3B  00A4               	movwf	___ftdiv@f1+1
  1555  0F3C  087A               	movf	?___lwtoft+2,w
  1556  0F3D  00A5               	movwf	___ftdiv@f1+2
  1557  0F3E  120A  118A  2003  120A  158A  	fcall	___ftdiv
  1558  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0F45  0820               	movf	?___ftdiv,w
  1561  0F46  00B3               	movwf	___ftmul@f2
  1562  0F47  0821               	movf	?___ftdiv+1,w
  1563  0F48  00B4               	movwf	___ftmul@f2+1
  1564  0F49  0822               	movf	?___ftdiv+2,w
  1565  0F4A  00B5               	movwf	___ftmul@f2+2
  1566  0F4B  160A  118A  272D  120A  158A  	fcall	___ftmul
  1567  0F50  1283               	bcf	3,5	;RP0=0, select bank0
  1568  0F51  1303               	bcf	3,6	;RP1=0, select bank0
  1569  0F52  0830               	movf	?___ftmul,w
  1570  0F53  00D3               	movwf	___ftadd@f2
  1571  0F54  0831               	movf	?___ftmul+1,w
  1572  0F55  00D4               	movwf	___ftadd@f2+1
  1573  0F56  0832               	movf	?___ftmul+2,w
  1574  0F57  00D5               	movwf	___ftadd@f2+2
  1575  0F58  120A  158A  2034  120A  158A  	fcall	___ftadd
  1576  0F5D  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0F5E  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0F5F  0850               	movf	?___ftadd,w
  1579  0F60  1683               	bsf	3,5	;RP0=1, select bank3
  1580  0F61  1703               	bsf	3,6	;RP1=1, select bank3
  1581  0F62  00AC               	movwf	main@temperatureFl^(0+384)
  1582  0F63  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0F64  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0F65  0851               	movf	?___ftadd+1,w
  1585  0F66  1683               	bsf	3,5	;RP0=1, select bank3
  1586  0F67  1703               	bsf	3,6	;RP1=1, select bank3
  1587  0F68  00AD               	movwf	(main@temperatureFl+1)^(0+384)
  1588  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  1590  0F6B  0852               	movf	?___ftadd+2,w
  1591  0F6C  1683               	bsf	3,5	;RP0=1, select bank3
  1592  0F6D  1703               	bsf	3,6	;RP1=1, select bank3
  1593  0F6E  00AE               	movwf	(main@temperatureFl+2)^(0+384)
  1594                           
  1595                           ;dumalaganDa_LE7-3.c: 165: sprintf(temperatureStr, "%f", temperatureFl);
  1596  0F6F  3077               	movlw	(STR_1-__stringbase)& (0+255)
  1597  0F70  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0F71  1303               	bcf	3,6	;RP1=0, select bank1
  1599  0F72  00C2               	movwf	??_main^(0+128)
  1600  0F73  0842               	movf	??_main^(0+128),w
  1601  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  1602  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  1603  0F76  00E3               	movwf	sprintf@f
  1604  0F77  1683               	bsf	3,5	;RP0=1, select bank3
  1605  0F78  1703               	bsf	3,6	;RP1=1, select bank3
  1606  0F79  082C               	movf	main@temperatureFl^(0+384),w
  1607  0F7A  1283               	bcf	3,5	;RP0=0, select bank0
  1608  0F7B  1303               	bcf	3,6	;RP1=0, select bank0
  1609  0F7C  00E4               	movwf	?_sprintf+1
  1610  0F7D  1683               	bsf	3,5	;RP0=1, select bank3
  1611  0F7E  1703               	bsf	3,6	;RP1=1, select bank3
  1612  0F7F  082D               	movf	(main@temperatureFl+1)^(0+384),w
  1613  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0F82  00E5               	movwf	?_sprintf+2
  1616  0F83  1683               	bsf	3,5	;RP0=1, select bank3
  1617  0F84  1703               	bsf	3,6	;RP1=1, select bank3
  1618  0F85  082E               	movf	(main@temperatureFl+2)^(0+384),w
  1619  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  1620  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  1621  0F88  00E6               	movwf	?_sprintf+3
  1622  0F89  30B3               	movlw	main@temperatureStr& (0+255)
  1623  0F8A  120A  118A  2257  120A  158A  	fcall	_sprintf
  1624                           
  1625                           ;dumalaganDa_LE7-3.c: 166: for(i=0; i<strlen(msgTemperature); i++)
  1626  0F8F  1683               	bsf	3,5	;RP0=1, select bank3
  1627  0F90  1703               	bsf	3,6	;RP1=1, select bank3
  1628  0F91  01BF               	clrf	main@i^(0+384)
  1629  0F92  01C0               	clrf	(main@i+1)^(0+384)
  1630  0F93                     l2588:	
  1631  0F93  3090               	movlw	main@msgTemperature& (0+255)
  1632  0F94  160A  118A  2376  120A  158A  	fcall	_strlen
  1633  0F99  0871               	movf	?_strlen+1,w
  1634  0F9A  1683               	bsf	3,5	;RP0=1, select bank3
  1635  0F9B  1703               	bsf	3,6	;RP1=1, select bank3
  1636  0F9C  0240               	subwf	(main@i+1)^(0+384),w
  1637  0F9D  1D03               	skipz
  1638  0F9E  2FA1               	goto	u3745
  1639  0F9F  0870               	movf	?_strlen,w
  1640  0FA0  023F               	subwf	main@i^(0+384),w
  1641  0FA1                     u3745:	
  1642  0FA1  1803               	btfsc	3,0
  1643  0FA2  2FB6               	goto	l2590
  1644                           
  1645                           ;dumalaganDa_LE7-3.c: 167: dataCtrl(msgTemperature[i]);
  1646  0FA3  083F               	movf	main@i^(0+384),w
  1647  0FA4  3E90               	addlw	main@msgTemperature& (0+255)
  1648  0FA5  0084               	movwf	4
  1649  0FA6  1783               	bsf	3,7	;select IRP bank3
  1650  0FA7  0800               	movf	0,w
  1651  0FA8  160A  118A  2285  120A  158A  	fcall	_dataCtrl
  1652  0FAD  3001               	movlw	1
  1653  0FAE  1683               	bsf	3,5	;RP0=1, select bank3
  1654  0FAF  1703               	bsf	3,6	;RP1=1, select bank3
  1655  0FB0  07BF               	addwf	main@i^(0+384),f
  1656  0FB1  1803               	skipnc
  1657  0FB2  0AC0               	incf	(main@i+1)^(0+384),f
  1658  0FB3  3000               	movlw	0
  1659  0FB4  07C0               	addwf	(main@i+1)^(0+384),f
  1660  0FB5  2F93               	goto	l2588
  1661  0FB6                     l2590:	
  1662                           
  1663                           ;dumalaganDa_LE7-3.c: 168: dataCtrl(temperatureStr[0]);
  1664  0FB6  0833               	movf	main@temperatureStr^(0+384),w
  1665  0FB7  160A  118A  2285  120A  158A  	fcall	_dataCtrl
  1666                           
  1667                           ;dumalaganDa_LE7-3.c: 169: dataCtrl(temperatureStr[1]);
  1668  0FBC  1683               	bsf	3,5	;RP0=1, select bank3
  1669  0FBD  1703               	bsf	3,6	;RP1=1, select bank3
  1670  0FBE  0834               	movf	(main@temperatureStr^(0+384)+1),w
  1671  0FBF  160A  118A  2285  120A  158A  	fcall	_dataCtrl
  1672                           
  1673                           ;dumalaganDa_LE7-3.c: 170: dataCtrl(temperatureStr[2]);
  1674  0FC4  1683               	bsf	3,5	;RP0=1, select bank3
  1675  0FC5  1703               	bsf	3,6	;RP1=1, select bank3
  1676  0FC6  0835               	movf	(main@temperatureStr^(0+384)+2),w
  1677  0FC7  160A  118A  2285  120A  158A  	fcall	_dataCtrl
  1678                           
  1679                           ;dumalaganDa_LE7-3.c: 171: dataCtrl(temperatureStr[3]);
  1680  0FCC  1683               	bsf	3,5	;RP0=1, select bank3
  1681  0FCD  1703               	bsf	3,6	;RP1=1, select bank3
  1682  0FCE  0836               	movf	(main@temperatureStr^(0+384)+3),w
  1683  0FCF  160A  118A  2285  120A  158A  	fcall	_dataCtrl
  1684                           
  1685                           ;dumalaganDa_LE7-3.c: 172: dataCtrl(0xDF);
  1686  0FD4  30DF               	movlw	223
  1687  0FD5  160A  118A  2285  120A  158A  	fcall	_dataCtrl
  1688                           
  1689                           ;dumalaganDa_LE7-3.c: 173: dataCtrl('C');
  1690  0FDA  3043               	movlw	67
  1691  0FDB  160A  118A  2285  120A  158A  	fcall	_dataCtrl
  1692                           
  1693                           ;dumalaganDa_LE7-3.c: 174: I2C_Start();
  1694  0FE0  160A  118A  2247  120A  158A  	fcall	_I2C_Start
  1695                           
  1696                           ;dumalaganDa_LE7-3.c: 175: I2C_Send(0x80);
  1697  0FE5  3080               	movlw	128
  1698  0FE6  120A  158A  2000  120A  158A  	fcall	_I2C_Send
  1699                           
  1700                           ;dumalaganDa_LE7-3.c: 176: I2C_Send(0xFE);
  1701  0FEB  30FE               	movlw	254
  1702  0FEC  120A  158A  2000  120A  158A  	fcall	_I2C_Send
  1703                           
  1704                           ;dumalaganDa_LE7-3.c: 177: I2C_Stop();
  1705  0FF1  160A  118A  224E  120A  158A  	fcall	_I2C_Stop
  1706                           
  1707                           ;dumalaganDa_LE7-3.c: 178: delay_ms(50);
  1708  0FF6  3032               	movlw	50
  1709  0FF7  00F0               	movwf	delay_ms@ms_Count
  1710  0FF8  3000               	movlw	0
  1711  0FF9  00F1               	movwf	delay_ms@ms_Count+1
  1712  0FFA  160A  118A  239C  120A  158A  	fcall	_delay_ms
  1713                           
  1714                           ;dumalaganDa_LE7-3.c: 179: }
  1715  0FFF  2D1C               	goto	l86
  1716  1000                     __end_of_main:	
  1717                           
  1718                           	psect	text1
  1719  1376                     __ptext1:	
  1720 ;; *************** function _strlen *****************
  1721 ;; Defined at:
  1722 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\strlen.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  s               1    wreg     PTR const unsigned char 
  1725 ;;		 -> main@msgTemperature(14), main@msgHumidity(11), 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  s               1    7[COMMON] PTR const unsigned char 
  1728 ;;		 -> main@msgTemperature(14), main@msgHumidity(11), 
  1729 ;;  cp              1    6[COMMON] PTR const unsigned char 
  1730 ;;		 -> main@msgTemperature(14), main@msgHumidity(11), 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  2    0[COMMON] unsigned int 
  1733 ;; Registers used:
  1734 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1740 ;;      Params:         2       0       0       0       0
  1741 ;;      Locals:         2       0       0       0       0
  1742 ;;      Temps:          4       0       0       0       0
  1743 ;;      Totals:         8       0       0       0       0
  1744 ;;Total ram usage:        8 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; This function calls:
  1747 ;;		Nothing
  1748 ;; This function is called by:
  1749 ;;		_main
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           
  1754                           ;psect for function _strlen
  1755  1376                     _strlen:	
  1756                           
  1757                           ;incstack = 0
  1758                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1759                           ;strlen@s stored from wreg
  1760  1376  00F7               	movwf	strlen@s
  1761  1377  0877               	movf	strlen@s,w
  1762  1378  00F2               	movwf	??_strlen
  1763  1379  0872               	movf	??_strlen,w
  1764  137A  00F6               	movwf	strlen@cp
  1765  137B                     l2460:	
  1766  137B  0876               	movf	strlen@cp,w
  1767  137C  0084               	movwf	4
  1768  137D  1783               	bsf	3,7	;select IRP bank2
  1769  137E  0880               	movf	0,f
  1770  137F  1903               	btfsc	3,2
  1771  1380  2B86               	goto	l2462
  1772  1381  3001               	movlw	1
  1773  1382  00F2               	movwf	??_strlen
  1774  1383  0872               	movf	??_strlen,w
  1775  1384  07F6               	addwf	strlen@cp,f
  1776  1385  2B7B               	goto	l2460
  1777  1386                     l2462:	
  1778  1386  0877               	movf	strlen@s,w
  1779  1387  00F2               	movwf	??_strlen
  1780  1388  3001               	movlw	1
  1781  1389  00F3               	movwf	??_strlen+1
  1782  138A  09F2               	comf	??_strlen,f
  1783  138B  09F3               	comf	??_strlen+1,f
  1784  138C  0AF2               	incf	??_strlen,f
  1785  138D  1903               	skipnz
  1786  138E  0AF3               	incf	??_strlen+1,f
  1787  138F  0876               	movf	strlen@cp,w
  1788  1390  00F4               	movwf	??_strlen+2
  1789  1391  3001               	movlw	1
  1790  1392  00F5               	movwf	??_strlen+3
  1791  1393  0872               	movf	??_strlen,w
  1792  1394  0774               	addwf	??_strlen+2,w
  1793  1395  00F0               	movwf	?_strlen
  1794  1396  0873               	movf	??_strlen+1,w
  1795  1397  1803               	skipnc
  1796  1398  0A73               	incf	??_strlen+1,w
  1797  1399  0775               	addwf	??_strlen+3,w
  1798  139A  00F1               	movwf	?_strlen+1
  1799  139B  0008               	return
  1800  139C                     __end_of_strlen:	
  1801                           
  1802                           	psect	text2
  1803  0257                     __ptext2:	
  1804 ;; *************** function _sprintf *****************
  1805 ;; Defined at:
  1806 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  1807 ;; Parameters:    Size  Location     Type
  1808 ;;  sp              1    wreg     PTR unsigned char 
  1809 ;;		 -> main@temperatureStr(4), main@humidityStr(4), 
  1810 ;;  f               1   67[BANK0 ] PTR const unsigned char 
  1811 ;;		 -> STR_2(3), STR_1(3), 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1814 ;;		 -> main@temperatureStr(4), main@humidityStr(4), 
  1815 ;;  vd              4    8[BANK1 ] unsigned long 
  1816 ;;  vd              4   12[BANK1 ] unsigned long 
  1817 ;;  _val            4   20[BANK1 ] struct .
  1818 ;;  fval            3   30[BANK1 ] struct .
  1819 ;;  integ           3   24[BANK1 ] struct .
  1820 ;;  ival            3    0        struct .
  1821 ;;  exp             2   27[BANK1 ] int 
  1822 ;;  prec            2   18[BANK1 ] int 
  1823 ;;  flag            2   16[BANK1 ] unsigned short 
  1824 ;;  width           2    0        int 
  1825 ;;  c               1   33[BANK1 ] char 
  1826 ;;  ap              1    7[BANK1 ] PTR void [1]
  1827 ;;		 -> ?_sprintf(2), 
  1828 ;;  d               1    0        unsigned char 
  1829 ;; Return value:  Size  Location     Type
  1830 ;;                  2   67[BANK0 ] int 
  1831 ;; Registers used:
  1832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1833 ;; Tracked objects:
  1834 ;;		On entry : 0/0
  1835 ;;		On exit  : 0/0
  1836 ;;		Unchanged: 0/0
  1837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1838 ;;      Params:         0       4       0       0       0
  1839 ;;      Locals:         0       0      34       0       0
  1840 ;;      Temps:          0       6       0       0       0
  1841 ;;      Totals:         0      10      34       0       0
  1842 ;;Total ram usage:       44 bytes
  1843 ;; Hardware stack levels used:    1
  1844 ;; Hardware stack levels required when called:    3
  1845 ;; This function calls:
  1846 ;;		___awdiv
  1847 ;;		___ftadd
  1848 ;;		___ftge
  1849 ;;		___ftmul
  1850 ;;		___ftneg
  1851 ;;		___ftsub
  1852 ;;		___fttol
  1853 ;;		___lldiv
  1854 ;;		___llmod
  1855 ;;		___lltoft
  1856 ;;		___wmul
  1857 ;;		__div_to_l_
  1858 ;;		__tdiv_to_l_
  1859 ;;		_fround
  1860 ;;		_scale
  1861 ;; This function is called by:
  1862 ;;		_main
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function _sprintf
  1868  0257                     _sprintf:	
  1869                           
  1870                           ;incstack = 0
  1871                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1872                           ;sprintf@sp stored from wreg
  1873  0257  1683               	bsf	3,5	;RP0=1, select bank1
  1874  0258  1303               	bcf	3,6	;RP1=0, select bank1
  1875  0259  00BD               	movwf	sprintf@sp^(0+128)
  1876                           
  1877                           ;doprnt.c: 494: va_list ap;
  1878                           ;doprnt.c: 499: signed char c;
  1879                           ;doprnt.c: 501: int width;
  1880                           ;doprnt.c: 504: int prec;
  1881                           ;doprnt.c: 508: unsigned short flag;
  1882                           ;doprnt.c: 515: char d;
  1883                           ;doprnt.c: 516: double fval, integ;
  1884                           ;doprnt.c: 517: int exp;
  1885                           ;doprnt.c: 518: double ival;
  1886                           ;doprnt.c: 519: union {
  1887                           ;doprnt.c: 520: unsigned long _val;
  1888                           ;doprnt.c: 521: struct {
  1889                           ;doprnt.c: 522: const char * _cp;
  1890                           ;doprnt.c: 523: unsigned _len;
  1891                           ;doprnt.c: 524: } _str;
  1892                           ;doprnt.c: 525: } _val;
  1893                           ;doprnt.c: 542: *ap = __va_start();
  1894  025A  3064               	movlw	(?_sprintf+1)& (0+255)
  1895  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1896  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1897  025D  00E7               	movwf	??_sprintf
  1898  025E  0867               	movf	??_sprintf,w
  1899  025F  1683               	bsf	3,5	;RP0=1, select bank1
  1900  0260  1303               	bcf	3,6	;RP1=0, select bank1
  1901  0261  00A7               	movwf	sprintf@ap^(0+128)
  1902  0262                     l2450:	
  1903                           ;doprnt.c: 545: while(c = *f++) {
  1904                           
  1905  0262  3001               	movlw	1
  1906  0263  1283               	bcf	3,5	;RP0=0, select bank0
  1907  0264  07E3               	addwf	sprintf@f,f
  1908  0265  30FF               	movlw	-1
  1909  0266  0763               	addwf	sprintf@f,w
  1910  0267  0084               	movwf	4
  1911  0268  160A  118A  2000  120A  118A  	fcall	stringdir
  1912  026D  00E7               	movwf	??_sprintf
  1913  026E  0867               	movf	??_sprintf,w
  1914  026F  1683               	bsf	3,5	;RP0=1, select bank1
  1915  0270  1303               	bcf	3,6	;RP1=0, select bank1
  1916  0271  00C1               	movwf	sprintf@c^(0+128)
  1917  0272  08C1               	movf	sprintf@c^(0+128),f
  1918  0273  1903               	btfsc	3,2
  1919  0274  2FEB               	goto	l2452
  1920                           
  1921                           ;doprnt.c: 547: if(c != '%')
  1922  0275  0841               	movf	sprintf@c^(0+128),w
  1923  0276  3A25               	xorlw	37
  1924  0277  1903               	skipnz
  1925  0278  2A7D               	goto	l2298
  1926                           
  1927                           ;doprnt.c: 549: {
  1928                           ;doprnt.c: 550: ((*sp++ = (c)));
  1929  0279  0841               	movf	sprintf@c^(0+128),w
  1930  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1931  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1932  027C  2FDA               	goto	L6
  1933  027D                     l2298:	
  1934                           ;doprnt.c: 551: continue;
  1935                           
  1936                           
  1937                           ;doprnt.c: 552: }
  1938                           ;doprnt.c: 557: flag = 0;
  1939  027D  01B0               	clrf	sprintf@flag^(0+128)
  1940  027E  01B1               	clrf	(sprintf@flag+1)^(0+128)
  1941                           
  1942                           ;doprnt.c: 644: switch(c = *f++) {
  1943  027F  2A82               	goto	l2302
  1944  0280                     l137:	
  1945                           ;doprnt.c: 671: case 'f':
  1946                           
  1947                           ;doprnt.c: 647: goto alldone;
  1948                           
  1949                           ;doprnt.c: 646: case 0:
  1950                           
  1951                           
  1952                           ;doprnt.c: 672: flag |= 0x400;
  1953  0280  1531               	bsf	(sprintf@flag^(0+128)+1),2
  1954                           
  1955                           ;doprnt.c: 673: break;
  1956  0281  2A98               	goto	l2304
  1957  0282                     l2302:	
  1958                           ;doprnt.c: 831: }
  1959                           
  1960                           ;doprnt.c: 822: continue;
  1961                           
  1962                           ;doprnt.c: 811: default:
  1963                           
  1964  0282  3001               	movlw	1
  1965  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1967  0285  07E3               	addwf	sprintf@f,f
  1968  0286  30FF               	movlw	-1
  1969  0287  0763               	addwf	sprintf@f,w
  1970  0288  0084               	movwf	4
  1971  0289  160A  118A  2000  120A  118A  	fcall	stringdir
  1972  028E  1683               	bsf	3,5	;RP0=1, select bank1
  1973  028F  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0290  00C1               	movwf	sprintf@c^(0+128)
  1975                           
  1976                           ; Switch size 1, requested type "space"
  1977                           ; Number of cases is 2, Range of values is 0 to 102
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            7     4 (average)
  1981                           ; jumptable            260     6 (fixed)
  1982                           ;	Chosen strategy is simple_byte
  1983  0291  3A00               	xorlw	0	; case 0
  1984  0292  1903               	skipnz
  1985  0293  2FEB               	goto	l2452
  1986  0294  3A66               	xorlw	102	; case 102
  1987  0295  1903               	skipnz
  1988  0296  2A80               	goto	l137
  1989  0297  2A62               	goto	l2450
  1990  0298                     l2304:	
  1991                           
  1992                           ;doprnt.c: 834: if(flag & (0x700)) {
  1993  0298  3000               	movlw	0
  1994  0299  0530               	andwf	sprintf@flag^(0+128),w
  1995  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1996  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1997  029C  00E7               	movwf	??_sprintf
  1998  029D  3007               	movlw	7
  1999  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2000  029F  1303               	bcf	3,6	;RP1=0, select bank1
  2001  02A0  0531               	andwf	(sprintf@flag+1)^(0+128),w
  2002  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2003  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2004  02A3  00E8               	movwf	??_sprintf+1
  2005  02A4  0868               	movf	??_sprintf+1,w
  2006  02A5  0467               	iorwf	??_sprintf,w
  2007  02A6  1903               	skipnz
  2008  02A7  2FC7               	goto	l2444
  2009                           
  2010                           ;doprnt.c: 838: prec = 6;
  2011  02A8  3006               	movlw	6
  2012  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2013  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2014  02AB  00B2               	movwf	sprintf@prec^(0+128)
  2015  02AC  3000               	movlw	0
  2016  02AD  00B3               	movwf	(sprintf@prec^(0+128)+1)
  2017                           
  2018                           ;doprnt.c: 839: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2019  02AE  0827               	movf	sprintf@ap^(0+128),w
  2020  02AF  0084               	movwf	4
  2021  02B0  1383               	bcf	3,7	;select IRP bank0
  2022  02B1  0800               	movf	0,w
  2023  02B2  00BE               	movwf	sprintf@fval^(0+128)
  2024  02B3  0A84               	incf	4,f
  2025  02B4  0800               	movf	0,w
  2026  02B5  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2027  02B6  0A84               	incf	4,f
  2028  02B7  0800               	movf	0,w
  2029  02B8  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2030  02B9  3003               	movlw	3
  2031  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  2032  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  2033  02BC  00E7               	movwf	??_sprintf
  2034  02BD  0867               	movf	??_sprintf,w
  2035  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  2036  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  2037  02C0  07A7               	addwf	sprintf@ap^(0+128),f
  2038                           
  2039                           ;doprnt.c: 840: if(fval < 0.0) {
  2040  02C1  083E               	movf	sprintf@fval^(0+128),w
  2041  02C2  00F0               	movwf	___ftge@ff1
  2042  02C3  083F               	movf	(sprintf@fval+1)^(0+128),w
  2043  02C4  00F1               	movwf	___ftge@ff1+1
  2044  02C5  0840               	movf	(sprintf@fval+2)^(0+128),w
  2045  02C6  00F2               	movwf	___ftge@ff1+2
  2046  02C7  3000               	movlw	0
  2047  02C8  00F3               	movwf	___ftge@ff2
  2048  02C9  3000               	movlw	0
  2049  02CA  00F4               	movwf	___ftge@ff2+1
  2050  02CB  3000               	movlw	0
  2051  02CC  00F5               	movwf	___ftge@ff2+2
  2052  02CD  160A  118A  245C  120A  118A  	fcall	___ftge
  2053  02D2  1803               	btfsc	3,0
  2054  02D3  2AED               	goto	l2318
  2055                           
  2056                           ;doprnt.c: 841: fval = -fval;
  2057  02D4  1683               	bsf	3,5	;RP0=1, select bank1
  2058  02D5  1303               	bcf	3,6	;RP1=0, select bank1
  2059  02D6  083E               	movf	sprintf@fval^(0+128),w
  2060  02D7  00F0               	movwf	___ftneg@f1
  2061  02D8  083F               	movf	(sprintf@fval+1)^(0+128),w
  2062  02D9  00F1               	movwf	___ftneg@f1+1
  2063  02DA  0840               	movf	(sprintf@fval+2)^(0+128),w
  2064  02DB  00F2               	movwf	___ftneg@f1+2
  2065  02DC  160A  118A  225D  120A  118A  	fcall	___ftneg
  2066  02E1  0870               	movf	?___ftneg,w
  2067  02E2  1683               	bsf	3,5	;RP0=1, select bank1
  2068  02E3  1303               	bcf	3,6	;RP1=0, select bank1
  2069  02E4  00BE               	movwf	sprintf@fval^(0+128)
  2070  02E5  0871               	movf	?___ftneg+1,w
  2071  02E6  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2072  02E7  0872               	movf	?___ftneg+2,w
  2073  02E8  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2074                           
  2075                           ;doprnt.c: 842: flag |= 0x03;
  2076  02E9  3003               	movlw	3
  2077  02EA  04B0               	iorwf	sprintf@flag^(0+128),f
  2078  02EB  3000               	movlw	0
  2079  02EC  04B1               	iorwf	(sprintf@flag+1)^(0+128),f
  2080  02ED                     l2318:	
  2081                           
  2082                           ;doprnt.c: 843: }
  2083                           ;doprnt.c: 844: exp = 0;
  2084  02ED  1683               	bsf	3,5	;RP0=1, select bank1
  2085  02EE  1303               	bcf	3,6	;RP1=0, select bank1
  2086  02EF  01BB               	clrf	sprintf@exp^(0+128)
  2087  02F0  01BC               	clrf	(sprintf@exp+1)^(0+128)
  2088                           
  2089                           ;doprnt.c: 845: if( fval!=0) {
  2090  02F1  0840               	movf	(sprintf@fval+2)^(0+128),w
  2091  02F2  043F               	iorwf	(sprintf@fval+1)^(0+128),w
  2092  02F3  043E               	iorwf	sprintf@fval^(0+128),w
  2093  02F4  1903               	skipnz
  2094  02F5  2BE9               	goto	l2346
  2095                           
  2096                           ;doprnt.c: 846: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2097  02F6  30BE               	movlw	low sprintf@fval
  2098  02F7  0084               	movwf	4
  2099  02F8  1383               	bcf	3,7	;select IRP bank1
  2100  02F9  0800               	movf	0,w
  2101  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2102  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2103  02FC  00E7               	movwf	??_sprintf
  2104  02FD  0A84               	incf	4,f
  2105  02FE  0800               	movf	0,w
  2106  02FF  00E8               	movwf	??_sprintf+1
  2107  0300  0A84               	incf	4,f
  2108  0301  0800               	movf	0,w
  2109  0302  00E9               	movwf	??_sprintf+2
  2110  0303  0A84               	incf	4,f
  2111  0304  0800               	movf	0,w
  2112  0305  00EA               	movwf	??_sprintf+3
  2113  0306  300F               	movlw	15
  2114  0307                     u3365:	
  2115  0307  1003               	clrc
  2116  0308  0CEA               	rrf	??_sprintf+3,f
  2117  0309  0CE9               	rrf	??_sprintf+2,f
  2118  030A  0CE8               	rrf	??_sprintf+1,f
  2119  030B  0CE7               	rrf	??_sprintf,f
  2120  030C  3EFF               	addlw	-1
  2121  030D  1D03               	skipz
  2122  030E  2B07               	goto	u3365
  2123  030F  30FF               	movlw	255
  2124  0310  0567               	andwf	??_sprintf,w
  2125  0311  00EB               	movwf	??_sprintf+4
  2126  0312  3000               	movlw	0
  2127  0313  0568               	andwf	??_sprintf+1,w
  2128  0314  00EC               	movwf	??_sprintf+5
  2129  0315  086B               	movf	??_sprintf+4,w
  2130  0316  3E82               	addlw	130
  2131  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2132  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2133  0319  00BB               	movwf	sprintf@exp^(0+128)
  2134  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2135  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2136  031C  086C               	movf	??_sprintf+5,w
  2137  031D  1803               	skipnc
  2138  031E  3E01               	addlw	1
  2139  031F  3EFF               	addlw	255
  2140  0320  1683               	bsf	3,5	;RP0=1, select bank1
  2141  0321  1303               	bcf	3,6	;RP1=0, select bank1
  2142  0322  00BC               	movwf	(sprintf@exp+1)^(0+128)
  2143                           
  2144                           ;doprnt.c: 847: exp--;
  2145  0323  30FF               	movlw	255
  2146  0324  07BB               	addwf	sprintf@exp^(0+128),f
  2147  0325  1803               	skipnc
  2148  0326  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  2149  0327  30FF               	movlw	255
  2150  0328  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  2151                           
  2152                           ;doprnt.c: 848: exp *= 3;
  2153  0329  3003               	movlw	3
  2154  032A  00F0               	movwf	___wmul@multiplier
  2155  032B  3000               	movlw	0
  2156  032C  00F1               	movwf	___wmul@multiplier+1
  2157  032D  083C               	movf	(sprintf@exp+1)^(0+128),w
  2158  032E  01F3               	clrf	___wmul@multiplicand+1
  2159  032F  07F3               	addwf	___wmul@multiplicand+1,f
  2160  0330  083B               	movf	sprintf@exp^(0+128),w
  2161  0331  01F2               	clrf	___wmul@multiplicand
  2162  0332  07F2               	addwf	___wmul@multiplicand,f
  2163  0333  160A  118A  2307  120A  118A  	fcall	___wmul
  2164  0338  0871               	movf	?___wmul+1,w
  2165  0339  1683               	bsf	3,5	;RP0=1, select bank1
  2166  033A  1303               	bcf	3,6	;RP1=0, select bank1
  2167  033B  01BC               	clrf	(sprintf@exp+1)^(0+128)
  2168  033C  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  2169  033D  0870               	movf	?___wmul,w
  2170  033E  01BB               	clrf	sprintf@exp^(0+128)
  2171  033F  07BB               	addwf	sprintf@exp^(0+128),f
  2172                           
  2173                           ;doprnt.c: 849: exp /= 10;
  2174  0340  300A               	movlw	10
  2175  0341  00F7               	movwf	___awdiv@divisor
  2176  0342  3000               	movlw	0
  2177  0343  00F8               	movwf	___awdiv@divisor+1
  2178  0344  083C               	movf	(sprintf@exp+1)^(0+128),w
  2179  0345  01FA               	clrf	___awdiv@dividend+1
  2180  0346  07FA               	addwf	___awdiv@dividend+1,f
  2181  0347  083B               	movf	sprintf@exp^(0+128),w
  2182  0348  01F9               	clrf	___awdiv@dividend
  2183  0349  07F9               	addwf	___awdiv@dividend,f
  2184  034A  160A  118A  24B9  120A  118A  	fcall	___awdiv
  2185  034F  0878               	movf	?___awdiv+1,w
  2186  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2187  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2188  0352  01BC               	clrf	(sprintf@exp+1)^(0+128)
  2189  0353  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  2190  0354  0877               	movf	?___awdiv,w
  2191  0355  01BB               	clrf	sprintf@exp^(0+128)
  2192  0356  07BB               	addwf	sprintf@exp^(0+128),f
  2193                           
  2194                           ;doprnt.c: 850: if(exp < 0)
  2195  0357  1FBC               	btfss	(sprintf@exp+1)^(0+128),7
  2196  0358  2B5F               	goto	l2334
  2197                           
  2198                           ;doprnt.c: 851: exp--;
  2199  0359  30FF               	movlw	255
  2200  035A  07BB               	addwf	sprintf@exp^(0+128),f
  2201  035B  1803               	skipnc
  2202  035C  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  2203  035D  30FF               	movlw	255
  2204  035E  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  2205  035F                     l2334:	
  2206                           
  2207                           ;doprnt.c: 855: integ = scale(-exp);
  2208  035F  033B               	decf	sprintf@exp^(0+128),w
  2209  0360  3AFF               	xorlw	255
  2210  0361  120A  158A  226F  120A  118A  	fcall	_scale
  2211  0366  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0367  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0368  0840               	movf	?_scale,w
  2214  0369  1683               	bsf	3,5	;RP0=1, select bank1
  2215  036A  1303               	bcf	3,6	;RP1=0, select bank1
  2216  036B  00B8               	movwf	sprintf@integ^(0+128)
  2217  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2218  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2219  036E  0841               	movf	?_scale+1,w
  2220  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2221  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2222  0371  00B9               	movwf	(sprintf@integ+1)^(0+128)
  2223  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2225  0374  0842               	movf	?_scale+2,w
  2226  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2227  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2228  0377  00BA               	movwf	(sprintf@integ+2)^(0+128)
  2229                           
  2230                           ;doprnt.c: 856: integ *= fval;
  2231  0378  083E               	movf	sprintf@fval^(0+128),w
  2232  0379  1283               	bcf	3,5	;RP0=0, select bank0
  2233  037A  1303               	bcf	3,6	;RP1=0, select bank0
  2234  037B  00B0               	movwf	___ftmul@f1
  2235  037C  1683               	bsf	3,5	;RP0=1, select bank1
  2236  037D  1303               	bcf	3,6	;RP1=0, select bank1
  2237  037E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2238  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0381  00B1               	movwf	___ftmul@f1+1
  2241  0382  1683               	bsf	3,5	;RP0=1, select bank1
  2242  0383  1303               	bcf	3,6	;RP1=0, select bank1
  2243  0384  0840               	movf	(sprintf@fval+2)^(0+128),w
  2244  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2246  0387  00B2               	movwf	___ftmul@f1+2
  2247  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2248  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2249  038A  0838               	movf	sprintf@integ^(0+128),w
  2250  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2251  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2252  038D  00B3               	movwf	___ftmul@f2
  2253  038E  1683               	bsf	3,5	;RP0=1, select bank1
  2254  038F  1303               	bcf	3,6	;RP1=0, select bank1
  2255  0390  0839               	movf	(sprintf@integ+1)^(0+128),w
  2256  0391  1283               	bcf	3,5	;RP0=0, select bank0
  2257  0392  1303               	bcf	3,6	;RP1=0, select bank0
  2258  0393  00B4               	movwf	___ftmul@f2+1
  2259  0394  1683               	bsf	3,5	;RP0=1, select bank1
  2260  0395  1303               	bcf	3,6	;RP1=0, select bank1
  2261  0396  083A               	movf	(sprintf@integ+2)^(0+128),w
  2262  0397  1283               	bcf	3,5	;RP0=0, select bank0
  2263  0398  1303               	bcf	3,6	;RP1=0, select bank0
  2264  0399  00B5               	movwf	___ftmul@f2+2
  2265  039A  160A  118A  272D  120A  118A  	fcall	___ftmul
  2266  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2267  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2268  03A1  0830               	movf	?___ftmul,w
  2269  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  2270  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  2271  03A4  00B8               	movwf	sprintf@integ^(0+128)
  2272  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2273  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2274  03A7  0831               	movf	?___ftmul+1,w
  2275  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2276  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2277  03AA  00B9               	movwf	(sprintf@integ+1)^(0+128)
  2278  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2279  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2280  03AD  0832               	movf	?___ftmul+2,w
  2281  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2282  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2283  03B0  00BA               	movwf	(sprintf@integ+2)^(0+128)
  2284                           
  2285                           ;doprnt.c: 857: if(integ < 1.0)
  2286  03B1  0838               	movf	sprintf@integ^(0+128),w
  2287  03B2  00F0               	movwf	___ftge@ff1
  2288  03B3  0839               	movf	(sprintf@integ+1)^(0+128),w
  2289  03B4  00F1               	movwf	___ftge@ff1+1
  2290  03B5  083A               	movf	(sprintf@integ+2)^(0+128),w
  2291  03B6  00F2               	movwf	___ftge@ff1+2
  2292  03B7  3000               	movlw	0
  2293  03B8  00F3               	movwf	___ftge@ff2
  2294  03B9  3080               	movlw	128
  2295  03BA  00F4               	movwf	___ftge@ff2+1
  2296  03BB  303F               	movlw	63
  2297  03BC  00F5               	movwf	___ftge@ff2+2
  2298  03BD  160A  118A  245C  120A  118A  	fcall	___ftge
  2299  03C2  1803               	btfsc	3,0
  2300  03C3  2BCC               	goto	l2342
  2301                           
  2302                           ;doprnt.c: 858: exp--;
  2303  03C4  30FF               	movlw	255
  2304  03C5  1683               	bsf	3,5	;RP0=1, select bank1
  2305  03C6  1303               	bcf	3,6	;RP1=0, select bank1
  2306  03C7  07BB               	addwf	sprintf@exp^(0+128),f
  2307  03C8  1803               	skipnc
  2308  03C9  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  2309  03CA  30FF               	movlw	255
  2310  03CB  2BE8               	goto	L1
  2311  03CC                     l2342:	
  2312                           
  2313                           ;doprnt.c: 859: else if(integ >= 10.0)
  2314  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  2315  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  2316  03CE  0838               	movf	sprintf@integ^(0+128),w
  2317  03CF  00F0               	movwf	___ftge@ff1
  2318  03D0  0839               	movf	(sprintf@integ+1)^(0+128),w
  2319  03D1  00F1               	movwf	___ftge@ff1+1
  2320  03D2  083A               	movf	(sprintf@integ+2)^(0+128),w
  2321  03D3  00F2               	movwf	___ftge@ff1+2
  2322  03D4  3000               	movlw	0
  2323  03D5  00F3               	movwf	___ftge@ff2
  2324  03D6  3020               	movlw	32
  2325  03D7  00F4               	movwf	___ftge@ff2+1
  2326  03D8  3041               	movlw	65
  2327  03D9  00F5               	movwf	___ftge@ff2+2
  2328  03DA  160A  118A  245C  120A  118A  	fcall	___ftge
  2329  03DF  1C03               	btfss	3,0
  2330  03E0  2BE9               	goto	l2346
  2331                           
  2332                           ;doprnt.c: 860: exp++;
  2333  03E1  3001               	movlw	1
  2334  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2335  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2336  03E4  07BB               	addwf	sprintf@exp^(0+128),f
  2337  03E5  1803               	skipnc
  2338  03E6  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  2339  03E7  3000               	movlw	0
  2340  03E8                     L1:	
  2341  03E8  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  2342  03E9                     l2346:	
  2343                           
  2344                           ;doprnt.c: 861: }
  2345                           ;doprnt.c: 1121: if(prec <= 12)
  2346  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2347  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  2348  03EB  0833               	movf	(sprintf@prec+1)^(0+128),w
  2349  03EC  3A80               	xorlw	128
  2350  03ED  00FF               	movwf	127
  2351  03EE  3080               	movlw	128
  2352  03EF  027F               	subwf	127,w
  2353  03F0  1D03               	skipz
  2354  03F1  2BF4               	goto	u3405
  2355  03F2  300D               	movlw	13
  2356  03F3  0232               	subwf	sprintf@prec^(0+128),w
  2357  03F4                     u3405:	
  2358  03F4  1803               	skipnc
  2359  03F5  2C2F               	goto	l2350
  2360                           
  2361                           ;doprnt.c: 1122: fval += fround(prec);
  2362  03F6  1683               	bsf	3,5	;RP0=1, select bank1
  2363  03F7  1303               	bcf	3,6	;RP1=0, select bank1
  2364  03F8  0832               	movf	sprintf@prec^(0+128),w
  2365  03F9  120A  118A  20BB  120A  118A  	fcall	_fround
  2366  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2367  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2368  0400  0840               	movf	?_fround,w
  2369  0401  00D0               	movwf	___ftadd@f1
  2370  0402  0841               	movf	?_fround+1,w
  2371  0403  00D1               	movwf	___ftadd@f1+1
  2372  0404  0842               	movf	?_fround+2,w
  2373  0405  00D2               	movwf	___ftadd@f1+2
  2374  0406  1683               	bsf	3,5	;RP0=1, select bank1
  2375  0407  1303               	bcf	3,6	;RP1=0, select bank1
  2376  0408  083E               	movf	sprintf@fval^(0+128),w
  2377  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2378  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2379  040B  00D3               	movwf	___ftadd@f2
  2380  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2381  040D  1303               	bcf	3,6	;RP1=0, select bank1
  2382  040E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2383  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2384  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2385  0411  00D4               	movwf	___ftadd@f2+1
  2386  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2387  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2388  0414  0840               	movf	(sprintf@fval+2)^(0+128),w
  2389  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2390  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2391  0417  00D5               	movwf	___ftadd@f2+2
  2392  0418  120A  158A  2034  120A  118A  	fcall	___ftadd
  2393  041D  1283               	bcf	3,5	;RP0=0, select bank0
  2394  041E  1303               	bcf	3,6	;RP1=0, select bank0
  2395  041F  0850               	movf	?___ftadd,w
  2396  0420  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0421  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0422  00BE               	movwf	sprintf@fval^(0+128)
  2399  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0425  0851               	movf	?___ftadd+1,w
  2402  0426  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0427  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0428  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2405  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2406  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2407  042B  0852               	movf	?___ftadd+2,w
  2408  042C  1683               	bsf	3,5	;RP0=1, select bank1
  2409  042D  1303               	bcf	3,6	;RP1=0, select bank1
  2410  042E  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2411  042F                     l2350:	
  2412                           
  2413                           ;doprnt.c: 1125: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  2414  042F  1683               	bsf	3,5	;RP0=1, select bank1
  2415  0430  1303               	bcf	3,6	;RP1=0, select bank1
  2416  0431  083C               	movf	(sprintf@exp+1)^(0+128),w
  2417  0432  3A80               	xorlw	128
  2418  0433  00FF               	movwf	127
  2419  0434  3080               	movlw	128
  2420  0435  027F               	subwf	127,w
  2421  0436  1D03               	skipz
  2422  0437  2C3A               	goto	u3415
  2423  0438  300A               	movlw	10
  2424  0439  023B               	subwf	sprintf@exp^(0+128),w
  2425  043A                     u3415:	
  2426  043A  1803               	skipnc
  2427  043B  2C6D               	goto	l2358
  2428  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2429  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2430  043E  0840               	movf	(sprintf@fval+2)^(0+128),w
  2431  043F  043F               	iorwf	(sprintf@fval+1)^(0+128),w
  2432  0440  043E               	iorwf	sprintf@fval^(0+128),w
  2433  0441  1903               	skipnz
  2434  0442  2CCE               	goto	l2374
  2435  0443  083E               	movf	sprintf@fval^(0+128),w
  2436  0444  1283               	bcf	3,5	;RP0=0, select bank0
  2437  0445  1303               	bcf	3,6	;RP1=0, select bank0
  2438  0446  00C9               	movwf	___fttol@f1
  2439  0447  1683               	bsf	3,5	;RP0=1, select bank1
  2440  0448  1303               	bcf	3,6	;RP1=0, select bank1
  2441  0449  083F               	movf	(sprintf@fval+1)^(0+128),w
  2442  044A  1283               	bcf	3,5	;RP0=0, select bank0
  2443  044B  1303               	bcf	3,6	;RP1=0, select bank0
  2444  044C  00CA               	movwf	___fttol@f1+1
  2445  044D  1683               	bsf	3,5	;RP0=1, select bank1
  2446  044E  1303               	bcf	3,6	;RP1=0, select bank1
  2447  044F  0840               	movf	(sprintf@fval+2)^(0+128),w
  2448  0450  1283               	bcf	3,5	;RP0=0, select bank0
  2449  0451  1303               	bcf	3,6	;RP1=0, select bank0
  2450  0452  00CB               	movwf	___fttol@f1+2
  2451  0453  160A  118A  25DC  120A  118A  	fcall	___fttol
  2452  0458  1283               	bcf	3,5	;RP0=0, select bank0
  2453  0459  1303               	bcf	3,6	;RP1=0, select bank0
  2454  045A  084C               	movf	?___fttol+3,w
  2455  045B  044B               	iorwf	?___fttol+2,w
  2456  045C  044A               	iorwf	?___fttol+1,w
  2457  045D  0449               	iorwf	?___fttol,w
  2458  045E  1D03               	skipz
  2459  045F  2CCE               	goto	l2374
  2460  0460  1683               	bsf	3,5	;RP0=1, select bank1
  2461  0461  1303               	bcf	3,6	;RP1=0, select bank1
  2462  0462  083C               	movf	(sprintf@exp+1)^(0+128),w
  2463  0463  3A80               	xorlw	128
  2464  0464  00FF               	movwf	127
  2465  0465  3080               	movlw	128
  2466  0466  027F               	subwf	127,w
  2467  0467  1D03               	skipz
  2468  0468  2C6B               	goto	u3445
  2469  0469  3002               	movlw	2
  2470  046A  023B               	subwf	sprintf@exp^(0+128),w
  2471  046B                     u3445:	
  2472  046B  1C03               	skipc
  2473  046C  2CCE               	goto	l2374
  2474  046D                     l2358:	
  2475                           
  2476                           ;doprnt.c: 1129: if(integ < 4.294967296){
  2477  046D  1683               	bsf	3,5	;RP0=1, select bank1
  2478  046E  1303               	bcf	3,6	;RP1=0, select bank1
  2479  046F  0838               	movf	sprintf@integ^(0+128),w
  2480  0470  00F0               	movwf	___ftge@ff1
  2481  0471  0839               	movf	(sprintf@integ+1)^(0+128),w
  2482  0472  00F1               	movwf	___ftge@ff1+1
  2483  0473  083A               	movf	(sprintf@integ+2)^(0+128),w
  2484  0474  00F2               	movwf	___ftge@ff1+2
  2485  0475  3070               	movlw	112
  2486  0476  00F3               	movwf	___ftge@ff2
  2487  0477  3089               	movlw	137
  2488  0478  00F4               	movwf	___ftge@ff2+1
  2489  0479  3040               	movlw	64
  2490  047A  00F5               	movwf	___ftge@ff2+2
  2491  047B  160A  118A  245C  120A  118A  	fcall	___ftge
  2492  0480  1803               	btfsc	3,0
  2493  0481  2C84               	goto	l2362
  2494                           
  2495                           ;doprnt.c: 1130: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2496  0482  30F7               	movlw	247
  2497  0483  2C85               	goto	L2
  2498  0484                     l2362:	
  2499                           ;doprnt.c: 1131: }else{
  2500                           
  2501                           
  2502                           ;doprnt.c: 1132: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2503  0484  30F8               	movlw	248
  2504  0485                     L2:	
  2505  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2506  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2507  0487  07BB               	addwf	sprintf@exp^(0+128),f
  2508  0488  1803               	skipnc
  2509  0489  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  2510  048A  30FF               	movlw	255
  2511  048B  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  2512                           
  2513                           ;doprnt.c: 1133: }
  2514                           ;doprnt.c: 1134: integ = scale(exp);
  2515  048C  083B               	movf	sprintf@exp^(0+128),w
  2516  048D  120A  158A  226F  120A  118A  	fcall	_scale
  2517  0492  1283               	bcf	3,5	;RP0=0, select bank0
  2518  0493  1303               	bcf	3,6	;RP1=0, select bank0
  2519  0494  0840               	movf	?_scale,w
  2520  0495  1683               	bsf	3,5	;RP0=1, select bank1
  2521  0496  1303               	bcf	3,6	;RP1=0, select bank1
  2522  0497  00B8               	movwf	sprintf@integ^(0+128)
  2523  0498  1283               	bcf	3,5	;RP0=0, select bank0
  2524  0499  1303               	bcf	3,6	;RP1=0, select bank0
  2525  049A  0841               	movf	?_scale+1,w
  2526  049B  1683               	bsf	3,5	;RP0=1, select bank1
  2527  049C  1303               	bcf	3,6	;RP1=0, select bank1
  2528  049D  00B9               	movwf	(sprintf@integ+1)^(0+128)
  2529  049E  1283               	bcf	3,5	;RP0=0, select bank0
  2530  049F  1303               	bcf	3,6	;RP1=0, select bank0
  2531  04A0  0842               	movf	?_scale+2,w
  2532  04A1  1683               	bsf	3,5	;RP0=1, select bank1
  2533  04A2  1303               	bcf	3,6	;RP1=0, select bank1
  2534  04A3  00BA               	movwf	(sprintf@integ+2)^(0+128)
  2535                           
  2536                           ;doprnt.c: 1135: _val._val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,integ) : _div_to_l
      +                          _(fval,integ));
  2537  04A4  083E               	movf	sprintf@fval^(0+128),w
  2538  04A5  00F0               	movwf	__tdiv_to_l_@f1
  2539  04A6  083F               	movf	(sprintf@fval+1)^(0+128),w
  2540  04A7  00F1               	movwf	__tdiv_to_l_@f1+1
  2541  04A8  0840               	movf	(sprintf@fval+2)^(0+128),w
  2542  04A9  00F2               	movwf	__tdiv_to_l_@f1+2
  2543  04AA  0838               	movf	sprintf@integ^(0+128),w
  2544  04AB  00F3               	movwf	__tdiv_to_l_@f2
  2545  04AC  0839               	movf	(sprintf@integ+1)^(0+128),w
  2546  04AD  00F4               	movwf	__tdiv_to_l_@f2+1
  2547  04AE  083A               	movf	(sprintf@integ+2)^(0+128),w
  2548  04AF  00F5               	movwf	__tdiv_to_l_@f2+2
  2549  04B0  160A  118A  266A  120A  118A  	fcall	__tdiv_to_l_
  2550  04B5  0873               	movf	?__tdiv_to_l_+3,w
  2551  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  2552  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  2553  04B8  00A6               	movwf	(_sprintf$149+3)^(0+128)
  2554  04B9  0872               	movf	?__tdiv_to_l_+2,w
  2555  04BA  00A5               	movwf	(_sprintf$149+2)^(0+128)
  2556  04BB  0871               	movf	?__tdiv_to_l_+1,w
  2557  04BC  00A4               	movwf	(_sprintf$149+1)^(0+128)
  2558  04BD  0870               	movf	?__tdiv_to_l_,w
  2559  04BE  00A3               	movwf	_sprintf$149^(0+128)
  2560  04BF  0826               	movf	(_sprintf$149+3)^(0+128),w
  2561  04C0  00B7               	movwf	(sprintf@_val+3)^(0+128)
  2562  04C1  0825               	movf	(_sprintf$149+2)^(0+128),w
  2563  04C2  00B6               	movwf	(sprintf@_val+2)^(0+128)
  2564  04C3  0824               	movf	(_sprintf$149+1)^(0+128),w
  2565  04C4  00B5               	movwf	(sprintf@_val+1)^(0+128)
  2566  04C5  0823               	movf	_sprintf$149^(0+128),w
  2567  04C6  00B4               	movwf	sprintf@_val^(0+128)
  2568                           
  2569                           ;doprnt.c: 1138: fval = 0.0;
  2570  04C7  3000               	movlw	0
  2571  04C8  00BE               	movwf	sprintf@fval^(0+128)
  2572  04C9  3000               	movlw	0
  2573  04CA  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2574  04CB  3000               	movlw	0
  2575  04CC  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2576                           
  2577                           ;doprnt.c: 1139: } else {
  2578  04CD  2D3D               	goto	l2378
  2579  04CE                     l2374:	
  2580                           
  2581                           ;doprnt.c: 1140: _val._val = (unsigned long)fval;
  2582  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  2583  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  2584  04D0  083E               	movf	sprintf@fval^(0+128),w
  2585  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2586  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2587  04D3  00C9               	movwf	___fttol@f1
  2588  04D4  1683               	bsf	3,5	;RP0=1, select bank1
  2589  04D5  1303               	bcf	3,6	;RP1=0, select bank1
  2590  04D6  083F               	movf	(sprintf@fval+1)^(0+128),w
  2591  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  2592  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  2593  04D9  00CA               	movwf	___fttol@f1+1
  2594  04DA  1683               	bsf	3,5	;RP0=1, select bank1
  2595  04DB  1303               	bcf	3,6	;RP1=0, select bank1
  2596  04DC  0840               	movf	(sprintf@fval+2)^(0+128),w
  2597  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2598  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2599  04DF  00CB               	movwf	___fttol@f1+2
  2600  04E0  160A  118A  25DC  120A  118A  	fcall	___fttol
  2601  04E5  1283               	bcf	3,5	;RP0=0, select bank0
  2602  04E6  1303               	bcf	3,6	;RP1=0, select bank0
  2603  04E7  084C               	movf	?___fttol+3,w
  2604  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2605  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2606  04EA  00B7               	movwf	(sprintf@_val+3)^(0+128)
  2607  04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2608  04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2609  04ED  084B               	movf	?___fttol+2,w
  2610  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2611  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2612  04F0  00B6               	movwf	(sprintf@_val+2)^(0+128)
  2613  04F1  1283               	bcf	3,5	;RP0=0, select bank0
  2614  04F2  1303               	bcf	3,6	;RP1=0, select bank0
  2615  04F3  084A               	movf	?___fttol+1,w
  2616  04F4  1683               	bsf	3,5	;RP0=1, select bank1
  2617  04F5  1303               	bcf	3,6	;RP1=0, select bank1
  2618  04F6  00B5               	movwf	(sprintf@_val+1)^(0+128)
  2619  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2620  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2621  04F9  0849               	movf	?___fttol,w
  2622  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  2623  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  2624  04FC  00B4               	movwf	sprintf@_val^(0+128)
  2625                           
  2626                           ;doprnt.c: 1141: fval -= (double)_val._val;
  2627  04FD  0837               	movf	(sprintf@_val+3)^(0+128),w
  2628  04FE  00FB               	movwf	___lltoft@c+3
  2629  04FF  0836               	movf	(sprintf@_val+2)^(0+128),w
  2630  0500  00FA               	movwf	___lltoft@c+2
  2631  0501  0835               	movf	(sprintf@_val+1)^(0+128),w
  2632  0502  00F9               	movwf	___lltoft@c+1
  2633  0503  0834               	movf	sprintf@_val^(0+128),w
  2634  0504  00F8               	movwf	___lltoft@c
  2635  0505  120A  158A  2009  120A  118A  	fcall	___lltoft
  2636  050A  0878               	movf	?___lltoft,w
  2637  050B  1283               	bcf	3,5	;RP0=0, select bank0
  2638  050C  1303               	bcf	3,6	;RP1=0, select bank0
  2639  050D  00DD               	movwf	___ftsub@f2
  2640  050E  0879               	movf	?___lltoft+1,w
  2641  050F  00DE               	movwf	___ftsub@f2+1
  2642  0510  087A               	movf	?___lltoft+2,w
  2643  0511  00DF               	movwf	___ftsub@f2+2
  2644  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2645  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2646  0514  083E               	movf	sprintf@fval^(0+128),w
  2647  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0517  00E0               	movwf	___ftsub@f1
  2650  0518  1683               	bsf	3,5	;RP0=1, select bank1
  2651  0519  1303               	bcf	3,6	;RP1=0, select bank1
  2652  051A  083F               	movf	(sprintf@fval+1)^(0+128),w
  2653  051B  1283               	bcf	3,5	;RP0=0, select bank0
  2654  051C  1303               	bcf	3,6	;RP1=0, select bank0
  2655  051D  00E1               	movwf	___ftsub@f1+1
  2656  051E  1683               	bsf	3,5	;RP0=1, select bank1
  2657  051F  1303               	bcf	3,6	;RP1=0, select bank1
  2658  0520  0840               	movf	(sprintf@fval+2)^(0+128),w
  2659  0521  1283               	bcf	3,5	;RP0=0, select bank0
  2660  0522  1303               	bcf	3,6	;RP1=0, select bank0
  2661  0523  00E2               	movwf	___ftsub@f1+2
  2662  0524  160A  118A  22EB  120A  118A  	fcall	___ftsub
  2663  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2664  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2665  052B  085D               	movf	?___ftsub,w
  2666  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2667  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2668  052E  00BE               	movwf	sprintf@fval^(0+128)
  2669  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2670  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2671  0531  085E               	movf	?___ftsub+1,w
  2672  0532  1683               	bsf	3,5	;RP0=1, select bank1
  2673  0533  1303               	bcf	3,6	;RP1=0, select bank1
  2674  0534  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2675  0535  1283               	bcf	3,5	;RP0=0, select bank0
  2676  0536  1303               	bcf	3,6	;RP1=0, select bank0
  2677  0537  085F               	movf	?___ftsub+2,w
  2678  0538  1683               	bsf	3,5	;RP0=1, select bank1
  2679  0539  1303               	bcf	3,6	;RP1=0, select bank1
  2680  053A  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2681                           
  2682                           ;doprnt.c: 1142: exp = 0;
  2683  053B  01BB               	clrf	sprintf@exp^(0+128)
  2684  053C  01BC               	clrf	(sprintf@exp+1)^(0+128)
  2685  053D                     l2378:	
  2686                           
  2687                           ;doprnt.c: 1143: }
  2688                           ;doprnt.c: 1145: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2689  053D  01C1               	clrf	sprintf@c^(0+128)
  2690  053E  0AC1               	incf	sprintf@c^(0+128),f
  2691  053F  0841               	movf	sprintf@c^(0+128),w
  2692  0540  3A0A               	xorlw	10
  2693  0541  1903               	btfsc	3,2
  2694  0542  2D93               	goto	l2392
  2695  0543                     l2384:	
  2696                           
  2697                           ;doprnt.c: 1146: if(_val._val < dpowers[c])
  2698  0543  0841               	movf	sprintf@c^(0+128),w
  2699  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2700  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2701  0546  00E7               	movwf	??_sprintf
  2702  0547  3001               	movlw	1
  2703  0548                     u3475:	
  2704  0548  1003               	clrc
  2705  0549  0DE7               	rlf	??_sprintf,f
  2706  054A  3EFF               	addlw	-1
  2707  054B  1D03               	skipz
  2708  054C  2D48               	goto	u3475
  2709  054D  1003               	clrc
  2710  054E  0D67               	rlf	??_sprintf,w
  2711  054F  3E01               	addlw	low (_dpowers-__stringbase)
  2712  0550  0084               	movwf	4
  2713  0551  160A  118A  2000  120A  118A  	fcall	stringdir
  2714  0556  00E8               	movwf	??_sprintf+1
  2715  0557  160A  118A  2000  120A  118A  	fcall	stringdir
  2716  055C  00E9               	movwf	??_sprintf+2
  2717  055D  160A  118A  2000  120A  118A  	fcall	stringdir
  2718  0562  00EA               	movwf	??_sprintf+3
  2719  0563  160A  118A  2000  120A  118A  	fcall	stringdir
  2720  0568  00EB               	movwf	??_sprintf+4
  2721  0569  086B               	movf	??_sprintf+4,w
  2722  056A  1683               	bsf	3,5	;RP0=1, select bank1
  2723  056B  1303               	bcf	3,6	;RP1=0, select bank1
  2724  056C  0237               	subwf	(sprintf@_val+3)^(0+128),w
  2725  056D  1D03               	skipz
  2726  056E  2D85               	goto	u3485
  2727  056F  1283               	bcf	3,5	;RP0=0, select bank0
  2728  0570  1303               	bcf	3,6	;RP1=0, select bank0
  2729  0571  086A               	movf	??_sprintf+3,w
  2730  0572  1683               	bsf	3,5	;RP0=1, select bank1
  2731  0573  1303               	bcf	3,6	;RP1=0, select bank1
  2732  0574  0236               	subwf	(sprintf@_val+2)^(0+128),w
  2733  0575  1D03               	skipz
  2734  0576  2D85               	goto	u3485
  2735  0577  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0578  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0579  0869               	movf	??_sprintf+2,w
  2738  057A  1683               	bsf	3,5	;RP0=1, select bank1
  2739  057B  1303               	bcf	3,6	;RP1=0, select bank1
  2740  057C  0235               	subwf	(sprintf@_val+1)^(0+128),w
  2741  057D  1D03               	skipz
  2742  057E  2D85               	goto	u3485
  2743  057F  1283               	bcf	3,5	;RP0=0, select bank0
  2744  0580  1303               	bcf	3,6	;RP1=0, select bank0
  2745  0581  0868               	movf	??_sprintf+1,w
  2746  0582  1683               	bsf	3,5	;RP0=1, select bank1
  2747  0583  1303               	bcf	3,6	;RP1=0, select bank1
  2748  0584  0234               	subwf	sprintf@_val^(0+128),w
  2749  0585                     u3485:	
  2750  0585  1C03               	btfss	3,0
  2751  0586  2D93               	goto	l2392
  2752                           
  2753                           ;doprnt.c: 1147: break;
  2754  0587  3001               	movlw	1
  2755  0588  1283               	bcf	3,5	;RP0=0, select bank0
  2756  0589  1303               	bcf	3,6	;RP1=0, select bank0
  2757  058A  00E7               	movwf	??_sprintf
  2758  058B  0867               	movf	??_sprintf,w
  2759  058C  1683               	bsf	3,5	;RP0=1, select bank1
  2760  058D  1303               	bcf	3,6	;RP1=0, select bank1
  2761  058E  07C1               	addwf	sprintf@c^(0+128),f
  2762  058F  0841               	movf	sprintf@c^(0+128),w
  2763  0590  3A0A               	xorlw	10
  2764  0591  1D03               	skipz
  2765  0592  2D43               	goto	l2384
  2766  0593                     l2392:	
  2767                           
  2768                           ;doprnt.c: 1184: {
  2769                           ;doprnt.c: 1197: if(flag & 0x03)
  2770  0593  3003               	movlw	3
  2771  0594  0530               	andwf	sprintf@flag^(0+128),w
  2772  0595  1283               	bcf	3,5	;RP0=0, select bank0
  2773  0596  1303               	bcf	3,6	;RP1=0, select bank0
  2774  0597  00E7               	movwf	??_sprintf
  2775  0598  3000               	movlw	0
  2776  0599  1683               	bsf	3,5	;RP0=1, select bank1
  2777  059A  1303               	bcf	3,6	;RP1=0, select bank1
  2778  059B  0531               	andwf	(sprintf@flag+1)^(0+128),w
  2779  059C  1283               	bcf	3,5	;RP0=0, select bank0
  2780  059D  1303               	bcf	3,6	;RP1=0, select bank0
  2781  059E  00E8               	movwf	??_sprintf+1
  2782  059F  0868               	movf	??_sprintf+1,w
  2783  05A0  0467               	iorwf	??_sprintf,w
  2784  05A1  1903               	skipnz
  2785  05A2  2DB4               	goto	l162
  2786                           
  2787                           ;doprnt.c: 1199: ((*sp++ = ('-')));
  2788  05A3  302D               	movlw	45
  2789  05A4                     L3:	
  2790  05A4  00E7               	movwf	??_sprintf
  2791  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  2792  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  2793  05A7  083D               	movf	sprintf@sp^(0+128),w
  2794  05A8  0084               	movwf	4
  2795  05A9  1283               	bcf	3,5	;RP0=0, select bank0
  2796  05AA  1303               	bcf	3,6	;RP1=0, select bank0
  2797  05AB  0867               	movf	??_sprintf,w
  2798  05AC  1783               	bsf	3,7	;select IRP bank2
  2799  05AD  0080               	movwf	0
  2800  05AE  3001               	movlw	1
  2801  05AF  00E7               	movwf	??_sprintf
  2802  05B0  0867               	movf	??_sprintf,w
  2803  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  2804  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  2805  05B3  07BD               	addwf	sprintf@sp^(0+128),f
  2806  05B4                     l162:	
  2807  05B4  30FF               	movlw	-1
  2808  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  2809  05B6  00E7               	movwf	??_sprintf
  2810  05B7  0867               	movf	??_sprintf,w
  2811  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  2812  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  2813  05BA  07C1               	addwf	sprintf@c^(0+128),f
  2814  05BB  0841               	movf	sprintf@c^(0+128),w
  2815  05BC  3AFF               	xorlw	-1
  2816  05BD  1903               	btfsc	3,2
  2817  05BE  2E3B               	goto	l2410
  2818                           
  2819                           ;doprnt.c: 1209: {
  2820                           ;doprnt.c: 1210: unsigned long vd = _val._val/dpowers[c];
  2821                           
  2822                           ;doprnt.c: 1204: }
  2823                           ;doprnt.c: 1205: while(c--) {
  2824  05BF  0841               	movf	sprintf@c^(0+128),w
  2825  05C0  1283               	bcf	3,5	;RP0=0, select bank0
  2826  05C1  1303               	bcf	3,6	;RP1=0, select bank0
  2827  05C2  00E7               	movwf	??_sprintf
  2828  05C3  3001               	movlw	1
  2829  05C4                     u3515:	
  2830  05C4  1003               	clrc
  2831  05C5  0DE7               	rlf	??_sprintf,f
  2832  05C6  3EFF               	addlw	-1
  2833  05C7  1D03               	skipz
  2834  05C8  2DC4               	goto	u3515
  2835  05C9  1003               	clrc
  2836  05CA  0D67               	rlf	??_sprintf,w
  2837  05CB  3E01               	addlw	low (_dpowers-__stringbase)
  2838  05CC  0084               	movwf	4
  2839  05CD  160A  118A  2000  120A  118A  	fcall	stringdir
  2840  05D2  00F0               	movwf	___lldiv@divisor
  2841  05D3  160A  118A  2000  120A  118A  	fcall	stringdir
  2842  05D8  00F1               	movwf	___lldiv@divisor+1
  2843  05D9  160A  118A  2000  120A  118A  	fcall	stringdir
  2844  05DE  00F2               	movwf	___lldiv@divisor+2
  2845  05DF  160A  118A  2000  120A  118A  	fcall	stringdir
  2846  05E4  00F3               	movwf	___lldiv@divisor+3
  2847  05E5  1683               	bsf	3,5	;RP0=1, select bank1
  2848  05E6  1303               	bcf	3,6	;RP1=0, select bank1
  2849  05E7  0837               	movf	(sprintf@_val+3)^(0+128),w
  2850  05E8  00F7               	movwf	___lldiv@dividend+3
  2851  05E9  0836               	movf	(sprintf@_val+2)^(0+128),w
  2852  05EA  00F6               	movwf	___lldiv@dividend+2
  2853  05EB  0835               	movf	(sprintf@_val+1)^(0+128),w
  2854  05EC  00F5               	movwf	___lldiv@dividend+1
  2855  05ED  0834               	movf	sprintf@_val^(0+128),w
  2856  05EE  00F4               	movwf	___lldiv@dividend
  2857  05EF  160A  118A  2516  120A  118A  	fcall	___lldiv
  2858  05F4  0873               	movf	?___lldiv+3,w
  2859  05F5  1683               	bsf	3,5	;RP0=1, select bank1
  2860  05F6  1303               	bcf	3,6	;RP1=0, select bank1
  2861  05F7  00AB               	movwf	(sprintf@vd+3)^(0+128)
  2862  05F8  0872               	movf	?___lldiv+2,w
  2863  05F9  00AA               	movwf	(sprintf@vd+2)^(0+128)
  2864  05FA  0871               	movf	?___lldiv+1,w
  2865  05FB  00A9               	movwf	(sprintf@vd+1)^(0+128)
  2866  05FC  0870               	movf	?___lldiv,w
  2867  05FD  00A8               	movwf	sprintf@vd^(0+128)
  2868                           
  2869                           ;doprnt.c: 1211: vd %= 10;
  2870  05FE  3000               	movlw	0
  2871  05FF  00F3               	movwf	___llmod@divisor+3
  2872  0600  3000               	movlw	0
  2873  0601  00F2               	movwf	___llmod@divisor+2
  2874  0602  3000               	movlw	0
  2875  0603  00F1               	movwf	___llmod@divisor+1
  2876  0604  300A               	movlw	10
  2877  0605  00F0               	movwf	___llmod@divisor
  2878  0606  082B               	movf	(sprintf@vd+3)^(0+128),w
  2879  0607  00F7               	movwf	___llmod@dividend+3
  2880  0608  082A               	movf	(sprintf@vd+2)^(0+128),w
  2881  0609  00F6               	movwf	___llmod@dividend+2
  2882  060A  0829               	movf	(sprintf@vd+1)^(0+128),w
  2883  060B  00F5               	movwf	___llmod@dividend+1
  2884  060C  0828               	movf	sprintf@vd^(0+128),w
  2885  060D  00F4               	movwf	___llmod@dividend
  2886  060E  160A  118A  23C3  120A  118A  	fcall	___llmod
  2887  0613  0873               	movf	?___llmod+3,w
  2888  0614  1683               	bsf	3,5	;RP0=1, select bank1
  2889  0615  1303               	bcf	3,6	;RP1=0, select bank1
  2890  0616  00AB               	movwf	(sprintf@vd+3)^(0+128)
  2891  0617  0872               	movf	?___llmod+2,w
  2892  0618  00AA               	movwf	(sprintf@vd+2)^(0+128)
  2893  0619  0871               	movf	?___llmod+1,w
  2894  061A  00A9               	movwf	(sprintf@vd+1)^(0+128)
  2895  061B  0870               	movf	?___llmod,w
  2896  061C  00A8               	movwf	sprintf@vd^(0+128)
  2897                           
  2898                           ;doprnt.c: 1212: ((*sp++ = ('0' + vd)));
  2899  061D  0828               	movf	sprintf@vd^(0+128),w
  2900  061E  3E30               	addlw	48
  2901  061F  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0620  1303               	bcf	3,6	;RP1=0, select bank0
  2903  0621  2DA4               	goto	L3
  2904  0622                     l2404:	
  2905                           ;doprnt.c: 1213: }
  2906                           ;doprnt.c: 1215: }
  2907                           ;doprnt.c: 1216: while(exp > 0) {
  2908                           
  2909                           
  2910                           ;doprnt.c: 1217: ((*sp++ = ('0')));
  2911  0622  3030               	movlw	48
  2912  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2913  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2914  0625  00E7               	movwf	??_sprintf
  2915  0626  1683               	bsf	3,5	;RP0=1, select bank1
  2916  0627  1303               	bcf	3,6	;RP1=0, select bank1
  2917  0628  083D               	movf	sprintf@sp^(0+128),w
  2918  0629  0084               	movwf	4
  2919  062A  1283               	bcf	3,5	;RP0=0, select bank0
  2920  062B  1303               	bcf	3,6	;RP1=0, select bank0
  2921  062C  0867               	movf	??_sprintf,w
  2922  062D  1783               	bsf	3,7	;select IRP bank2
  2923  062E  0080               	movwf	0
  2924  062F  3001               	movlw	1
  2925  0630  00E7               	movwf	??_sprintf
  2926  0631  0867               	movf	??_sprintf,w
  2927  0632  1683               	bsf	3,5	;RP0=1, select bank1
  2928  0633  1303               	bcf	3,6	;RP1=0, select bank1
  2929  0634  07BD               	addwf	sprintf@sp^(0+128),f
  2930                           
  2931                           ;doprnt.c: 1218: exp--;
  2932  0635  30FF               	movlw	255
  2933  0636  07BB               	addwf	sprintf@exp^(0+128),f
  2934  0637  1803               	skipnc
  2935  0638  0ABC               	incf	(sprintf@exp+1)^(0+128),f
  2936  0639  30FF               	movlw	255
  2937  063A  07BC               	addwf	(sprintf@exp+1)^(0+128),f
  2938  063B                     l2410:	
  2939  063B  083C               	movf	(sprintf@exp+1)^(0+128),w
  2940  063C  3A80               	xorlw	128
  2941  063D  00FF               	movwf	127
  2942  063E  3080               	movlw	128
  2943  063F  027F               	subwf	127,w
  2944  0640  1D03               	skipz
  2945  0641  2E44               	goto	u3535
  2946  0642  3001               	movlw	1
  2947  0643  023B               	subwf	sprintf@exp^(0+128),w
  2948  0644                     u3535:	
  2949  0644  1803               	skipnc
  2950  0645  2E22               	goto	l2404
  2951                           
  2952                           ;doprnt.c: 1219: }
  2953                           ;doprnt.c: 1220: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2954  0646  1683               	bsf	3,5	;RP0=1, select bank1
  2955  0647  1303               	bcf	3,6	;RP1=0, select bank1
  2956  0648  0833               	movf	(sprintf@prec+1)^(0+128),w
  2957  0649  3A80               	xorlw	128
  2958  064A  00FF               	movwf	127
  2959  064B  3080               	movlw	128
  2960  064C  027F               	subwf	127,w
  2961  064D  1D03               	skipz
  2962  064E  2E51               	goto	u3545
  2963  064F  3009               	movlw	9
  2964  0650  0232               	subwf	sprintf@prec^(0+128),w
  2965  0651                     u3545:	
  2966  0651  1C03               	skipc
  2967  0652  2E55               	goto	l2416
  2968                           
  2969                           ;doprnt.c: 1221: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2970  0653  3008               	movlw	8
  2971  0654  2E58               	goto	L4
  2972  0655                     l2416:	
  2973                           
  2974                           ;doprnt.c: 1222: else
  2975                           ;doprnt.c: 1223: c = prec;
  2976  0655  1683               	bsf	3,5	;RP0=1, select bank1
  2977  0656  1303               	bcf	3,6	;RP1=0, select bank1
  2978  0657  0832               	movf	sprintf@prec^(0+128),w
  2979  0658                     L4:	
  2980  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2981  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2982  065A  00E7               	movwf	??_sprintf
  2983  065B  0867               	movf	??_sprintf,w
  2984  065C  1683               	bsf	3,5	;RP0=1, select bank1
  2985  065D  1303               	bcf	3,6	;RP1=0, select bank1
  2986  065E  00C1               	movwf	sprintf@c^(0+128)
  2987                           
  2988                           ;doprnt.c: 1224: prec -= c;
  2989  065F  0841               	movf	sprintf@c^(0+128),w
  2990  0660  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0661  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0662  00E7               	movwf	??_sprintf
  2993  0663  01E8               	clrf	??_sprintf+1
  2994  0664  1BE7               	btfsc	??_sprintf,7
  2995  0665  03E8               	decf	??_sprintf+1,f
  2996  0666  0867               	movf	??_sprintf,w
  2997  0667  1683               	bsf	3,5	;RP0=1, select bank1
  2998  0668  1303               	bcf	3,6	;RP1=0, select bank1
  2999  0669  02B2               	subwf	sprintf@prec^(0+128),f
  3000  066A  1283               	bcf	3,5	;RP0=0, select bank0
  3001  066B  1303               	bcf	3,6	;RP1=0, select bank0
  3002  066C  0868               	movf	??_sprintf+1,w
  3003  066D  1683               	bsf	3,5	;RP0=1, select bank1
  3004  066E  1303               	bcf	3,6	;RP1=0, select bank1
  3005  066F  1C03               	skipc
  3006  0670  03B3               	decf	(sprintf@prec+1)^(0+128),f
  3007  0671  02B3               	subwf	(sprintf@prec+1)^(0+128),f
  3008                           
  3009                           ;doprnt.c: 1228: if(c)
  3010  0672  0841               	movf	sprintf@c^(0+128),w
  3011  0673  1903               	btfsc	3,2
  3012  0674  2E88               	goto	l2422
  3013                           
  3014                           ;doprnt.c: 1230: ((*sp++ = ('.')));
  3015  0675  302E               	movlw	46
  3016  0676  1283               	bcf	3,5	;RP0=0, select bank0
  3017  0677  1303               	bcf	3,6	;RP1=0, select bank0
  3018  0678  00E7               	movwf	??_sprintf
  3019  0679  1683               	bsf	3,5	;RP0=1, select bank1
  3020  067A  1303               	bcf	3,6	;RP1=0, select bank1
  3021  067B  083D               	movf	sprintf@sp^(0+128),w
  3022  067C  0084               	movwf	4
  3023  067D  1283               	bcf	3,5	;RP0=0, select bank0
  3024  067E  1303               	bcf	3,6	;RP1=0, select bank0
  3025  067F  0867               	movf	??_sprintf,w
  3026  0680  1783               	bsf	3,7	;select IRP bank2
  3027  0681  0080               	movwf	0
  3028  0682  3001               	movlw	1
  3029  0683  00E7               	movwf	??_sprintf
  3030  0684  0867               	movf	??_sprintf,w
  3031  0685  1683               	bsf	3,5	;RP0=1, select bank1
  3032  0686  1303               	bcf	3,6	;RP1=0, select bank1
  3033  0687  07BD               	addwf	sprintf@sp^(0+128),f
  3034  0688                     l2422:	
  3035                           
  3036                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3037  0688  0841               	movf	sprintf@c^(0+128),w
  3038  0689  120A  158A  226F  120A  118A  	fcall	_scale
  3039  068E  1283               	bcf	3,5	;RP0=0, select bank0
  3040  068F  1303               	bcf	3,6	;RP1=0, select bank0
  3041  0690  0840               	movf	?_scale,w
  3042  0691  1683               	bsf	3,5	;RP0=1, select bank1
  3043  0692  1303               	bcf	3,6	;RP1=0, select bank1
  3044  0693  00A0               	movwf	_sprintf$578^(0+128)
  3045  0694  1283               	bcf	3,5	;RP0=0, select bank0
  3046  0695  1303               	bcf	3,6	;RP1=0, select bank0
  3047  0696  0841               	movf	?_scale+1,w
  3048  0697  1683               	bsf	3,5	;RP0=1, select bank1
  3049  0698  1303               	bcf	3,6	;RP1=0, select bank1
  3050  0699  00A1               	movwf	(_sprintf$578+1)^(0+128)
  3051  069A  1283               	bcf	3,5	;RP0=0, select bank0
  3052  069B  1303               	bcf	3,6	;RP1=0, select bank0
  3053  069C  0842               	movf	?_scale+2,w
  3054  069D  1683               	bsf	3,5	;RP0=1, select bank1
  3055  069E  1303               	bcf	3,6	;RP1=0, select bank1
  3056  069F  00A2               	movwf	(_sprintf$578+2)^(0+128)
  3057                           
  3058                           ;doprnt.c: 1236: _val._val = (long)(fval * scale(c));
  3059  06A0  0820               	movf	_sprintf$578^(0+128),w
  3060  06A1  1283               	bcf	3,5	;RP0=0, select bank0
  3061  06A2  1303               	bcf	3,6	;RP1=0, select bank0
  3062  06A3  00B3               	movwf	___ftmul@f2
  3063  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  3064  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  3065  06A6  0821               	movf	(_sprintf$578+1)^(0+128),w
  3066  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  3067  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  3068  06A9  00B4               	movwf	___ftmul@f2+1
  3069  06AA  1683               	bsf	3,5	;RP0=1, select bank1
  3070  06AB  1303               	bcf	3,6	;RP1=0, select bank1
  3071  06AC  0822               	movf	(_sprintf$578+2)^(0+128),w
  3072  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  3073  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  3074  06AF  00B5               	movwf	___ftmul@f2+2
  3075  06B0  1683               	bsf	3,5	;RP0=1, select bank1
  3076  06B1  1303               	bcf	3,6	;RP1=0, select bank1
  3077  06B2  083E               	movf	sprintf@fval^(0+128),w
  3078  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  3079  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  3080  06B5  00B0               	movwf	___ftmul@f1
  3081  06B6  1683               	bsf	3,5	;RP0=1, select bank1
  3082  06B7  1303               	bcf	3,6	;RP1=0, select bank1
  3083  06B8  083F               	movf	(sprintf@fval+1)^(0+128),w
  3084  06B9  1283               	bcf	3,5	;RP0=0, select bank0
  3085  06BA  1303               	bcf	3,6	;RP1=0, select bank0
  3086  06BB  00B1               	movwf	___ftmul@f1+1
  3087  06BC  1683               	bsf	3,5	;RP0=1, select bank1
  3088  06BD  1303               	bcf	3,6	;RP1=0, select bank1
  3089  06BE  0840               	movf	(sprintf@fval+2)^(0+128),w
  3090  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  3091  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  3092  06C1  00B2               	movwf	___ftmul@f1+2
  3093  06C2  160A  118A  272D  120A  118A  	fcall	___ftmul
  3094  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  3095  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  3096  06C9  0830               	movf	?___ftmul,w
  3097  06CA  00C9               	movwf	___fttol@f1
  3098  06CB  0831               	movf	?___ftmul+1,w
  3099  06CC  00CA               	movwf	___fttol@f1+1
  3100  06CD  0832               	movf	?___ftmul+2,w
  3101  06CE  00CB               	movwf	___fttol@f1+2
  3102  06CF  160A  118A  25DC  120A  118A  	fcall	___fttol
  3103  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  3104  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  3105  06D6  084C               	movf	?___fttol+3,w
  3106  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  3107  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  3108  06D9  00B7               	movwf	(sprintf@_val+3)^(0+128)
  3109  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  3110  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  3111  06DC  084B               	movf	?___fttol+2,w
  3112  06DD  1683               	bsf	3,5	;RP0=1, select bank1
  3113  06DE  1303               	bcf	3,6	;RP1=0, select bank1
  3114  06DF  00B6               	movwf	(sprintf@_val+2)^(0+128)
  3115  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  3116  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  3117  06E2  084A               	movf	?___fttol+1,w
  3118  06E3  1683               	bsf	3,5	;RP0=1, select bank1
  3119  06E4  1303               	bcf	3,6	;RP1=0, select bank1
  3120  06E5  00B5               	movwf	(sprintf@_val+1)^(0+128)
  3121  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  3122  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  3123  06E8  0849               	movf	?___fttol,w
  3124  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  3125  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  3126  06EB                     L5:	
  3127  06EB  00B4               	movwf	sprintf@_val^(0+128)
  3128  06EC  30FF               	movlw	-1
  3129  06ED  1283               	bcf	3,5	;RP0=0, select bank0
  3130  06EE  1303               	bcf	3,6	;RP1=0, select bank0
  3131  06EF  00E7               	movwf	??_sprintf
  3132  06F0  0867               	movf	??_sprintf,w
  3133  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  3134  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  3135  06F3  07C1               	addwf	sprintf@c^(0+128),f
  3136  06F4  0841               	movf	sprintf@c^(0+128),w
  3137  06F5  3AFF               	xorlw	-1
  3138  06F6  1903               	btfsc	3,2
  3139  06F7  2FC2               	goto	l2442
  3140                           
  3141                           ;doprnt.c: 1238: unsigned long vd = _val._val/dpowers[c];
  3142                           
  3143                           ;doprnt.c: 1237: while(c--) {
  3144  06F8  0841               	movf	sprintf@c^(0+128),w
  3145  06F9  1283               	bcf	3,5	;RP0=0, select bank0
  3146  06FA  1303               	bcf	3,6	;RP1=0, select bank0
  3147  06FB  00E7               	movwf	??_sprintf
  3148  06FC  3001               	movlw	1
  3149  06FD                     u3565:	
  3150  06FD  1003               	clrc
  3151  06FE  0DE7               	rlf	??_sprintf,f
  3152  06FF  3EFF               	addlw	-1
  3153  0700  1D03               	skipz
  3154  0701  2EFD               	goto	u3565
  3155  0702  1003               	clrc
  3156  0703  0D67               	rlf	??_sprintf,w
  3157  0704  3E01               	addlw	low (_dpowers-__stringbase)
  3158  0705  0084               	movwf	4
  3159  0706  160A  118A  2000  120A  118A  	fcall	stringdir
  3160  070B  00F0               	movwf	___lldiv@divisor
  3161  070C  160A  118A  2000  120A  118A  	fcall	stringdir
  3162  0711  00F1               	movwf	___lldiv@divisor+1
  3163  0712  160A  118A  2000  120A  118A  	fcall	stringdir
  3164  0717  00F2               	movwf	___lldiv@divisor+2
  3165  0718  160A  118A  2000  120A  118A  	fcall	stringdir
  3166  071D  00F3               	movwf	___lldiv@divisor+3
  3167  071E  1683               	bsf	3,5	;RP0=1, select bank1
  3168  071F  1303               	bcf	3,6	;RP1=0, select bank1
  3169  0720  0837               	movf	(sprintf@_val+3)^(0+128),w
  3170  0721  00F7               	movwf	___lldiv@dividend+3
  3171  0722  0836               	movf	(sprintf@_val+2)^(0+128),w
  3172  0723  00F6               	movwf	___lldiv@dividend+2
  3173  0724  0835               	movf	(sprintf@_val+1)^(0+128),w
  3174  0725  00F5               	movwf	___lldiv@dividend+1
  3175  0726  0834               	movf	sprintf@_val^(0+128),w
  3176  0727  00F4               	movwf	___lldiv@dividend
  3177  0728  160A  118A  2516  120A  118A  	fcall	___lldiv
  3178  072D  0873               	movf	?___lldiv+3,w
  3179  072E  1683               	bsf	3,5	;RP0=1, select bank1
  3180  072F  1303               	bcf	3,6	;RP1=0, select bank1
  3181  0730  00AF               	movwf	(sprintf@vd_151+3)^(0+128)
  3182  0731  0872               	movf	?___lldiv+2,w
  3183  0732  00AE               	movwf	(sprintf@vd_151+2)^(0+128)
  3184  0733  0871               	movf	?___lldiv+1,w
  3185  0734  00AD               	movwf	(sprintf@vd_151+1)^(0+128)
  3186  0735  0870               	movf	?___lldiv,w
  3187  0736  00AC               	movwf	sprintf@vd_151^(0+128)
  3188                           
  3189                           ;doprnt.c: 1239: vd %= 10;
  3190  0737  3000               	movlw	0
  3191  0738  00F3               	movwf	___llmod@divisor+3
  3192  0739  3000               	movlw	0
  3193  073A  00F2               	movwf	___llmod@divisor+2
  3194  073B  3000               	movlw	0
  3195  073C  00F1               	movwf	___llmod@divisor+1
  3196  073D  300A               	movlw	10
  3197  073E  00F0               	movwf	___llmod@divisor
  3198  073F  082F               	movf	(sprintf@vd_151+3)^(0+128),w
  3199  0740  00F7               	movwf	___llmod@dividend+3
  3200  0741  082E               	movf	(sprintf@vd_151+2)^(0+128),w
  3201  0742  00F6               	movwf	___llmod@dividend+2
  3202  0743  082D               	movf	(sprintf@vd_151+1)^(0+128),w
  3203  0744  00F5               	movwf	___llmod@dividend+1
  3204  0745  082C               	movf	sprintf@vd_151^(0+128),w
  3205  0746  00F4               	movwf	___llmod@dividend
  3206  0747  160A  118A  23C3  120A  118A  	fcall	___llmod
  3207  074C  0873               	movf	?___llmod+3,w
  3208  074D  1683               	bsf	3,5	;RP0=1, select bank1
  3209  074E  1303               	bcf	3,6	;RP1=0, select bank1
  3210  074F  00AF               	movwf	(sprintf@vd_151+3)^(0+128)
  3211  0750  0872               	movf	?___llmod+2,w
  3212  0751  00AE               	movwf	(sprintf@vd_151+2)^(0+128)
  3213  0752  0871               	movf	?___llmod+1,w
  3214  0753  00AD               	movwf	(sprintf@vd_151+1)^(0+128)
  3215  0754  0870               	movf	?___llmod,w
  3216  0755  00AC               	movwf	sprintf@vd_151^(0+128)
  3217                           
  3218                           ;doprnt.c: 1240: ((*sp++ = ('0' + vd)));
  3219  0756  082C               	movf	sprintf@vd_151^(0+128),w
  3220  0757  3E30               	addlw	48
  3221  0758  1283               	bcf	3,5	;RP0=0, select bank0
  3222  0759  1303               	bcf	3,6	;RP1=0, select bank0
  3223  075A  00E7               	movwf	??_sprintf
  3224  075B  1683               	bsf	3,5	;RP0=1, select bank1
  3225  075C  1303               	bcf	3,6	;RP1=0, select bank1
  3226  075D  083D               	movf	sprintf@sp^(0+128),w
  3227  075E  0084               	movwf	4
  3228  075F  1283               	bcf	3,5	;RP0=0, select bank0
  3229  0760  1303               	bcf	3,6	;RP1=0, select bank0
  3230  0761  0867               	movf	??_sprintf,w
  3231  0762  1783               	bsf	3,7	;select IRP bank2
  3232  0763  0080               	movwf	0
  3233  0764  3001               	movlw	1
  3234  0765  00E7               	movwf	??_sprintf
  3235  0766  0867               	movf	??_sprintf,w
  3236  0767  1683               	bsf	3,5	;RP0=1, select bank1
  3237  0768  1303               	bcf	3,6	;RP1=0, select bank1
  3238  0769  07BD               	addwf	sprintf@sp^(0+128),f
  3239                           
  3240                           ;doprnt.c: 1241: _val._val %= dpowers[c];
  3241  076A  0841               	movf	sprintf@c^(0+128),w
  3242  076B  1283               	bcf	3,5	;RP0=0, select bank0
  3243  076C  1303               	bcf	3,6	;RP1=0, select bank0
  3244  076D  00E7               	movwf	??_sprintf
  3245  076E  3001               	movlw	1
  3246  076F                     u3575:	
  3247  076F  1003               	clrc
  3248  0770  0DE7               	rlf	??_sprintf,f
  3249  0771  3EFF               	addlw	-1
  3250  0772  1D03               	skipz
  3251  0773  2F6F               	goto	u3575
  3252  0774  1003               	clrc
  3253  0775  0D67               	rlf	??_sprintf,w
  3254  0776  3E01               	addlw	low (_dpowers-__stringbase)
  3255  0777  0084               	movwf	4
  3256  0778  160A  118A  2000  120A  118A  	fcall	stringdir
  3257  077D  00F0               	movwf	___llmod@divisor
  3258  077E  160A  118A  2000  120A  118A  	fcall	stringdir
  3259  0783  00F1               	movwf	___llmod@divisor+1
  3260  0784  160A  118A  2000  120A  118A  	fcall	stringdir
  3261  0789  00F2               	movwf	___llmod@divisor+2
  3262  078A  160A  118A  2000  120A  118A  	fcall	stringdir
  3263  078F  00F3               	movwf	___llmod@divisor+3
  3264  0790  1683               	bsf	3,5	;RP0=1, select bank1
  3265  0791  1303               	bcf	3,6	;RP1=0, select bank1
  3266  0792  0837               	movf	(sprintf@_val+3)^(0+128),w
  3267  0793  00F7               	movwf	___llmod@dividend+3
  3268  0794  0836               	movf	(sprintf@_val+2)^(0+128),w
  3269  0795  00F6               	movwf	___llmod@dividend+2
  3270  0796  0835               	movf	(sprintf@_val+1)^(0+128),w
  3271  0797  00F5               	movwf	___llmod@dividend+1
  3272  0798  0834               	movf	sprintf@_val^(0+128),w
  3273  0799  00F4               	movwf	___llmod@dividend
  3274  079A  160A  118A  23C3  120A  118A  	fcall	___llmod
  3275  079F  0873               	movf	?___llmod+3,w
  3276  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  3277  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  3278  07A2  00B7               	movwf	(sprintf@_val+3)^(0+128)
  3279  07A3  0872               	movf	?___llmod+2,w
  3280  07A4  00B6               	movwf	(sprintf@_val+2)^(0+128)
  3281  07A5  0871               	movf	?___llmod+1,w
  3282  07A6  00B5               	movwf	(sprintf@_val+1)^(0+128)
  3283  07A7  0870               	movf	?___llmod,w
  3284  07A8  2EEB               	goto	L5
  3285  07A9                     l2436:	
  3286                           ;doprnt.c: 1242: }
  3287                           ;doprnt.c: 1244: while(prec) {
  3288                           
  3289                           
  3290                           ;doprnt.c: 1245: ((*sp++ = ('0')));
  3291  07A9  3030               	movlw	48
  3292  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  3293  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  3294  07AC  00E7               	movwf	??_sprintf
  3295  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  3296  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  3297  07AF  083D               	movf	sprintf@sp^(0+128),w
  3298  07B0  0084               	movwf	4
  3299  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  3300  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  3301  07B3  0867               	movf	??_sprintf,w
  3302  07B4  1783               	bsf	3,7	;select IRP bank2
  3303  07B5  0080               	movwf	0
  3304  07B6  3001               	movlw	1
  3305  07B7  00E7               	movwf	??_sprintf
  3306  07B8  0867               	movf	??_sprintf,w
  3307  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  3308  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  3309  07BB  07BD               	addwf	sprintf@sp^(0+128),f
  3310                           
  3311                           ;doprnt.c: 1246: prec--;
  3312  07BC  30FF               	movlw	255
  3313  07BD  07B2               	addwf	sprintf@prec^(0+128),f
  3314  07BE  1803               	skipnc
  3315  07BF  0AB3               	incf	(sprintf@prec+1)^(0+128),f
  3316  07C0  30FF               	movlw	255
  3317  07C1  07B3               	addwf	(sprintf@prec+1)^(0+128),f
  3318  07C2                     l2442:	
  3319  07C2  0833               	movf	(sprintf@prec+1)^(0+128),w
  3320  07C3  0432               	iorwf	sprintf@prec^(0+128),w
  3321  07C4  1903               	btfsc	3,2
  3322  07C5  2A62               	goto	l2450
  3323  07C6  2FA9               	goto	l2436
  3324  07C7                     l2444:	
  3325                           ;doprnt.c: 1247: }
  3326                           ;doprnt.c: 1254: continue;
  3327                           
  3328                           
  3329                           ;doprnt.c: 1255: }
  3330                           ;doprnt.c: 1431: {
  3331                           ;doprnt.c: 1447: if(flag & 0x03)
  3332  07C7  3003               	movlw	3
  3333  07C8  1683               	bsf	3,5	;RP0=1, select bank1
  3334  07C9  1303               	bcf	3,6	;RP1=0, select bank1
  3335  07CA  0530               	andwf	sprintf@flag^(0+128),w
  3336  07CB  1283               	bcf	3,5	;RP0=0, select bank0
  3337  07CC  1303               	bcf	3,6	;RP1=0, select bank0
  3338  07CD  00E7               	movwf	??_sprintf
  3339  07CE  3000               	movlw	0
  3340  07CF  1683               	bsf	3,5	;RP0=1, select bank1
  3341  07D0  1303               	bcf	3,6	;RP1=0, select bank1
  3342  07D1  0531               	andwf	(sprintf@flag+1)^(0+128),w
  3343  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  3344  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  3345  07D4  00E8               	movwf	??_sprintf+1
  3346  07D5  0868               	movf	??_sprintf+1,w
  3347  07D6  0467               	iorwf	??_sprintf,w
  3348  07D7  1903               	skipnz
  3349  07D8  2A62               	goto	l2450
  3350                           
  3351                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3352  07D9  302D               	movlw	45
  3353  07DA                     L6:	
  3354  07DA  00E7               	movwf	??_sprintf
  3355  07DB  1683               	bsf	3,5	;RP0=1, select bank1
  3356  07DC  1303               	bcf	3,6	;RP1=0, select bank1
  3357  07DD  083D               	movf	sprintf@sp^(0+128),w
  3358  07DE  0084               	movwf	4
  3359  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  3360  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  3361  07E1  0867               	movf	??_sprintf,w
  3362  07E2  1783               	bsf	3,7	;select IRP bank2
  3363  07E3  0080               	movwf	0
  3364  07E4  3001               	movlw	1
  3365  07E5  00E7               	movwf	??_sprintf
  3366  07E6  0867               	movf	??_sprintf,w
  3367  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  3368  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  3369  07E9  07BD               	addwf	sprintf@sp^(0+128),f
  3370  07EA  2A62               	goto	l2450
  3371  07EB                     l2452:	
  3372                           ;doprnt.c: 1478: }
  3373                           ;doprnt.c: 1542: }
  3374                           ;doprnt.c: 1544: alldone:
  3375                           
  3376                           
  3377                           ;doprnt.c: 1547: *sp = 0;
  3378  07EB  083D               	movf	sprintf@sp^(0+128),w
  3379  07EC  0084               	movwf	4
  3380  07ED  1783               	bsf	3,7	;select IRP bank2
  3381  07EE  0180               	clrf	0
  3382  07EF  0008               	return
  3383  07F0                     __end_of_sprintf:	
  3384                           ;doprnt.c: 1549: return 0;
  3385                           ;	Return value of _sprintf is never used
  3386                           
  3387                           
  3388                           	psect	text3
  3389  0A6F                     __ptext3:	
  3390 ;; *************** function _scale *****************
  3391 ;; Defined at:
  3392 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3393 ;; Parameters:    Size  Location     Type
  3394 ;;  scl             1    wreg     char 
  3395 ;; Auto vars:     Size  Location     Type
  3396 ;;  scl             1   40[BANK0 ] char 
  3397 ;; Return value:  Size  Location     Type
  3398 ;;                  3   32[BANK0 ] char 
  3399 ;; Registers used:
  3400 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3401 ;; Tracked objects:
  3402 ;;		On entry : 0/0
  3403 ;;		On exit  : 0/0
  3404 ;;		Unchanged: 0/0
  3405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3406 ;;      Params:         0       3       0       0       0
  3407 ;;      Locals:         0       4       0       0       0
  3408 ;;      Temps:          0       2       0       0       0
  3409 ;;      Totals:         0       9       0       0       0
  3410 ;;Total ram usage:        9 bytes
  3411 ;; Hardware stack levels used:    1
  3412 ;; Hardware stack levels required when called:    2
  3413 ;; This function calls:
  3414 ;;		___awdiv
  3415 ;;		___awmod
  3416 ;;		___bmul
  3417 ;;		___ftmul
  3418 ;; This function is called by:
  3419 ;;		_sprintf
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           
  3424                           ;psect for function _scale
  3425  0A6F                     _scale:	
  3426                           
  3427                           ;incstack = 0
  3428                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3429                           ;scale@scl stored from wreg
  3430  0A6F  1283               	bcf	3,5	;RP0=0, select bank0
  3431  0A70  1303               	bcf	3,6	;RP1=0, select bank0
  3432  0A71  00C8               	movwf	scale@scl
  3433                           
  3434                           ;doprnt.c: 428: if(scl < 0) {
  3435  0A72  1FC8               	btfss	scale@scl,7
  3436  0A73  2BC2               	goto	l1968
  3437                           
  3438                           ;doprnt.c: 429: scl = -scl;
  3439  0A74  09C8               	comf	scale@scl,f
  3440  0A75  0AC8               	incf	scale@scl,f
  3441                           
  3442                           ;doprnt.c: 430: if(scl>=110)
  3443  0A76  0848               	movf	scale@scl,w
  3444  0A77  3A80               	xorlw	128
  3445  0A78  3E12               	addlw	-238
  3446  0A79  1C03               	skipc
  3447  0A7A  2B35               	goto	l1958
  3448                           
  3449                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3450  0A7B  3003               	movlw	3
  3451  0A7C  00C3               	movwf	??_scale
  3452  0A7D  0843               	movf	??_scale,w
  3453  0A7E  00A4               	movwf	___bmul@multiplicand
  3454  0A7F  300A               	movlw	10
  3455  0A80  00F7               	movwf	___awdiv@divisor
  3456  0A81  3000               	movlw	0
  3457  0A82  00F8               	movwf	___awdiv@divisor+1
  3458  0A83  0848               	movf	scale@scl,w
  3459  0A84  00F2               	movwf	___awmod@dividend
  3460  0A85  01F3               	clrf	___awmod@dividend+1
  3461  0A86  1BF2               	btfsc	___awmod@dividend,7
  3462  0A87  03F3               	decf	___awmod@dividend+1,f
  3463  0A88  3064               	movlw	100
  3464  0A89  00F0               	movwf	___awmod@divisor
  3465  0A8A  3000               	movlw	0
  3466  0A8B  00F1               	movwf	___awmod@divisor+1
  3467  0A8C  160A  118A  240F  120A  158A  	fcall	___awmod
  3468  0A91  0871               	movf	?___awmod+1,w
  3469  0A92  01FA               	clrf	___awdiv@dividend+1
  3470  0A93  07FA               	addwf	___awdiv@dividend+1,f
  3471  0A94  0870               	movf	?___awmod,w
  3472  0A95  01F9               	clrf	___awdiv@dividend
  3473  0A96  07F9               	addwf	___awdiv@dividend,f
  3474  0A97  160A  118A  24B9  120A  158A  	fcall	___awdiv
  3475  0A9C  0877               	movf	?___awdiv,w
  3476  0A9D  3E09               	addlw	9
  3477  0A9E  160A  118A  22AB  120A  158A  	fcall	___bmul
  3478  0AA3  3E29               	addlw	low (__npowers_-__stringbase)
  3479  0AA4  0084               	movwf	4
  3480  0AA5  160A  118A  2000  120A  158A  	fcall	stringdir
  3481  0AAA  1283               	bcf	3,5	;RP0=0, select bank0
  3482  0AAB  1303               	bcf	3,6	;RP1=0, select bank0
  3483  0AAC  00B0               	movwf	___ftmul@f1
  3484  0AAD  160A  118A  2000  120A  158A  	fcall	stringdir
  3485  0AB2  00B1               	movwf	___ftmul@f1+1
  3486  0AB3  160A  118A  2000  120A  158A  	fcall	stringdir
  3487  0AB8  00B2               	movwf	___ftmul@f1+2
  3488  0AB9  3003               	movlw	3
  3489  0ABA  00C4               	movwf	??_scale+1
  3490  0ABB  0844               	movf	??_scale+1,w
  3491  0ABC  00A4               	movwf	___bmul@multiplicand
  3492  0ABD  3064               	movlw	100
  3493  0ABE  00F7               	movwf	___awdiv@divisor
  3494  0ABF  3000               	movlw	0
  3495  0AC0  00F8               	movwf	___awdiv@divisor+1
  3496  0AC1  0848               	movf	scale@scl,w
  3497  0AC2  00F9               	movwf	___awdiv@dividend
  3498  0AC3  01FA               	clrf	___awdiv@dividend+1
  3499  0AC4  1BF9               	btfsc	___awdiv@dividend,7
  3500  0AC5  03FA               	decf	___awdiv@dividend+1,f
  3501  0AC6  160A  118A  24B9  120A  158A  	fcall	___awdiv
  3502  0ACB  0877               	movf	?___awdiv,w
  3503  0ACC  3E12               	addlw	18
  3504  0ACD  160A  118A  22AB  120A  158A  	fcall	___bmul
  3505  0AD2  3E29               	addlw	low (__npowers_-__stringbase)
  3506  0AD3  0084               	movwf	4
  3507  0AD4  160A  118A  2000  120A  158A  	fcall	stringdir
  3508  0AD9  1283               	bcf	3,5	;RP0=0, select bank0
  3509  0ADA  1303               	bcf	3,6	;RP1=0, select bank0
  3510  0ADB  00B3               	movwf	___ftmul@f2
  3511  0ADC  160A  118A  2000  120A  158A  	fcall	stringdir
  3512  0AE1  00B4               	movwf	___ftmul@f2+1
  3513  0AE2  160A  118A  2000  120A  158A  	fcall	stringdir
  3514  0AE7  00B5               	movwf	___ftmul@f2+2
  3515  0AE8  160A  118A  272D  120A  158A  	fcall	___ftmul
  3516  0AED  1283               	bcf	3,5	;RP0=0, select bank0
  3517  0AEE  1303               	bcf	3,6	;RP1=0, select bank0
  3518  0AEF  0830               	movf	?___ftmul,w
  3519  0AF0  00C5               	movwf	_scale$577
  3520  0AF1  0831               	movf	?___ftmul+1,w
  3521  0AF2  00C6               	movwf	_scale$577+1
  3522  0AF3  0832               	movf	?___ftmul+2,w
  3523  0AF4  00C7               	movwf	_scale$577+2
  3524                           
  3525                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3526  0AF5  3003               	movlw	3
  3527  0AF6  00C3               	movwf	??_scale
  3528  0AF7  0843               	movf	??_scale,w
  3529  0AF8  00A4               	movwf	___bmul@multiplicand
  3530  0AF9  0848               	movf	scale@scl,w
  3531  0AFA  00F2               	movwf	___awmod@dividend
  3532  0AFB  01F3               	clrf	___awmod@dividend+1
  3533  0AFC  1BF2               	btfsc	___awmod@dividend,7
  3534  0AFD  03F3               	decf	___awmod@dividend+1,f
  3535  0AFE  300A               	movlw	10
  3536  0AFF  00F0               	movwf	___awmod@divisor
  3537  0B00  3000               	movlw	0
  3538  0B01  00F1               	movwf	___awmod@divisor+1
  3539  0B02  160A  118A  240F  120A  158A  	fcall	___awmod
  3540  0B07  0870               	movf	?___awmod,w
  3541  0B08  160A  118A  22AB  120A  158A  	fcall	___bmul
  3542  0B0D  3E29               	addlw	low (__npowers_-__stringbase)
  3543  0B0E  0084               	movwf	4
  3544  0B0F  160A  118A  2000  120A  158A  	fcall	stringdir
  3545  0B14  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0B15  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0B16  00B0               	movwf	___ftmul@f1
  3548  0B17  160A  118A  2000  120A  158A  	fcall	stringdir
  3549  0B1C  00B1               	movwf	___ftmul@f1+1
  3550  0B1D  160A  118A  2000  120A  158A  	fcall	stringdir
  3551  0B22  00B2               	movwf	___ftmul@f1+2
  3552  0B23  0845               	movf	_scale$577,w
  3553  0B24  00B3               	movwf	___ftmul@f2
  3554  0B25  0846               	movf	_scale$577+1,w
  3555  0B26  00B4               	movwf	___ftmul@f2+1
  3556  0B27  0847               	movf	_scale$577+2,w
  3557  0B28  00B5               	movwf	___ftmul@f2+2
  3558  0B29  160A  118A  272D   	fcall	___ftmul
  3559  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  3560  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  3561  0B2E  0830               	movf	?___ftmul,w
  3562  0B2F  00C0               	movwf	?_scale
  3563  0B30  0831               	movf	?___ftmul+1,w
  3564  0B31  00C1               	movwf	?_scale+1
  3565  0B32  0832               	movf	?___ftmul+2,w
  3566  0B33  00C2               	movwf	?_scale+2
  3567  0B34  0008               	return
  3568  0B35                     l1958:	
  3569                           
  3570                           ;doprnt.c: 432: else if(scl > 10)
  3571  0B35  0848               	movf	scale@scl,w
  3572  0B36  3A80               	xorlw	128
  3573  0B37  3E75               	addlw	-139
  3574  0B38  1C03               	skipc
  3575  0B39  2BA3               	goto	l1964
  3576                           
  3577                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3578  0B3A  3003               	movlw	3
  3579  0B3B  00C3               	movwf	??_scale
  3580  0B3C  0843               	movf	??_scale,w
  3581  0B3D  00A4               	movwf	___bmul@multiplicand
  3582  0B3E  0848               	movf	scale@scl,w
  3583  0B3F  00F2               	movwf	___awmod@dividend
  3584  0B40  01F3               	clrf	___awmod@dividend+1
  3585  0B41  1BF2               	btfsc	___awmod@dividend,7
  3586  0B42  03F3               	decf	___awmod@dividend+1,f
  3587  0B43  300A               	movlw	10
  3588  0B44  00F0               	movwf	___awmod@divisor
  3589  0B45  3000               	movlw	0
  3590  0B46  00F1               	movwf	___awmod@divisor+1
  3591  0B47  160A  118A  240F  120A  158A  	fcall	___awmod
  3592  0B4C  0870               	movf	?___awmod,w
  3593  0B4D  160A  118A  22AB  120A  158A  	fcall	___bmul
  3594  0B52  3E29               	addlw	low (__npowers_-__stringbase)
  3595  0B53  0084               	movwf	4
  3596  0B54  160A  118A  2000  120A  158A  	fcall	stringdir
  3597  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  3598  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  3599  0B5B  00B0               	movwf	___ftmul@f1
  3600  0B5C  160A  118A  2000  120A  158A  	fcall	stringdir
  3601  0B61  00B1               	movwf	___ftmul@f1+1
  3602  0B62  160A  118A  2000  120A  158A  	fcall	stringdir
  3603  0B67  00B2               	movwf	___ftmul@f1+2
  3604  0B68  3003               	movlw	3
  3605  0B69  00C4               	movwf	??_scale+1
  3606  0B6A  0844               	movf	??_scale+1,w
  3607  0B6B  00A4               	movwf	___bmul@multiplicand
  3608  0B6C  300A               	movlw	10
  3609  0B6D  00F7               	movwf	___awdiv@divisor
  3610  0B6E  3000               	movlw	0
  3611  0B6F  00F8               	movwf	___awdiv@divisor+1
  3612  0B70  0848               	movf	scale@scl,w
  3613  0B71  00F9               	movwf	___awdiv@dividend
  3614  0B72  01FA               	clrf	___awdiv@dividend+1
  3615  0B73  1BF9               	btfsc	___awdiv@dividend,7
  3616  0B74  03FA               	decf	___awdiv@dividend+1,f
  3617  0B75  160A  118A  24B9  120A  158A  	fcall	___awdiv
  3618  0B7A  0877               	movf	?___awdiv,w
  3619  0B7B  3E09               	addlw	9
  3620  0B7C  160A  118A  22AB  120A  158A  	fcall	___bmul
  3621  0B81  3E29               	addlw	low (__npowers_-__stringbase)
  3622  0B82  0084               	movwf	4
  3623  0B83  160A  118A  2000  120A  158A  	fcall	stringdir
  3624  0B88  1283               	bcf	3,5	;RP0=0, select bank0
  3625  0B89  1303               	bcf	3,6	;RP1=0, select bank0
  3626  0B8A  00B3               	movwf	___ftmul@f2
  3627  0B8B  160A  118A  2000  120A  158A  	fcall	stringdir
  3628  0B90  00B4               	movwf	___ftmul@f2+1
  3629  0B91  160A  118A  2000  120A  158A  	fcall	stringdir
  3630  0B96  00B5               	movwf	___ftmul@f2+2
  3631  0B97  160A  118A  272D   	fcall	___ftmul
  3632  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  3633  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  3634  0B9C  0830               	movf	?___ftmul,w
  3635  0B9D  00C0               	movwf	?_scale
  3636  0B9E  0831               	movf	?___ftmul+1,w
  3637  0B9F  00C1               	movwf	?_scale+1
  3638  0BA0  0832               	movf	?___ftmul+2,w
  3639  0BA1  00C2               	movwf	?_scale+2
  3640  0BA2  0008               	return
  3641  0BA3                     l1964:	
  3642                           
  3643                           ;doprnt.c: 434: return _npowers_[scl];
  3644  0BA3  3003               	movlw	3
  3645  0BA4  00C3               	movwf	??_scale
  3646  0BA5  0843               	movf	??_scale,w
  3647  0BA6  00A4               	movwf	___bmul@multiplicand
  3648  0BA7  0848               	movf	scale@scl,w
  3649  0BA8  160A  118A  22AB  120A  158A  	fcall	___bmul
  3650  0BAD  3E29               	addlw	low (__npowers_-__stringbase)
  3651  0BAE  0084               	movwf	4
  3652  0BAF  160A  118A  2000  120A  158A  	fcall	stringdir
  3653  0BB4  1283               	bcf	3,5	;RP0=0, select bank0
  3654  0BB5  1303               	bcf	3,6	;RP1=0, select bank0
  3655  0BB6  00C0               	movwf	?_scale
  3656  0BB7  160A  118A  2000  120A  158A  	fcall	stringdir
  3657  0BBC  00C1               	movwf	?_scale+1
  3658  0BBD  160A  118A  2000   	fcall	stringdir
  3659  0BC0  00C2               	movwf	?_scale+2
  3660  0BC1  0008               	return
  3661  0BC2                     l1968:	
  3662                           
  3663                           ;doprnt.c: 435: }
  3664                           ;doprnt.c: 436: if(scl>=110)
  3665  0BC2  0848               	movf	scale@scl,w
  3666  0BC3  3A80               	xorlw	128
  3667  0BC4  3E12               	addlw	-238
  3668  0BC5  1C03               	skipc
  3669  0BC6  2C81               	goto	l1976
  3670                           
  3671                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3672  0BC7  3003               	movlw	3
  3673  0BC8  00C3               	movwf	??_scale
  3674  0BC9  0843               	movf	??_scale,w
  3675  0BCA  00A4               	movwf	___bmul@multiplicand
  3676  0BCB  300A               	movlw	10
  3677  0BCC  00F7               	movwf	___awdiv@divisor
  3678  0BCD  3000               	movlw	0
  3679  0BCE  00F8               	movwf	___awdiv@divisor+1
  3680  0BCF  0848               	movf	scale@scl,w
  3681  0BD0  00F2               	movwf	___awmod@dividend
  3682  0BD1  01F3               	clrf	___awmod@dividend+1
  3683  0BD2  1BF2               	btfsc	___awmod@dividend,7
  3684  0BD3  03F3               	decf	___awmod@dividend+1,f
  3685  0BD4  3064               	movlw	100
  3686  0BD5  00F0               	movwf	___awmod@divisor
  3687  0BD6  3000               	movlw	0
  3688  0BD7  00F1               	movwf	___awmod@divisor+1
  3689  0BD8  160A  118A  240F  120A  158A  	fcall	___awmod
  3690  0BDD  0871               	movf	?___awmod+1,w
  3691  0BDE  01FA               	clrf	___awdiv@dividend+1
  3692  0BDF  07FA               	addwf	___awdiv@dividend+1,f
  3693  0BE0  0870               	movf	?___awmod,w
  3694  0BE1  01F9               	clrf	___awdiv@dividend
  3695  0BE2  07F9               	addwf	___awdiv@dividend,f
  3696  0BE3  160A  118A  24B9  120A  158A  	fcall	___awdiv
  3697  0BE8  0877               	movf	?___awdiv,w
  3698  0BE9  3E09               	addlw	9
  3699  0BEA  160A  118A  22AB  120A  158A  	fcall	___bmul
  3700  0BEF  3E50               	addlw	low (__powers_-__stringbase)
  3701  0BF0  0084               	movwf	4
  3702  0BF1  160A  118A  2000  120A  158A  	fcall	stringdir
  3703  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  3704  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  3705  0BF8  00B0               	movwf	___ftmul@f1
  3706  0BF9  160A  118A  2000  120A  158A  	fcall	stringdir
  3707  0BFE  00B1               	movwf	___ftmul@f1+1
  3708  0BFF  160A  118A  2000  120A  158A  	fcall	stringdir
  3709  0C04  00B2               	movwf	___ftmul@f1+2
  3710  0C05  3003               	movlw	3
  3711  0C06  00C4               	movwf	??_scale+1
  3712  0C07  0844               	movf	??_scale+1,w
  3713  0C08  00A4               	movwf	___bmul@multiplicand
  3714  0C09  3064               	movlw	100
  3715  0C0A  00F7               	movwf	___awdiv@divisor
  3716  0C0B  3000               	movlw	0
  3717  0C0C  00F8               	movwf	___awdiv@divisor+1
  3718  0C0D  0848               	movf	scale@scl,w
  3719  0C0E  00F9               	movwf	___awdiv@dividend
  3720  0C0F  01FA               	clrf	___awdiv@dividend+1
  3721  0C10  1BF9               	btfsc	___awdiv@dividend,7
  3722  0C11  03FA               	decf	___awdiv@dividend+1,f
  3723  0C12  160A  118A  24B9  120A  158A  	fcall	___awdiv
  3724  0C17  0877               	movf	?___awdiv,w
  3725  0C18  3E12               	addlw	18
  3726  0C19  160A  118A  22AB  120A  158A  	fcall	___bmul
  3727  0C1E  3E50               	addlw	low (__powers_-__stringbase)
  3728  0C1F  0084               	movwf	4
  3729  0C20  160A  118A  2000  120A  158A  	fcall	stringdir
  3730  0C25  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0C26  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0C27  00B3               	movwf	___ftmul@f2
  3733  0C28  160A  118A  2000  120A  158A  	fcall	stringdir
  3734  0C2D  00B4               	movwf	___ftmul@f2+1
  3735  0C2E  160A  118A  2000  120A  158A  	fcall	stringdir
  3736  0C33  00B5               	movwf	___ftmul@f2+2
  3737  0C34  160A  118A  272D  120A  158A  	fcall	___ftmul
  3738  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  3739  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  3740  0C3B  0830               	movf	?___ftmul,w
  3741  0C3C  00C5               	movwf	_scale$577
  3742  0C3D  0831               	movf	?___ftmul+1,w
  3743  0C3E  00C6               	movwf	_scale$577+1
  3744  0C3F  0832               	movf	?___ftmul+2,w
  3745  0C40  00C7               	movwf	_scale$577+2
  3746                           
  3747                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3748  0C41  3003               	movlw	3
  3749  0C42  00C3               	movwf	??_scale
  3750  0C43  0843               	movf	??_scale,w
  3751  0C44  00A4               	movwf	___bmul@multiplicand
  3752  0C45  0848               	movf	scale@scl,w
  3753  0C46  00F2               	movwf	___awmod@dividend
  3754  0C47  01F3               	clrf	___awmod@dividend+1
  3755  0C48  1BF2               	btfsc	___awmod@dividend,7
  3756  0C49  03F3               	decf	___awmod@dividend+1,f
  3757  0C4A  300A               	movlw	10
  3758  0C4B  00F0               	movwf	___awmod@divisor
  3759  0C4C  3000               	movlw	0
  3760  0C4D  00F1               	movwf	___awmod@divisor+1
  3761  0C4E  160A  118A  240F  120A  158A  	fcall	___awmod
  3762  0C53  0870               	movf	?___awmod,w
  3763  0C54  160A  118A  22AB  120A  158A  	fcall	___bmul
  3764  0C59  3E50               	addlw	low (__powers_-__stringbase)
  3765  0C5A  0084               	movwf	4
  3766  0C5B  160A  118A  2000  120A  158A  	fcall	stringdir
  3767  0C60  1283               	bcf	3,5	;RP0=0, select bank0
  3768  0C61  1303               	bcf	3,6	;RP1=0, select bank0
  3769  0C62  00B0               	movwf	___ftmul@f1
  3770  0C63  160A  118A  2000  120A  158A  	fcall	stringdir
  3771  0C68  00B1               	movwf	___ftmul@f1+1
  3772  0C69  160A  118A  2000  120A  158A  	fcall	stringdir
  3773  0C6E  00B2               	movwf	___ftmul@f1+2
  3774  0C6F  0845               	movf	_scale$577,w
  3775  0C70  00B3               	movwf	___ftmul@f2
  3776  0C71  0846               	movf	_scale$577+1,w
  3777  0C72  00B4               	movwf	___ftmul@f2+1
  3778  0C73  0847               	movf	_scale$577+2,w
  3779  0C74  00B5               	movwf	___ftmul@f2+2
  3780  0C75  160A  118A  272D   	fcall	___ftmul
  3781  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  3782  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  3783  0C7A  0830               	movf	?___ftmul,w
  3784  0C7B  00C0               	movwf	?_scale
  3785  0C7C  0831               	movf	?___ftmul+1,w
  3786  0C7D  00C1               	movwf	?_scale+1
  3787  0C7E  0832               	movf	?___ftmul+2,w
  3788  0C7F  00C2               	movwf	?_scale+2
  3789  0C80  0008               	return
  3790  0C81                     l1976:	
  3791                           
  3792                           ;doprnt.c: 438: else if(scl > 10)
  3793  0C81  0848               	movf	scale@scl,w
  3794  0C82  3A80               	xorlw	128
  3795  0C83  3E75               	addlw	-139
  3796  0C84  1C03               	skipc
  3797  0C85  2CEF               	goto	l1982
  3798                           
  3799                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  3800  0C86  3003               	movlw	3
  3801  0C87  00C3               	movwf	??_scale
  3802  0C88  0843               	movf	??_scale,w
  3803  0C89  00A4               	movwf	___bmul@multiplicand
  3804  0C8A  0848               	movf	scale@scl,w
  3805  0C8B  00F2               	movwf	___awmod@dividend
  3806  0C8C  01F3               	clrf	___awmod@dividend+1
  3807  0C8D  1BF2               	btfsc	___awmod@dividend,7
  3808  0C8E  03F3               	decf	___awmod@dividend+1,f
  3809  0C8F  300A               	movlw	10
  3810  0C90  00F0               	movwf	___awmod@divisor
  3811  0C91  3000               	movlw	0
  3812  0C92  00F1               	movwf	___awmod@divisor+1
  3813  0C93  160A  118A  240F  120A  158A  	fcall	___awmod
  3814  0C98  0870               	movf	?___awmod,w
  3815  0C99  160A  118A  22AB  120A  158A  	fcall	___bmul
  3816  0C9E  3E50               	addlw	low (__powers_-__stringbase)
  3817  0C9F  0084               	movwf	4
  3818  0CA0  160A  118A  2000  120A  158A  	fcall	stringdir
  3819  0CA5  1283               	bcf	3,5	;RP0=0, select bank0
  3820  0CA6  1303               	bcf	3,6	;RP1=0, select bank0
  3821  0CA7  00B0               	movwf	___ftmul@f1
  3822  0CA8  160A  118A  2000  120A  158A  	fcall	stringdir
  3823  0CAD  00B1               	movwf	___ftmul@f1+1
  3824  0CAE  160A  118A  2000  120A  158A  	fcall	stringdir
  3825  0CB3  00B2               	movwf	___ftmul@f1+2
  3826  0CB4  3003               	movlw	3
  3827  0CB5  00C4               	movwf	??_scale+1
  3828  0CB6  0844               	movf	??_scale+1,w
  3829  0CB7  00A4               	movwf	___bmul@multiplicand
  3830  0CB8  300A               	movlw	10
  3831  0CB9  00F7               	movwf	___awdiv@divisor
  3832  0CBA  3000               	movlw	0
  3833  0CBB  00F8               	movwf	___awdiv@divisor+1
  3834  0CBC  0848               	movf	scale@scl,w
  3835  0CBD  00F9               	movwf	___awdiv@dividend
  3836  0CBE  01FA               	clrf	___awdiv@dividend+1
  3837  0CBF  1BF9               	btfsc	___awdiv@dividend,7
  3838  0CC0  03FA               	decf	___awdiv@dividend+1,f
  3839  0CC1  160A  118A  24B9  120A  158A  	fcall	___awdiv
  3840  0CC6  0877               	movf	?___awdiv,w
  3841  0CC7  3E09               	addlw	9
  3842  0CC8  160A  118A  22AB  120A  158A  	fcall	___bmul
  3843  0CCD  3E50               	addlw	low (__powers_-__stringbase)
  3844  0CCE  0084               	movwf	4
  3845  0CCF  160A  118A  2000  120A  158A  	fcall	stringdir
  3846  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  3847  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  3848  0CD6  00B3               	movwf	___ftmul@f2
  3849  0CD7  160A  118A  2000  120A  158A  	fcall	stringdir
  3850  0CDC  00B4               	movwf	___ftmul@f2+1
  3851  0CDD  160A  118A  2000  120A  158A  	fcall	stringdir
  3852  0CE2  00B5               	movwf	___ftmul@f2+2
  3853  0CE3  160A  118A  272D   	fcall	___ftmul
  3854  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  3855  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  3856  0CE8  0830               	movf	?___ftmul,w
  3857  0CE9  00C0               	movwf	?_scale
  3858  0CEA  0831               	movf	?___ftmul+1,w
  3859  0CEB  00C1               	movwf	?_scale+1
  3860  0CEC  0832               	movf	?___ftmul+2,w
  3861  0CED  00C2               	movwf	?_scale+2
  3862  0CEE  0008               	return
  3863  0CEF                     l1982:	
  3864                           
  3865                           ;doprnt.c: 440: return _powers_[scl];
  3866  0CEF  3003               	movlw	3
  3867  0CF0  00C3               	movwf	??_scale
  3868  0CF1  0843               	movf	??_scale,w
  3869  0CF2  00A4               	movwf	___bmul@multiplicand
  3870  0CF3  0848               	movf	scale@scl,w
  3871  0CF4  160A  118A  22AB  120A  158A  	fcall	___bmul
  3872  0CF9  3E50               	addlw	low (__powers_-__stringbase)
  3873  0CFA  0084               	movwf	4
  3874  0CFB  160A  118A  2000  120A  158A  	fcall	stringdir
  3875  0D00  1283               	bcf	3,5	;RP0=0, select bank0
  3876  0D01  1303               	bcf	3,6	;RP1=0, select bank0
  3877  0D02  00C0               	movwf	?_scale
  3878  0D03  160A  118A  2000  120A  158A  	fcall	stringdir
  3879  0D08  00C1               	movwf	?_scale+1
  3880  0D09  160A  118A  2000   	fcall	stringdir
  3881  0D0C  00C2               	movwf	?_scale+2
  3882  0D0D  0008               	return
  3883  0D0E                     __end_of_scale:	
  3884                           
  3885                           	psect	text4
  3886  00BB                     __ptext4:	
  3887 ;; *************** function _fround *****************
  3888 ;; Defined at:
  3889 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  3890 ;; Parameters:    Size  Location     Type
  3891 ;;  prec            1    wreg     unsigned char 
  3892 ;; Auto vars:     Size  Location     Type
  3893 ;;  prec            1   47[BANK0 ] unsigned char 
  3894 ;; Return value:  Size  Location     Type
  3895 ;;                  3   32[BANK0 ] unsigned char 
  3896 ;; Registers used:
  3897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3898 ;; Tracked objects:
  3899 ;;		On entry : 0/0
  3900 ;;		On exit  : 0/0
  3901 ;;		Unchanged: 0/0
  3902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3903 ;;      Params:         0       3       0       0       0
  3904 ;;      Locals:         0       7       0       0       0
  3905 ;;      Temps:          0       6       0       0       0
  3906 ;;      Totals:         0      16       0       0       0
  3907 ;;Total ram usage:       16 bytes
  3908 ;; Hardware stack levels used:    1
  3909 ;; Hardware stack levels required when called:    2
  3910 ;; This function calls:
  3911 ;;		___awdiv
  3912 ;;		___awmod
  3913 ;;		___bmul
  3914 ;;		___ftmul
  3915 ;; This function is called by:
  3916 ;;		_sprintf
  3917 ;; This function uses a non-reentrant model
  3918 ;;
  3919                           
  3920                           
  3921                           ;psect for function _fround
  3922  00BB                     _fround:	
  3923                           
  3924                           ;incstack = 0
  3925                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3926                           ;fround@prec stored from wreg
  3927  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  3928  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  3929  00BD  00CF               	movwf	fround@prec
  3930                           
  3931                           ;doprnt.c: 413: if(prec>=110)
  3932  00BE  306E               	movlw	110
  3933  00BF  024F               	subwf	fround@prec,w
  3934  00C0  1C03               	skipc
  3935  00C1  299B               	goto	l1934
  3936                           
  3937                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  3938  00C2  3003               	movlw	3
  3939  00C3  00C3               	movwf	??_fround
  3940  00C4  0843               	movf	??_fround,w
  3941  00C5  00A4               	movwf	___bmul@multiplicand
  3942  00C6  300A               	movlw	10
  3943  00C7  00F7               	movwf	___awdiv@divisor
  3944  00C8  3000               	movlw	0
  3945  00C9  00F8               	movwf	___awdiv@divisor+1
  3946  00CA  084F               	movf	fround@prec,w
  3947  00CB  00C4               	movwf	??_fround+1
  3948  00CC  01C5               	clrf	??_fround+2
  3949  00CD  0844               	movf	??_fround+1,w
  3950  00CE  00F2               	movwf	___awmod@dividend
  3951  00CF  0845               	movf	??_fround+2,w
  3952  00D0  00F3               	movwf	___awmod@dividend+1
  3953  00D1  3064               	movlw	100
  3954  00D2  00F0               	movwf	___awmod@divisor
  3955  00D3  3000               	movlw	0
  3956  00D4  00F1               	movwf	___awmod@divisor+1
  3957  00D5  160A  118A  240F  120A  118A  	fcall	___awmod
  3958  00DA  0871               	movf	?___awmod+1,w
  3959  00DB  01FA               	clrf	___awdiv@dividend+1
  3960  00DC  07FA               	addwf	___awdiv@dividend+1,f
  3961  00DD  0870               	movf	?___awmod,w
  3962  00DE  01F9               	clrf	___awdiv@dividend
  3963  00DF  07F9               	addwf	___awdiv@dividend,f
  3964  00E0  160A  118A  24B9  120A  118A  	fcall	___awdiv
  3965  00E5  0877               	movf	?___awdiv,w
  3966  00E6  3E09               	addlw	9
  3967  00E7  160A  118A  22AB  120A  118A  	fcall	___bmul
  3968  00EC  3E29               	addlw	low (__npowers_-__stringbase)
  3969  00ED  0084               	movwf	4
  3970  00EE  160A  118A  2000  120A  118A  	fcall	stringdir
  3971  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  3972  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  3973  00F5  00B0               	movwf	___ftmul@f1
  3974  00F6  160A  118A  2000  120A  118A  	fcall	stringdir
  3975  00FB  00B1               	movwf	___ftmul@f1+1
  3976  00FC  160A  118A  2000  120A  118A  	fcall	stringdir
  3977  0101  00B2               	movwf	___ftmul@f1+2
  3978  0102  3003               	movlw	3
  3979  0103  00C6               	movwf	??_fround+3
  3980  0104  0846               	movf	??_fround+3,w
  3981  0105  00A4               	movwf	___bmul@multiplicand
  3982  0106  3064               	movlw	100
  3983  0107  00F7               	movwf	___awdiv@divisor
  3984  0108  3000               	movlw	0
  3985  0109  00F8               	movwf	___awdiv@divisor+1
  3986  010A  084F               	movf	fround@prec,w
  3987  010B  00C7               	movwf	??_fround+4
  3988  010C  01C8               	clrf	??_fround+5
  3989  010D  0847               	movf	??_fround+4,w
  3990  010E  00F9               	movwf	___awdiv@dividend
  3991  010F  0848               	movf	??_fround+5,w
  3992  0110  00FA               	movwf	___awdiv@dividend+1
  3993  0111  160A  118A  24B9  120A  118A  	fcall	___awdiv
  3994  0116  0877               	movf	?___awdiv,w
  3995  0117  3E12               	addlw	18
  3996  0118  160A  118A  22AB  120A  118A  	fcall	___bmul
  3997  011D  3E29               	addlw	low (__npowers_-__stringbase)
  3998  011E  0084               	movwf	4
  3999  011F  160A  118A  2000  120A  118A  	fcall	stringdir
  4000  0124  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0125  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0126  00B3               	movwf	___ftmul@f2
  4003  0127  160A  118A  2000  120A  118A  	fcall	stringdir
  4004  012C  00B4               	movwf	___ftmul@f2+1
  4005  012D  160A  118A  2000  120A  118A  	fcall	stringdir
  4006  0132  00B5               	movwf	___ftmul@f2+2
  4007  0133  160A  118A  272D  120A  118A  	fcall	___ftmul
  4008  0138  1283               	bcf	3,5	;RP0=0, select bank0
  4009  0139  1303               	bcf	3,6	;RP1=0, select bank0
  4010  013A  0830               	movf	?___ftmul,w
  4011  013B  00CC               	movwf	_fround$575
  4012  013C  0831               	movf	?___ftmul+1,w
  4013  013D  00CD               	movwf	_fround$575+1
  4014  013E  0832               	movf	?___ftmul+2,w
  4015  013F  00CE               	movwf	_fround$575+2
  4016                           
  4017                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4018  0140  3003               	movlw	3
  4019  0141  00C3               	movwf	??_fround
  4020  0142  0843               	movf	??_fround,w
  4021  0143  00A4               	movwf	___bmul@multiplicand
  4022  0144  084F               	movf	fround@prec,w
  4023  0145  00C4               	movwf	??_fround+1
  4024  0146  01C5               	clrf	??_fround+2
  4025  0147  0844               	movf	??_fround+1,w
  4026  0148  00F2               	movwf	___awmod@dividend
  4027  0149  0845               	movf	??_fround+2,w
  4028  014A  00F3               	movwf	___awmod@dividend+1
  4029  014B  300A               	movlw	10
  4030  014C  00F0               	movwf	___awmod@divisor
  4031  014D  3000               	movlw	0
  4032  014E  00F1               	movwf	___awmod@divisor+1
  4033  014F  160A  118A  240F  120A  118A  	fcall	___awmod
  4034  0154  0870               	movf	?___awmod,w
  4035  0155  160A  118A  22AB  120A  118A  	fcall	___bmul
  4036  015A  3E29               	addlw	low (__npowers_-__stringbase)
  4037  015B  0084               	movwf	4
  4038  015C  160A  118A  2000  120A  118A  	fcall	stringdir
  4039  0161  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0162  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0163  00B0               	movwf	___ftmul@f1
  4042  0164  160A  118A  2000  120A  118A  	fcall	stringdir
  4043  0169  00B1               	movwf	___ftmul@f1+1
  4044  016A  160A  118A  2000  120A  118A  	fcall	stringdir
  4045  016F  00B2               	movwf	___ftmul@f1+2
  4046  0170  084C               	movf	_fround$575,w
  4047  0171  00B3               	movwf	___ftmul@f2
  4048  0172  084D               	movf	_fround$575+1,w
  4049  0173  00B4               	movwf	___ftmul@f2+1
  4050  0174  084E               	movf	_fround$575+2,w
  4051  0175  00B5               	movwf	___ftmul@f2+2
  4052  0176  160A  118A  272D  120A  118A  	fcall	___ftmul
  4053  017B  1283               	bcf	3,5	;RP0=0, select bank0
  4054  017C  1303               	bcf	3,6	;RP1=0, select bank0
  4055  017D  0830               	movf	?___ftmul,w
  4056  017E  00C9               	movwf	_fround$576
  4057  017F  0831               	movf	?___ftmul+1,w
  4058  0180  00CA               	movwf	_fround$576+1
  4059  0181  0832               	movf	?___ftmul+2,w
  4060  0182  00CB               	movwf	_fround$576+2
  4061                           
  4062                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4063  0183  3000               	movlw	0
  4064  0184  00B0               	movwf	___ftmul@f1
  4065  0185  3000               	movlw	0
  4066  0186  00B1               	movwf	___ftmul@f1+1
  4067  0187  303F               	movlw	63
  4068  0188  00B2               	movwf	___ftmul@f1+2
  4069  0189  0849               	movf	_fround$576,w
  4070  018A  00B3               	movwf	___ftmul@f2
  4071  018B  084A               	movf	_fround$576+1,w
  4072  018C  00B4               	movwf	___ftmul@f2+1
  4073  018D  084B               	movf	_fround$576+2,w
  4074  018E  00B5               	movwf	___ftmul@f2+2
  4075  018F  160A  118A  272D   	fcall	___ftmul
  4076  0192  1283               	bcf	3,5	;RP0=0, select bank0
  4077  0193  1303               	bcf	3,6	;RP1=0, select bank0
  4078  0194  0830               	movf	?___ftmul,w
  4079  0195  00C0               	movwf	?_fround
  4080  0196  0831               	movf	?___ftmul+1,w
  4081  0197  00C1               	movwf	?_fround+1
  4082  0198  0832               	movf	?___ftmul+2,w
  4083  0199  00C2               	movwf	?_fround+2
  4084  019A  0008               	return
  4085  019B                     l1934:	
  4086                           
  4087                           ;doprnt.c: 415: else if(prec > 10)
  4088  019B  300B               	movlw	11
  4089  019C  024F               	subwf	fround@prec,w
  4090  019D  1C03               	skipc
  4091  019E  2A25               	goto	l1942
  4092                           
  4093                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4094  019F  3003               	movlw	3
  4095  01A0  00C3               	movwf	??_fround
  4096  01A1  0843               	movf	??_fround,w
  4097  01A2  00A4               	movwf	___bmul@multiplicand
  4098  01A3  084F               	movf	fround@prec,w
  4099  01A4  00C4               	movwf	??_fround+1
  4100  01A5  01C5               	clrf	??_fround+2
  4101  01A6  0844               	movf	??_fround+1,w
  4102  01A7  00F2               	movwf	___awmod@dividend
  4103  01A8  0845               	movf	??_fround+2,w
  4104  01A9  00F3               	movwf	___awmod@dividend+1
  4105  01AA  300A               	movlw	10
  4106  01AB  00F0               	movwf	___awmod@divisor
  4107  01AC  3000               	movlw	0
  4108  01AD  00F1               	movwf	___awmod@divisor+1
  4109  01AE  160A  118A  240F  120A  118A  	fcall	___awmod
  4110  01B3  0870               	movf	?___awmod,w
  4111  01B4  160A  118A  22AB  120A  118A  	fcall	___bmul
  4112  01B9  3E29               	addlw	low (__npowers_-__stringbase)
  4113  01BA  0084               	movwf	4
  4114  01BB  160A  118A  2000  120A  118A  	fcall	stringdir
  4115  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  4116  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  4117  01C2  00B0               	movwf	___ftmul@f1
  4118  01C3  160A  118A  2000  120A  118A  	fcall	stringdir
  4119  01C8  00B1               	movwf	___ftmul@f1+1
  4120  01C9  160A  118A  2000  120A  118A  	fcall	stringdir
  4121  01CE  00B2               	movwf	___ftmul@f1+2
  4122  01CF  3003               	movlw	3
  4123  01D0  00C6               	movwf	??_fround+3
  4124  01D1  0846               	movf	??_fround+3,w
  4125  01D2  00A4               	movwf	___bmul@multiplicand
  4126  01D3  300A               	movlw	10
  4127  01D4  00F7               	movwf	___awdiv@divisor
  4128  01D5  3000               	movlw	0
  4129  01D6  00F8               	movwf	___awdiv@divisor+1
  4130  01D7  084F               	movf	fround@prec,w
  4131  01D8  00C7               	movwf	??_fround+4
  4132  01D9  01C8               	clrf	??_fround+5
  4133  01DA  0847               	movf	??_fround+4,w
  4134  01DB  00F9               	movwf	___awdiv@dividend
  4135  01DC  0848               	movf	??_fround+5,w
  4136  01DD  00FA               	movwf	___awdiv@dividend+1
  4137  01DE  160A  118A  24B9  120A  118A  	fcall	___awdiv
  4138  01E3  0877               	movf	?___awdiv,w
  4139  01E4  3E09               	addlw	9
  4140  01E5  160A  118A  22AB  120A  118A  	fcall	___bmul
  4141  01EA  3E29               	addlw	low (__npowers_-__stringbase)
  4142  01EB  0084               	movwf	4
  4143  01EC  160A  118A  2000  120A  118A  	fcall	stringdir
  4144  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  4145  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  4146  01F3  00B3               	movwf	___ftmul@f2
  4147  01F4  160A  118A  2000  120A  118A  	fcall	stringdir
  4148  01F9  00B4               	movwf	___ftmul@f2+1
  4149  01FA  160A  118A  2000  120A  118A  	fcall	stringdir
  4150  01FF  00B5               	movwf	___ftmul@f2+2
  4151  0200  160A  118A  272D  120A  118A  	fcall	___ftmul
  4152  0205  1283               	bcf	3,5	;RP0=0, select bank0
  4153  0206  1303               	bcf	3,6	;RP1=0, select bank0
  4154  0207  0830               	movf	?___ftmul,w
  4155  0208  00CC               	movwf	_fround$575
  4156  0209  0831               	movf	?___ftmul+1,w
  4157  020A  00CD               	movwf	_fround$575+1
  4158  020B  0832               	movf	?___ftmul+2,w
  4159  020C  00CE               	movwf	_fround$575+2
  4160                           
  4161                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4162  020D  3000               	movlw	0
  4163  020E  00B0               	movwf	___ftmul@f1
  4164  020F  3000               	movlw	0
  4165  0210  00B1               	movwf	___ftmul@f1+1
  4166  0211  303F               	movlw	63
  4167  0212  00B2               	movwf	___ftmul@f1+2
  4168  0213  084C               	movf	_fround$575,w
  4169  0214  00B3               	movwf	___ftmul@f2
  4170  0215  084D               	movf	_fround$575+1,w
  4171  0216  00B4               	movwf	___ftmul@f2+1
  4172  0217  084E               	movf	_fround$575+2,w
  4173  0218  00B5               	movwf	___ftmul@f2+2
  4174  0219  160A  118A  272D   	fcall	___ftmul
  4175  021C  1283               	bcf	3,5	;RP0=0, select bank0
  4176  021D  1303               	bcf	3,6	;RP1=0, select bank0
  4177  021E  0830               	movf	?___ftmul,w
  4178  021F  00C0               	movwf	?_fround
  4179  0220  0831               	movf	?___ftmul+1,w
  4180  0221  00C1               	movwf	?_fround+1
  4181  0222  0832               	movf	?___ftmul+2,w
  4182  0223  00C2               	movwf	?_fround+2
  4183  0224  0008               	return
  4184  0225                     l1942:	
  4185                           
  4186                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4187  0225  3000               	movlw	0
  4188  0226  00B0               	movwf	___ftmul@f1
  4189  0227  3000               	movlw	0
  4190  0228  00B1               	movwf	___ftmul@f1+1
  4191  0229  303F               	movlw	63
  4192  022A  00B2               	movwf	___ftmul@f1+2
  4193  022B  3003               	movlw	3
  4194  022C  00C3               	movwf	??_fround
  4195  022D  0843               	movf	??_fround,w
  4196  022E  00A4               	movwf	___bmul@multiplicand
  4197  022F  084F               	movf	fround@prec,w
  4198  0230  160A  118A  22AB  120A  118A  	fcall	___bmul
  4199  0235  3E29               	addlw	low (__npowers_-__stringbase)
  4200  0236  0084               	movwf	4
  4201  0237  160A  118A  2000  120A  118A  	fcall	stringdir
  4202  023C  1283               	bcf	3,5	;RP0=0, select bank0
  4203  023D  1303               	bcf	3,6	;RP1=0, select bank0
  4204  023E  00B3               	movwf	___ftmul@f2
  4205  023F  160A  118A  2000  120A  118A  	fcall	stringdir
  4206  0244  00B4               	movwf	___ftmul@f2+1
  4207  0245  160A  118A  2000  120A  118A  	fcall	stringdir
  4208  024A  00B5               	movwf	___ftmul@f2+2
  4209  024B  160A  118A  272D   	fcall	___ftmul
  4210  024E  1283               	bcf	3,5	;RP0=0, select bank0
  4211  024F  1303               	bcf	3,6	;RP1=0, select bank0
  4212  0250  0830               	movf	?___ftmul,w
  4213  0251  00C0               	movwf	?_fround
  4214  0252  0831               	movf	?___ftmul+1,w
  4215  0253  00C1               	movwf	?_fround+1
  4216  0254  0832               	movf	?___ftmul+2,w
  4217  0255  00C2               	movwf	?_fround+2
  4218  0256  0008               	return
  4219  0257                     __end_of_fround:	
  4220                           
  4221                           	psect	text5
  4222  172D                     __ptext5:	
  4223 ;; *************** function ___ftmul *****************
  4224 ;; Defined at:
  4225 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  4226 ;; Parameters:    Size  Location     Type
  4227 ;;  f1              3   16[BANK0 ] float 
  4228 ;;  f2              3   19[BANK0 ] float 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  4231 ;;  sign            1   31[BANK0 ] unsigned char 
  4232 ;;  cntr            1   30[BANK0 ] unsigned char 
  4233 ;;  exp             1   26[BANK0 ] unsigned char 
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  3   16[BANK0 ] float 
  4236 ;; Registers used:
  4237 ;;		wreg, status,2, status,0, pclath, cstack
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4243 ;;      Params:         0       6       0       0       0
  4244 ;;      Locals:         0       6       0       0       0
  4245 ;;      Temps:          0       4       0       0       0
  4246 ;;      Totals:         0      16       0       0       0
  4247 ;;Total ram usage:       16 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:    1
  4250 ;; This function calls:
  4251 ;;		___ftpack
  4252 ;; This function is called by:
  4253 ;;		_main
  4254 ;;		_fround
  4255 ;;		_scale
  4256 ;;		_sprintf
  4257 ;; This function uses a non-reentrant model
  4258 ;;
  4259                           
  4260                           
  4261                           ;psect for function ___ftmul
  4262  172D                     ___ftmul:	
  4263                           
  4264                           ;incstack = 0
  4265                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  4266  172D  1283               	bcf	3,5	;RP0=0, select bank0
  4267  172E  1303               	bcf	3,6	;RP1=0, select bank0
  4268  172F  0830               	movf	___ftmul@f1,w
  4269  1730  00B6               	movwf	??___ftmul
  4270  1731  0831               	movf	___ftmul@f1+1,w
  4271  1732  00B7               	movwf	??___ftmul+1
  4272  1733  0832               	movf	___ftmul@f1+2,w
  4273  1734  00B8               	movwf	??___ftmul+2
  4274  1735  1003               	clrc
  4275  1736  0D37               	rlf	??___ftmul+1,w
  4276  1737  0D38               	rlf	??___ftmul+2,w
  4277  1738  00B9               	movwf	??___ftmul+3
  4278  1739  0839               	movf	??___ftmul+3,w
  4279  173A  00BA               	movwf	___ftmul@exp
  4280  173B  08BA               	movf	___ftmul@exp,f
  4281  173C  1D03               	skipz
  4282  173D  2F45               	goto	l1862
  4283  173E  3000               	movlw	0
  4284  173F  00B0               	movwf	?___ftmul
  4285  1740  3000               	movlw	0
  4286  1741  00B1               	movwf	?___ftmul+1
  4287  1742  3000               	movlw	0
  4288  1743  00B2               	movwf	?___ftmul+2
  4289  1744  0008               	return
  4290  1745                     l1862:	
  4291  1745  0833               	movf	___ftmul@f2,w
  4292  1746  00B6               	movwf	??___ftmul
  4293  1747  0834               	movf	___ftmul@f2+1,w
  4294  1748  00B7               	movwf	??___ftmul+1
  4295  1749  0835               	movf	___ftmul@f2+2,w
  4296  174A  00B8               	movwf	??___ftmul+2
  4297  174B  1003               	clrc
  4298  174C  0D37               	rlf	??___ftmul+1,w
  4299  174D  0D38               	rlf	??___ftmul+2,w
  4300  174E  00B9               	movwf	??___ftmul+3
  4301  174F  0839               	movf	??___ftmul+3,w
  4302  1750  00BF               	movwf	___ftmul@sign
  4303  1751  08BF               	movf	___ftmul@sign,f
  4304  1752  1D03               	skipz
  4305  1753  2F5B               	goto	l1868
  4306  1754  3000               	movlw	0
  4307  1755  00B0               	movwf	?___ftmul
  4308  1756  3000               	movlw	0
  4309  1757  00B1               	movwf	?___ftmul+1
  4310  1758  3000               	movlw	0
  4311  1759  00B2               	movwf	?___ftmul+2
  4312  175A  0008               	return
  4313  175B                     l1868:	
  4314  175B  083F               	movf	___ftmul@sign,w
  4315  175C  3E7B               	addlw	123
  4316  175D  00B6               	movwf	??___ftmul
  4317  175E  0836               	movf	??___ftmul,w
  4318  175F  07BA               	addwf	___ftmul@exp,f
  4319  1760  0830               	movf	___ftmul@f1,w
  4320  1761  00B6               	movwf	??___ftmul
  4321  1762  0831               	movf	___ftmul@f1+1,w
  4322  1763  00B7               	movwf	??___ftmul+1
  4323  1764  0832               	movf	___ftmul@f1+2,w
  4324  1765  00B8               	movwf	??___ftmul+2
  4325  1766  3010               	movlw	16
  4326  1767                     u2495:	
  4327  1767  1003               	clrc
  4328  1768  0CB8               	rrf	??___ftmul+2,f
  4329  1769  0CB7               	rrf	??___ftmul+1,f
  4330  176A  0CB6               	rrf	??___ftmul,f
  4331  176B  3EFF               	addlw	-1
  4332  176C  1D03               	skipz
  4333  176D  2F67               	goto	u2495
  4334  176E  0836               	movf	??___ftmul,w
  4335  176F  00B9               	movwf	??___ftmul+3
  4336  1770  0839               	movf	??___ftmul+3,w
  4337  1771  00BF               	movwf	___ftmul@sign
  4338  1772  0833               	movf	___ftmul@f2,w
  4339  1773  00B6               	movwf	??___ftmul
  4340  1774  0834               	movf	___ftmul@f2+1,w
  4341  1775  00B7               	movwf	??___ftmul+1
  4342  1776  0835               	movf	___ftmul@f2+2,w
  4343  1777  00B8               	movwf	??___ftmul+2
  4344  1778  3010               	movlw	16
  4345  1779                     u2505:	
  4346  1779  1003               	clrc
  4347  177A  0CB8               	rrf	??___ftmul+2,f
  4348  177B  0CB7               	rrf	??___ftmul+1,f
  4349  177C  0CB6               	rrf	??___ftmul,f
  4350  177D  3EFF               	addlw	-1
  4351  177E  1D03               	skipz
  4352  177F  2F79               	goto	u2505
  4353  1780  0836               	movf	??___ftmul,w
  4354  1781  00B9               	movwf	??___ftmul+3
  4355  1782  0839               	movf	??___ftmul+3,w
  4356  1783  06BF               	xorwf	___ftmul@sign,f
  4357  1784  3080               	movlw	128
  4358  1785  00B6               	movwf	??___ftmul
  4359  1786  0836               	movf	??___ftmul,w
  4360  1787  05BF               	andwf	___ftmul@sign,f
  4361  1788  17B1               	bsf	___ftmul@f1+1,7
  4362  1789  17B4               	bsf	___ftmul@f2+1,7
  4363  178A  30FF               	movlw	255
  4364  178B  05B3               	andwf	___ftmul@f2,f
  4365  178C  30FF               	movlw	255
  4366  178D  05B4               	andwf	___ftmul@f2+1,f
  4367  178E  3000               	movlw	0
  4368  178F  05B5               	andwf	___ftmul@f2+2,f
  4369  1790  3000               	movlw	0
  4370  1791  00BB               	movwf	___ftmul@f3_as_product
  4371  1792  3000               	movlw	0
  4372  1793  00BC               	movwf	___ftmul@f3_as_product+1
  4373  1794  3000               	movlw	0
  4374  1795  00BD               	movwf	___ftmul@f3_as_product+2
  4375  1796  3007               	movlw	7
  4376  1797  00B6               	movwf	??___ftmul
  4377  1798  0836               	movf	??___ftmul,w
  4378  1799  00BE               	movwf	___ftmul@cntr
  4379  179A                     l1880:	
  4380  179A  1C30               	btfss	___ftmul@f1,0
  4381  179B  2FAA               	goto	l1884
  4382  179C  0833               	movf	___ftmul@f2,w
  4383  179D  07BB               	addwf	___ftmul@f3_as_product,f
  4384  179E  0834               	movf	___ftmul@f2+1,w
  4385  179F  1103               	clrz
  4386  17A0  1803               	skipnc
  4387  17A1  0A34               	incf	___ftmul@f2+1,w
  4388  17A2  1D03               	btfss	3,2
  4389  17A3  07BC               	addwf	___ftmul@f3_as_product+1,f
  4390  17A4  0835               	movf	___ftmul@f2+2,w
  4391  17A5  1103               	clrz
  4392  17A6  1803               	skipnc
  4393  17A7  0A35               	incf	___ftmul@f2+2,w
  4394  17A8  1D03               	btfss	3,2
  4395  17A9  07BD               	addwf	___ftmul@f3_as_product+2,f
  4396  17AA                     l1884:	
  4397  17AA  3001               	movlw	1
  4398  17AB                     u2535:	
  4399  17AB  1003               	clrc
  4400  17AC  0CB2               	rrf	___ftmul@f1+2,f
  4401  17AD  0CB1               	rrf	___ftmul@f1+1,f
  4402  17AE  0CB0               	rrf	___ftmul@f1,f
  4403  17AF  3EFF               	addlw	-1
  4404  17B0  1D03               	skipz
  4405  17B1  2FAB               	goto	u2535
  4406  17B2  3001               	movlw	1
  4407  17B3                     u2545:	
  4408  17B3  1003               	clrc
  4409  17B4  0DB3               	rlf	___ftmul@f2,f
  4410  17B5  0DB4               	rlf	___ftmul@f2+1,f
  4411  17B6  0DB5               	rlf	___ftmul@f2+2,f
  4412  17B7  3EFF               	addlw	-1
  4413  17B8  1D03               	skipz
  4414  17B9  2FB3               	goto	u2545
  4415  17BA  3001               	movlw	1
  4416  17BB  02BE               	subwf	___ftmul@cntr,f
  4417  17BC  1D03               	btfss	3,2
  4418  17BD  2F9A               	goto	l1880
  4419  17BE  3009               	movlw	9
  4420  17BF  00B6               	movwf	??___ftmul
  4421  17C0  0836               	movf	??___ftmul,w
  4422  17C1  00BE               	movwf	___ftmul@cntr
  4423  17C2                     l1892:	
  4424  17C2  1C30               	btfss	___ftmul@f1,0
  4425  17C3  2FD2               	goto	l1896
  4426  17C4  0833               	movf	___ftmul@f2,w
  4427  17C5  07BB               	addwf	___ftmul@f3_as_product,f
  4428  17C6  0834               	movf	___ftmul@f2+1,w
  4429  17C7  1103               	clrz
  4430  17C8  1803               	skipnc
  4431  17C9  0A34               	incf	___ftmul@f2+1,w
  4432  17CA  1D03               	btfss	3,2
  4433  17CB  07BC               	addwf	___ftmul@f3_as_product+1,f
  4434  17CC  0835               	movf	___ftmul@f2+2,w
  4435  17CD  1103               	clrz
  4436  17CE  1803               	skipnc
  4437  17CF  0A35               	incf	___ftmul@f2+2,w
  4438  17D0  1D03               	btfss	3,2
  4439  17D1  07BD               	addwf	___ftmul@f3_as_product+2,f
  4440  17D2                     l1896:	
  4441  17D2  3001               	movlw	1
  4442  17D3                     u2585:	
  4443  17D3  1003               	clrc
  4444  17D4  0CB2               	rrf	___ftmul@f1+2,f
  4445  17D5  0CB1               	rrf	___ftmul@f1+1,f
  4446  17D6  0CB0               	rrf	___ftmul@f1,f
  4447  17D7  3EFF               	addlw	-1
  4448  17D8  1D03               	skipz
  4449  17D9  2FD3               	goto	u2585
  4450  17DA  3001               	movlw	1
  4451  17DB                     u2595:	
  4452  17DB  1003               	clrc
  4453  17DC  0CBD               	rrf	___ftmul@f3_as_product+2,f
  4454  17DD  0CBC               	rrf	___ftmul@f3_as_product+1,f
  4455  17DE  0CBB               	rrf	___ftmul@f3_as_product,f
  4456  17DF  3EFF               	addlw	-1
  4457  17E0  1D03               	skipz
  4458  17E1  2FDB               	goto	u2595
  4459  17E2  3001               	movlw	1
  4460  17E3  02BE               	subwf	___ftmul@cntr,f
  4461  17E4  1D03               	btfss	3,2
  4462  17E5  2FC2               	goto	l1892
  4463  17E6  083B               	movf	___ftmul@f3_as_product,w
  4464  17E7  00F0               	movwf	___ftpack@arg
  4465  17E8  083C               	movf	___ftmul@f3_as_product+1,w
  4466  17E9  00F1               	movwf	___ftpack@arg+1
  4467  17EA  083D               	movf	___ftmul@f3_as_product+2,w
  4468  17EB  00F2               	movwf	___ftpack@arg+2
  4469  17EC  083A               	movf	___ftmul@exp,w
  4470  17ED  00B6               	movwf	??___ftmul
  4471  17EE  0836               	movf	??___ftmul,w
  4472  17EF  00F3               	movwf	___ftpack@exp
  4473  17F0  083F               	movf	___ftmul@sign,w
  4474  17F1  00B7               	movwf	??___ftmul+1
  4475  17F2  0837               	movf	??___ftmul+1,w
  4476  17F3  00F4               	movwf	___ftpack@sign
  4477  17F4  160A  118A  2574   	fcall	___ftpack
  4478  17F7  0870               	movf	?___ftpack,w
  4479  17F8  1283               	bcf	3,5	;RP0=0, select bank0
  4480  17F9  1303               	bcf	3,6	;RP1=0, select bank0
  4481  17FA  00B0               	movwf	?___ftmul
  4482  17FB  0871               	movf	?___ftpack+1,w
  4483  17FC  00B1               	movwf	?___ftmul+1
  4484  17FD  0872               	movf	?___ftpack+2,w
  4485  17FE  00B2               	movwf	?___ftmul+2
  4486  17FF  0008               	return
  4487  1800                     __end_of___ftmul:	
  4488                           
  4489                           	psect	text6
  4490  12AB                     __ptext6:	
  4491 ;; *************** function ___bmul *****************
  4492 ;; Defined at:
  4493 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul8.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  multiplier      1    wreg     unsigned char 
  4496 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4497 ;; Auto vars:     Size  Location     Type
  4498 ;;  multiplier      1    6[BANK0 ] unsigned char 
  4499 ;;  product         1    5[BANK0 ] unsigned char 
  4500 ;; Return value:  Size  Location     Type
  4501 ;;                  1    wreg      unsigned char 
  4502 ;; Registers used:
  4503 ;;		wreg, status,2, status,0
  4504 ;; Tracked objects:
  4505 ;;		On entry : 0/0
  4506 ;;		On exit  : 0/0
  4507 ;;		Unchanged: 0/0
  4508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4509 ;;      Params:         0       1       0       0       0
  4510 ;;      Locals:         0       2       0       0       0
  4511 ;;      Temps:          1       0       0       0       0
  4512 ;;      Totals:         1       3       0       0       0
  4513 ;;Total ram usage:        4 bytes
  4514 ;; Hardware stack levels used:    1
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_fround
  4519 ;;		_scale
  4520 ;; This function uses a non-reentrant model
  4521 ;;
  4522                           
  4523                           
  4524                           ;psect for function ___bmul
  4525  12AB                     ___bmul:	
  4526                           
  4527                           ;incstack = 0
  4528                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4529                           ;___bmul@multiplier stored from wreg
  4530  12AB  1283               	bcf	3,5	;RP0=0, select bank0
  4531  12AC  1303               	bcf	3,6	;RP1=0, select bank0
  4532  12AD  00A6               	movwf	___bmul@multiplier
  4533  12AE  01A5               	clrf	___bmul@product
  4534  12AF                     l1688:	
  4535  12AF  1C26               	btfss	___bmul@multiplier,0
  4536  12B0  2AB5               	goto	l1692
  4537  12B1  0824               	movf	___bmul@multiplicand,w
  4538  12B2  00FC               	movwf	??___bmul
  4539  12B3  087C               	movf	??___bmul,w
  4540  12B4  07A5               	addwf	___bmul@product,f
  4541  12B5                     l1692:	
  4542  12B5  1003               	clrc
  4543  12B6  0DA4               	rlf	___bmul@multiplicand,f
  4544  12B7  1003               	clrc
  4545  12B8  0CA6               	rrf	___bmul@multiplier,f
  4546  12B9  08A6               	movf	___bmul@multiplier,f
  4547  12BA  1D03               	skipz
  4548  12BB  2AAF               	goto	l1688
  4549  12BC  0825               	movf	___bmul@product,w
  4550  12BD  0008               	return
  4551  12BE                     __end_of___bmul:	
  4552                           
  4553                           	psect	text7
  4554  140F                     __ptext7:	
  4555 ;; *************** function ___awmod *****************
  4556 ;; Defined at:
  4557 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  divisor         2    0[COMMON] int 
  4560 ;;  dividend        2    2[COMMON] int 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  sign            1    6[COMMON] unsigned char 
  4563 ;;  counter         1    5[COMMON] unsigned char 
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  2    0[COMMON] int 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4573 ;;      Params:         4       0       0       0       0
  4574 ;;      Locals:         2       0       0       0       0
  4575 ;;      Temps:          1       0       0       0       0
  4576 ;;      Totals:         7       0       0       0       0
  4577 ;;Total ram usage:        7 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; This function calls:
  4580 ;;		Nothing
  4581 ;; This function is called by:
  4582 ;;		_fround
  4583 ;;		_scale
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           
  4588                           ;psect for function ___awmod
  4589  140F                     ___awmod:	
  4590                           
  4591                           ;incstack = 0
  4592                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4593  140F  01F6               	clrf	___awmod@sign
  4594  1410  1FF3               	btfss	___awmod@dividend+1,7
  4595  1411  2C19               	goto	l1754
  4596  1412  09F2               	comf	___awmod@dividend,f
  4597  1413  09F3               	comf	___awmod@dividend+1,f
  4598  1414  0AF2               	incf	___awmod@dividend,f
  4599  1415  1903               	skipnz
  4600  1416  0AF3               	incf	___awmod@dividend+1,f
  4601  1417  01F6               	clrf	___awmod@sign
  4602  1418  0AF6               	incf	___awmod@sign,f
  4603  1419                     l1754:	
  4604  1419  1FF1               	btfss	___awmod@divisor+1,7
  4605  141A  2C20               	goto	l1758
  4606  141B  09F0               	comf	___awmod@divisor,f
  4607  141C  09F1               	comf	___awmod@divisor+1,f
  4608  141D  0AF0               	incf	___awmod@divisor,f
  4609  141E  1903               	skipnz
  4610  141F  0AF1               	incf	___awmod@divisor+1,f
  4611  1420                     l1758:	
  4612  1420  0871               	movf	___awmod@divisor+1,w
  4613  1421  0470               	iorwf	___awmod@divisor,w
  4614  1422  1903               	skipnz
  4615  1423  2C4D               	goto	l1776
  4616  1424  01F5               	clrf	___awmod@counter
  4617  1425  0AF5               	incf	___awmod@counter,f
  4618  1426                     l1766:	
  4619  1426  1BF1               	btfsc	___awmod@divisor+1,7
  4620  1427  2C34               	goto	l1768
  4621  1428  3001               	movlw	1
  4622  1429                     u2175:	
  4623  1429  1003               	clrc
  4624  142A  0DF0               	rlf	___awmod@divisor,f
  4625  142B  0DF1               	rlf	___awmod@divisor+1,f
  4626  142C  3EFF               	addlw	-1
  4627  142D  1D03               	skipz
  4628  142E  2C29               	goto	u2175
  4629  142F  3001               	movlw	1
  4630  1430  00F4               	movwf	??___awmod
  4631  1431  0874               	movf	??___awmod,w
  4632  1432  07F5               	addwf	___awmod@counter,f
  4633  1433  2C26               	goto	l1766
  4634  1434                     l1768:	
  4635  1434  0871               	movf	___awmod@divisor+1,w
  4636  1435  0273               	subwf	___awmod@dividend+1,w
  4637  1436  1D03               	skipz
  4638  1437  2C3A               	goto	u2195
  4639  1438  0870               	movf	___awmod@divisor,w
  4640  1439  0272               	subwf	___awmod@dividend,w
  4641  143A                     u2195:	
  4642  143A  1C03               	skipc
  4643  143B  2C42               	goto	l1772
  4644  143C  0870               	movf	___awmod@divisor,w
  4645  143D  02F2               	subwf	___awmod@dividend,f
  4646  143E  0871               	movf	___awmod@divisor+1,w
  4647  143F  1C03               	skipc
  4648  1440  03F3               	decf	___awmod@dividend+1,f
  4649  1441  02F3               	subwf	___awmod@dividend+1,f
  4650  1442                     l1772:	
  4651  1442  3001               	movlw	1
  4652  1443                     u2205:	
  4653  1443  1003               	clrc
  4654  1444  0CF1               	rrf	___awmod@divisor+1,f
  4655  1445  0CF0               	rrf	___awmod@divisor,f
  4656  1446  3EFF               	addlw	-1
  4657  1447  1D03               	skipz
  4658  1448  2C43               	goto	u2205
  4659  1449  3001               	movlw	1
  4660  144A  02F5               	subwf	___awmod@counter,f
  4661  144B  1D03               	btfss	3,2
  4662  144C  2C34               	goto	l1768
  4663  144D                     l1776:	
  4664  144D  0876               	movf	___awmod@sign,w
  4665  144E  1903               	btfsc	3,2
  4666  144F  2C55               	goto	l1780
  4667  1450  09F2               	comf	___awmod@dividend,f
  4668  1451  09F3               	comf	___awmod@dividend+1,f
  4669  1452  0AF2               	incf	___awmod@dividend,f
  4670  1453  1903               	skipnz
  4671  1454  0AF3               	incf	___awmod@dividend+1,f
  4672  1455                     l1780:	
  4673  1455  0873               	movf	___awmod@dividend+1,w
  4674  1456  01F1               	clrf	?___awmod+1
  4675  1457  07F1               	addwf	?___awmod+1,f
  4676  1458  0872               	movf	___awmod@dividend,w
  4677  1459  01F0               	clrf	?___awmod
  4678  145A  07F0               	addwf	?___awmod,f
  4679  145B  0008               	return
  4680  145C                     __end_of___awmod:	
  4681                           
  4682                           	psect	text8
  4683  14B9                     __ptext8:	
  4684 ;; *************** function ___awdiv *****************
  4685 ;; Defined at:
  4686 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awdiv.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  divisor         2    7[COMMON] int 
  4689 ;;  dividend        2    9[COMMON] int 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  quotient        2    2[BANK0 ] int 
  4692 ;;  sign            1    1[BANK0 ] unsigned char 
  4693 ;;  counter         1    0[BANK0 ] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  2    7[COMMON] int 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4703 ;;      Params:         4       0       0       0       0
  4704 ;;      Locals:         0       4       0       0       0
  4705 ;;      Temps:          1       0       0       0       0
  4706 ;;      Totals:         5       4       0       0       0
  4707 ;;Total ram usage:        9 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; This function calls:
  4710 ;;		Nothing
  4711 ;; This function is called by:
  4712 ;;		_fround
  4713 ;;		_scale
  4714 ;;		_sprintf
  4715 ;; This function uses a non-reentrant model
  4716 ;;
  4717                           
  4718                           
  4719                           ;psect for function ___awdiv
  4720  14B9                     ___awdiv:	
  4721                           
  4722                           ;incstack = 0
  4723                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4724  14B9  1283               	bcf	3,5	;RP0=0, select bank0
  4725  14BA  1303               	bcf	3,6	;RP1=0, select bank0
  4726  14BB  01A1               	clrf	___awdiv@sign
  4727  14BC  1FF8               	btfss	___awdiv@divisor+1,7
  4728  14BD  2CC5               	goto	l1710
  4729  14BE  09F7               	comf	___awdiv@divisor,f
  4730  14BF  09F8               	comf	___awdiv@divisor+1,f
  4731  14C0  0AF7               	incf	___awdiv@divisor,f
  4732  14C1  1903               	skipnz
  4733  14C2  0AF8               	incf	___awdiv@divisor+1,f
  4734  14C3  01A1               	clrf	___awdiv@sign
  4735  14C4  0AA1               	incf	___awdiv@sign,f
  4736  14C5                     l1710:	
  4737  14C5  1FFA               	btfss	___awdiv@dividend+1,7
  4738  14C6  2CD0               	goto	l1716
  4739  14C7  09F9               	comf	___awdiv@dividend,f
  4740  14C8  09FA               	comf	___awdiv@dividend+1,f
  4741  14C9  0AF9               	incf	___awdiv@dividend,f
  4742  14CA  1903               	skipnz
  4743  14CB  0AFA               	incf	___awdiv@dividend+1,f
  4744  14CC  3001               	movlw	1
  4745  14CD  00FB               	movwf	??___awdiv
  4746  14CE  087B               	movf	??___awdiv,w
  4747  14CF  06A1               	xorwf	___awdiv@sign,f
  4748  14D0                     l1716:	
  4749  14D0  01A2               	clrf	___awdiv@quotient
  4750  14D1  01A3               	clrf	___awdiv@quotient+1
  4751  14D2  0878               	movf	___awdiv@divisor+1,w
  4752  14D3  0477               	iorwf	___awdiv@divisor,w
  4753  14D4  1903               	skipnz
  4754  14D5  2D07               	goto	l1738
  4755  14D6  01A0               	clrf	___awdiv@counter
  4756  14D7  0AA0               	incf	___awdiv@counter,f
  4757  14D8                     l1726:	
  4758  14D8  1BF8               	btfsc	___awdiv@divisor+1,7
  4759  14D9  2CE6               	goto	l1728
  4760  14DA  3001               	movlw	1
  4761  14DB                     u2075:	
  4762  14DB  1003               	clrc
  4763  14DC  0DF7               	rlf	___awdiv@divisor,f
  4764  14DD  0DF8               	rlf	___awdiv@divisor+1,f
  4765  14DE  3EFF               	addlw	-1
  4766  14DF  1D03               	skipz
  4767  14E0  2CDB               	goto	u2075
  4768  14E1  3001               	movlw	1
  4769  14E2  00FB               	movwf	??___awdiv
  4770  14E3  087B               	movf	??___awdiv,w
  4771  14E4  07A0               	addwf	___awdiv@counter,f
  4772  14E5  2CD8               	goto	l1726
  4773  14E6                     l1728:	
  4774  14E6  3001               	movlw	1
  4775  14E7                     u2095:	
  4776  14E7  1003               	clrc
  4777  14E8  0DA2               	rlf	___awdiv@quotient,f
  4778  14E9  0DA3               	rlf	___awdiv@quotient+1,f
  4779  14EA  3EFF               	addlw	-1
  4780  14EB  1D03               	skipz
  4781  14EC  2CE7               	goto	u2095
  4782  14ED  0878               	movf	___awdiv@divisor+1,w
  4783  14EE  027A               	subwf	___awdiv@dividend+1,w
  4784  14EF  1D03               	skipz
  4785  14F0  2CF3               	goto	u2105
  4786  14F1  0877               	movf	___awdiv@divisor,w
  4787  14F2  0279               	subwf	___awdiv@dividend,w
  4788  14F3                     u2105:	
  4789  14F3  1C03               	skipc
  4790  14F4  2CFC               	goto	l1734
  4791  14F5  0877               	movf	___awdiv@divisor,w
  4792  14F6  02F9               	subwf	___awdiv@dividend,f
  4793  14F7  0878               	movf	___awdiv@divisor+1,w
  4794  14F8  1C03               	skipc
  4795  14F9  03FA               	decf	___awdiv@dividend+1,f
  4796  14FA  02FA               	subwf	___awdiv@dividend+1,f
  4797  14FB  1422               	bsf	___awdiv@quotient,0
  4798  14FC                     l1734:	
  4799  14FC  3001               	movlw	1
  4800  14FD                     u2115:	
  4801  14FD  1003               	clrc
  4802  14FE  0CF8               	rrf	___awdiv@divisor+1,f
  4803  14FF  0CF7               	rrf	___awdiv@divisor,f
  4804  1500  3EFF               	addlw	-1
  4805  1501  1D03               	skipz
  4806  1502  2CFD               	goto	u2115
  4807  1503  3001               	movlw	1
  4808  1504  02A0               	subwf	___awdiv@counter,f
  4809  1505  1D03               	btfss	3,2
  4810  1506  2CE6               	goto	l1728
  4811  1507                     l1738:	
  4812  1507  0821               	movf	___awdiv@sign,w
  4813  1508  1903               	btfsc	3,2
  4814  1509  2D0F               	goto	l1742
  4815  150A  09A2               	comf	___awdiv@quotient,f
  4816  150B  09A3               	comf	___awdiv@quotient+1,f
  4817  150C  0AA2               	incf	___awdiv@quotient,f
  4818  150D  1903               	skipnz
  4819  150E  0AA3               	incf	___awdiv@quotient+1,f
  4820  150F                     l1742:	
  4821  150F  0823               	movf	___awdiv@quotient+1,w
  4822  1510  01F8               	clrf	?___awdiv+1
  4823  1511  07F8               	addwf	?___awdiv+1,f
  4824  1512  0822               	movf	___awdiv@quotient,w
  4825  1513  01F7               	clrf	?___awdiv
  4826  1514  07F7               	addwf	?___awdiv,f
  4827  1515  0008               	return
  4828  1516                     __end_of___awdiv:	
  4829                           
  4830                           	psect	text9
  4831  166A                     __ptext9:	
  4832 ;; *************** function __tdiv_to_l_ *****************
  4833 ;; Defined at:
  4834 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftdivl.c"
  4835 ;; Parameters:    Size  Location     Type
  4836 ;;  f1              3    0[COMMON] float 
  4837 ;;  f2              3    3[COMMON] float 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  quot            4    0[BANK0 ] unsigned long 
  4840 ;;  exp1            1    5[BANK0 ] unsigned char 
  4841 ;;  cntr            1    4[BANK0 ] unsigned char 
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  4    0[COMMON] unsigned long 
  4844 ;; Registers used:
  4845 ;;		wreg, status,2, status,0
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4851 ;;      Params:         6       0       0       0       0
  4852 ;;      Locals:         0       6       0       0       0
  4853 ;;      Temps:          4       0       0       0       0
  4854 ;;      Totals:        10       6       0       0       0
  4855 ;;Total ram usage:       16 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; This function calls:
  4858 ;;		Nothing
  4859 ;; This function is called by:
  4860 ;;		_sprintf
  4861 ;; This function uses a non-reentrant model
  4862 ;;
  4863                           
  4864                           
  4865                           ;psect for function __tdiv_to_l_
  4866  166A                     __tdiv_to_l_:	
  4867                           
  4868                           ;incstack = 0
  4869                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  4870  166A  0870               	movf	__tdiv_to_l_@f1,w
  4871  166B  00F6               	movwf	??__tdiv_to_l_
  4872  166C  0871               	movf	__tdiv_to_l_@f1+1,w
  4873  166D  00F7               	movwf	??__tdiv_to_l_+1
  4874  166E  0872               	movf	__tdiv_to_l_@f1+2,w
  4875  166F  00F8               	movwf	??__tdiv_to_l_+2
  4876  1670  1003               	clrc
  4877  1671  0D77               	rlf	??__tdiv_to_l_+1,w
  4878  1672  0D78               	rlf	??__tdiv_to_l_+2,w
  4879  1673  00F9               	movwf	??__tdiv_to_l_+3
  4880  1674  0879               	movf	??__tdiv_to_l_+3,w
  4881  1675  1283               	bcf	3,5	;RP0=0, select bank0
  4882  1676  1303               	bcf	3,6	;RP1=0, select bank0
  4883  1677  00A5               	movwf	__tdiv_to_l_@exp1
  4884  1678  08A5               	movf	__tdiv_to_l_@exp1,f
  4885  1679  1D03               	skipz
  4886  167A  2E84               	goto	l1992
  4887  167B  3000               	movlw	0
  4888  167C  00F3               	movwf	?__tdiv_to_l_+3
  4889  167D  3000               	movlw	0
  4890  167E  00F2               	movwf	?__tdiv_to_l_+2
  4891  167F  3000               	movlw	0
  4892  1680  00F1               	movwf	?__tdiv_to_l_+1
  4893  1681  3000               	movlw	0
  4894  1682  00F0               	movwf	?__tdiv_to_l_
  4895  1683  0008               	return
  4896  1684                     l1992:	
  4897  1684  0873               	movf	__tdiv_to_l_@f2,w
  4898  1685  00F6               	movwf	??__tdiv_to_l_
  4899  1686  0874               	movf	__tdiv_to_l_@f2+1,w
  4900  1687  00F7               	movwf	??__tdiv_to_l_+1
  4901  1688  0875               	movf	__tdiv_to_l_@f2+2,w
  4902  1689  00F8               	movwf	??__tdiv_to_l_+2
  4903  168A  1003               	clrc
  4904  168B  0D77               	rlf	??__tdiv_to_l_+1,w
  4905  168C  0D78               	rlf	??__tdiv_to_l_+2,w
  4906  168D  00F9               	movwf	??__tdiv_to_l_+3
  4907  168E  0879               	movf	??__tdiv_to_l_+3,w
  4908  168F  00A4               	movwf	__tdiv_to_l_@cntr
  4909  1690  08A4               	movf	__tdiv_to_l_@cntr,f
  4910  1691  1D03               	skipz
  4911  1692  2E9C               	goto	l496
  4912  1693  3000               	movlw	0
  4913  1694  00F3               	movwf	?__tdiv_to_l_+3
  4914  1695  3000               	movlw	0
  4915  1696  00F2               	movwf	?__tdiv_to_l_+2
  4916  1697  3000               	movlw	0
  4917  1698  00F1               	movwf	?__tdiv_to_l_+1
  4918  1699  3000               	movlw	0
  4919  169A  00F0               	movwf	?__tdiv_to_l_
  4920  169B  0008               	return
  4921  169C                     l496:	
  4922  169C  17F1               	bsf	__tdiv_to_l_@f1+1,7
  4923  169D  30FF               	movlw	255
  4924  169E  05F0               	andwf	__tdiv_to_l_@f1,f
  4925  169F  30FF               	movlw	255
  4926  16A0  05F1               	andwf	__tdiv_to_l_@f1+1,f
  4927  16A1  3000               	movlw	0
  4928  16A2  05F2               	andwf	__tdiv_to_l_@f1+2,f
  4929  16A3  17F4               	bsf	__tdiv_to_l_@f2+1,7
  4930  16A4  30FF               	movlw	255
  4931  16A5  05F3               	andwf	__tdiv_to_l_@f2,f
  4932  16A6  30FF               	movlw	255
  4933  16A7  05F4               	andwf	__tdiv_to_l_@f2+1,f
  4934  16A8  3000               	movlw	0
  4935  16A9  05F5               	andwf	__tdiv_to_l_@f2+2,f
  4936  16AA  3000               	movlw	0
  4937  16AB  00A3               	movwf	__tdiv_to_l_@quot+3
  4938  16AC  3000               	movlw	0
  4939  16AD  00A2               	movwf	__tdiv_to_l_@quot+2
  4940  16AE  3000               	movlw	0
  4941  16AF  00A1               	movwf	__tdiv_to_l_@quot+1
  4942  16B0  3000               	movlw	0
  4943  16B1  00A0               	movwf	__tdiv_to_l_@quot
  4944  16B2  307F               	movlw	127
  4945  16B3  02A5               	subwf	__tdiv_to_l_@exp1,f
  4946  16B4  3098               	movlw	152
  4947  16B5  0724               	addwf	__tdiv_to_l_@cntr,w
  4948  16B6  00F6               	movwf	??__tdiv_to_l_
  4949  16B7  0876               	movf	??__tdiv_to_l_,w
  4950  16B8  02A5               	subwf	__tdiv_to_l_@exp1,f
  4951  16B9  3018               	movlw	24
  4952  16BA  00F6               	movwf	??__tdiv_to_l_
  4953  16BB  0876               	movf	??__tdiv_to_l_,w
  4954  16BC  00A4               	movwf	__tdiv_to_l_@cntr
  4955  16BD                     l2006:	
  4956  16BD  3001               	movlw	1
  4957  16BE  00F6               	movwf	??__tdiv_to_l_
  4958  16BF                     u2725:	
  4959  16BF  1003               	clrc
  4960  16C0  0DA0               	rlf	__tdiv_to_l_@quot,f
  4961  16C1  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  4962  16C2  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  4963  16C3  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  4964  16C4  0BF6               	decfsz	??__tdiv_to_l_,f
  4965  16C5  2EBF               	goto	u2725
  4966  16C6  0875               	movf	__tdiv_to_l_@f2+2,w
  4967  16C7  0272               	subwf	__tdiv_to_l_@f1+2,w
  4968  16C8  1D03               	skipz
  4969  16C9  2ED0               	goto	u2735
  4970  16CA  0874               	movf	__tdiv_to_l_@f2+1,w
  4971  16CB  0271               	subwf	__tdiv_to_l_@f1+1,w
  4972  16CC  1D03               	skipz
  4973  16CD  2ED0               	goto	u2735
  4974  16CE  0873               	movf	__tdiv_to_l_@f2,w
  4975  16CF  0270               	subwf	__tdiv_to_l_@f1,w
  4976  16D0                     u2735:	
  4977  16D0  1C03               	skipc
  4978  16D1  2EDD               	goto	l2014
  4979  16D2  0873               	movf	__tdiv_to_l_@f2,w
  4980  16D3  02F0               	subwf	__tdiv_to_l_@f1,f
  4981  16D4  0874               	movf	__tdiv_to_l_@f2+1,w
  4982  16D5  1C03               	skipc
  4983  16D6  0F74               	incfsz	__tdiv_to_l_@f2+1,w
  4984  16D7  02F1               	subwf	__tdiv_to_l_@f1+1,f
  4985  16D8  0875               	movf	__tdiv_to_l_@f2+2,w
  4986  16D9  1C03               	skipc
  4987  16DA  0A75               	incf	__tdiv_to_l_@f2+2,w
  4988  16DB  02F2               	subwf	__tdiv_to_l_@f1+2,f
  4989  16DC  1420               	bsf	__tdiv_to_l_@quot,0
  4990  16DD                     l2014:	
  4991  16DD  3001               	movlw	1
  4992  16DE                     u2745:	
  4993  16DE  1003               	clrc
  4994  16DF  0DF0               	rlf	__tdiv_to_l_@f1,f
  4995  16E0  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  4996  16E1  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  4997  16E2  3EFF               	addlw	-1
  4998  16E3  1D03               	skipz
  4999  16E4  2EDE               	goto	u2745
  5000  16E5  3001               	movlw	1
  5001  16E6  02A4               	subwf	__tdiv_to_l_@cntr,f
  5002  16E7  1D03               	btfss	3,2
  5003  16E8  2EBD               	goto	l2006
  5004  16E9  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5005  16EA  2F09               	goto	l2026
  5006  16EB  0825               	movf	__tdiv_to_l_@exp1,w
  5007  16EC  3A80               	xorlw	128
  5008  16ED  3E97               	addlw	151
  5009  16EE  1803               	skipnc
  5010  16EF  2EF9               	goto	l2024
  5011  16F0  3000               	movlw	0
  5012  16F1  00F3               	movwf	?__tdiv_to_l_+3
  5013  16F2  3000               	movlw	0
  5014  16F3  00F2               	movwf	?__tdiv_to_l_+2
  5015  16F4  3000               	movlw	0
  5016  16F5  00F1               	movwf	?__tdiv_to_l_+1
  5017  16F6  3000               	movlw	0
  5018  16F7  00F0               	movwf	?__tdiv_to_l_
  5019  16F8  0008               	return
  5020  16F9                     l2024:	
  5021  16F9  3001               	movlw	1
  5022  16FA                     u2785:	
  5023  16FA  1003               	clrc
  5024  16FB  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5025  16FC  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5026  16FD  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5027  16FE  0CA0               	rrf	__tdiv_to_l_@quot,f
  5028  16FF  3EFF               	addlw	-1
  5029  1700  1D03               	skipz
  5030  1701  2EFA               	goto	u2785
  5031  1702  3001               	movlw	1
  5032  1703  00F6               	movwf	??__tdiv_to_l_
  5033  1704  0876               	movf	??__tdiv_to_l_,w
  5034  1705  07A5               	addwf	__tdiv_to_l_@exp1,f
  5035  1706  1903               	btfsc	3,2
  5036  1707  2F24               	goto	l2036
  5037  1708  2EF9               	goto	l2024
  5038  1709                     l2026:	
  5039  1709  3018               	movlw	24
  5040  170A  0225               	subwf	__tdiv_to_l_@exp1,w
  5041  170B  1C03               	skipc
  5042  170C  2F21               	goto	l2034
  5043  170D  3000               	movlw	0
  5044  170E  00F3               	movwf	?__tdiv_to_l_+3
  5045  170F  3000               	movlw	0
  5046  1710  00F2               	movwf	?__tdiv_to_l_+2
  5047  1711  3000               	movlw	0
  5048  1712  00F1               	movwf	?__tdiv_to_l_+1
  5049  1713  3000               	movlw	0
  5050  1714  00F0               	movwf	?__tdiv_to_l_
  5051  1715  0008               	return
  5052  1716                     l2032:	
  5053  1716  3001               	movlw	1
  5054  1717  00F6               	movwf	??__tdiv_to_l_
  5055  1718                     u2815:	
  5056  1718  1003               	clrc
  5057  1719  0DA0               	rlf	__tdiv_to_l_@quot,f
  5058  171A  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5059  171B  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5060  171C  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5061  171D  0BF6               	decfsz	??__tdiv_to_l_,f
  5062  171E  2F18               	goto	u2815
  5063  171F  3001               	movlw	1
  5064  1720  02A5               	subwf	__tdiv_to_l_@exp1,f
  5065  1721                     l2034:	
  5066  1721  08A5               	movf	__tdiv_to_l_@exp1,f
  5067  1722  1D03               	skipz
  5068  1723  2F16               	goto	l2032
  5069  1724                     l2036:	
  5070  1724  0823               	movf	__tdiv_to_l_@quot+3,w
  5071  1725  00F3               	movwf	?__tdiv_to_l_+3
  5072  1726  0822               	movf	__tdiv_to_l_@quot+2,w
  5073  1727  00F2               	movwf	?__tdiv_to_l_+2
  5074  1728  0821               	movf	__tdiv_to_l_@quot+1,w
  5075  1729  00F1               	movwf	?__tdiv_to_l_+1
  5076  172A  0820               	movf	__tdiv_to_l_@quot,w
  5077  172B  00F0               	movwf	?__tdiv_to_l_
  5078  172C  0008               	return
  5079  172D                     __end_of__tdiv_to_l_:	
  5080                           
  5081                           	psect	text10
  5082  093D                     __ptext10:	
  5083 ;; *************** function __div_to_l_ *****************
  5084 ;; Defined at:
  5085 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fldivl.c"
  5086 ;; Parameters:    Size  Location     Type
  5087 ;;  f1              3    0[COMMON] unsigned long 
  5088 ;;  f2              3    3[COMMON] unsigned long 
  5089 ;; Auto vars:     Size  Location     Type
  5090 ;;  quot            4    0[BANK0 ] unsigned long 
  5091 ;;  exp1            1    5[BANK0 ] unsigned char 
  5092 ;;  cntr            1    4[BANK0 ] unsigned char 
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  4    0[COMMON] unsigned long 
  5095 ;; Registers used:
  5096 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5102 ;;      Params:         6       0       0       0       0
  5103 ;;      Locals:         0       6       0       0       0
  5104 ;;      Temps:          8       0       0       0       0
  5105 ;;      Totals:        14       6       0       0       0
  5106 ;;Total ram usage:       20 bytes
  5107 ;; Hardware stack levels used:    1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_sprintf
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           
  5116                           ;psect for function __div_to_l_
  5117  093D                     __div_to_l_:	
  5118                           
  5119                           ;incstack = 0
  5120                           ; Regs used in __div_to_l_: [wreg-fsr0h+status,2+status,0]
  5121  093D  3070               	movlw	low __div_to_l_@f1
  5122  093E  0084               	movwf	4
  5123  093F  0800               	movf	0,w
  5124  0940  00F6               	movwf	??__div_to_l_
  5125  0941  0A84               	incf	4,f
  5126  0942  0800               	movf	0,w
  5127  0943  00F7               	movwf	??__div_to_l_+1
  5128  0944  0A84               	incf	4,f
  5129  0945  0800               	movf	0,w
  5130  0946  00F8               	movwf	??__div_to_l_+2
  5131  0947  0A84               	incf	4,f
  5132  0948  0800               	movf	0,w
  5133  0949  00F9               	movwf	??__div_to_l_+3
  5134  094A  1003               	clrc
  5135  094B  0D78               	rlf	??__div_to_l_+2,w
  5136  094C  0D79               	rlf	??__div_to_l_+3,w
  5137  094D  00FA               	movwf	??__div_to_l_+4
  5138  094E  087A               	movf	??__div_to_l_+4,w
  5139  094F  1283               	bcf	3,5	;RP0=0, select bank0
  5140  0950  1303               	bcf	3,6	;RP1=0, select bank0
  5141  0951  00A5               	movwf	__div_to_l_@exp1
  5142  0952  08A5               	movf	__div_to_l_@exp1,f
  5143  0953  1D03               	skipz
  5144  0954  295E               	goto	l2046
  5145  0955  3000               	movlw	0
  5146  0956  00F3               	movwf	?__div_to_l_+3
  5147  0957  3000               	movlw	0
  5148  0958  00F2               	movwf	?__div_to_l_+2
  5149  0959  3000               	movlw	0
  5150  095A  00F1               	movwf	?__div_to_l_+1
  5151  095B  3000               	movlw	0
  5152  095C  00F0               	movwf	?__div_to_l_
  5153  095D  0008               	return
  5154  095E                     l2046:	
  5155  095E  3073               	movlw	low __div_to_l_@f2
  5156  095F  0084               	movwf	4
  5157  0960  0800               	movf	0,w
  5158  0961  00F6               	movwf	??__div_to_l_
  5159  0962  0A84               	incf	4,f
  5160  0963  0800               	movf	0,w
  5161  0964  00F7               	movwf	??__div_to_l_+1
  5162  0965  0A84               	incf	4,f
  5163  0966  0800               	movf	0,w
  5164  0967  00F8               	movwf	??__div_to_l_+2
  5165  0968  0A84               	incf	4,f
  5166  0969  0800               	movf	0,w
  5167  096A  00F9               	movwf	??__div_to_l_+3
  5168  096B  1003               	clrc
  5169  096C  0D78               	rlf	??__div_to_l_+2,w
  5170  096D  0D79               	rlf	??__div_to_l_+3,w
  5171  096E  00FA               	movwf	??__div_to_l_+4
  5172  096F  087A               	movf	??__div_to_l_+4,w
  5173  0970  00A4               	movwf	__div_to_l_@cntr
  5174  0971  08A4               	movf	__div_to_l_@cntr,f
  5175  0972  1D03               	skipz
  5176  0973  297D               	goto	l2052
  5177  0974  3000               	movlw	0
  5178  0975  00F3               	movwf	?__div_to_l_+3
  5179  0976  3000               	movlw	0
  5180  0977  00F2               	movwf	?__div_to_l_+2
  5181  0978  3000               	movlw	0
  5182  0979  00F1               	movwf	?__div_to_l_+1
  5183  097A  3000               	movlw	0
  5184  097B  00F0               	movwf	?__div_to_l_
  5185  097C  0008               	return
  5186  097D                     l2052:	
  5187  097D  3070               	movlw	low __div_to_l_@f1
  5188  097E  0084               	movwf	4
  5189  097F  3000               	movlw	0
  5190  0980  0480               	iorwf	0,f
  5191  0981  0A84               	incf	4,f
  5192  0982  3000               	movlw	0
  5193  0983  0480               	iorwf	0,f
  5194  0984  0A84               	incf	4,f
  5195  0985  3080               	movlw	128
  5196  0986  0480               	iorwf	0,f
  5197  0987  0A84               	incf	4,f
  5198  0988  3000               	movlw	0
  5199  0989  0480               	iorwf	0,f
  5200  098A  3070               	movlw	low __div_to_l_@f1
  5201  098B  0084               	movwf	4
  5202  098C  30FF               	movlw	255
  5203  098D  0580               	andwf	0,f
  5204  098E  0A84               	incf	4,f
  5205  098F  30FF               	movlw	255
  5206  0990  0580               	andwf	0,f
  5207  0991  0A84               	incf	4,f
  5208  0992  30FF               	movlw	255
  5209  0993  0580               	andwf	0,f
  5210  0994  0A84               	incf	4,f
  5211  0995  3000               	movlw	0
  5212  0996  0580               	andwf	0,f
  5213  0997  3073               	movlw	low __div_to_l_@f2
  5214  0998  0084               	movwf	4
  5215  0999  3000               	movlw	0
  5216  099A  0480               	iorwf	0,f
  5217  099B  0A84               	incf	4,f
  5218  099C  3000               	movlw	0
  5219  099D  0480               	iorwf	0,f
  5220  099E  0A84               	incf	4,f
  5221  099F  3080               	movlw	128
  5222  09A0  0480               	iorwf	0,f
  5223  09A1  0A84               	incf	4,f
  5224  09A2  3000               	movlw	0
  5225  09A3  0480               	iorwf	0,f
  5226  09A4  3073               	movlw	low __div_to_l_@f2
  5227  09A5  0084               	movwf	4
  5228  09A6  30FF               	movlw	255
  5229  09A7  0580               	andwf	0,f
  5230  09A8  0A84               	incf	4,f
  5231  09A9  30FF               	movlw	255
  5232  09AA  0580               	andwf	0,f
  5233  09AB  0A84               	incf	4,f
  5234  09AC  30FF               	movlw	255
  5235  09AD  0580               	andwf	0,f
  5236  09AE  0A84               	incf	4,f
  5237  09AF  3000               	movlw	0
  5238  09B0  0580               	andwf	0,f
  5239  09B1  3000               	movlw	0
  5240  09B2  00A3               	movwf	__div_to_l_@quot+3
  5241  09B3  3000               	movlw	0
  5242  09B4  00A2               	movwf	__div_to_l_@quot+2
  5243  09B5  3000               	movlw	0
  5244  09B6  00A1               	movwf	__div_to_l_@quot+1
  5245  09B7  3000               	movlw	0
  5246  09B8  00A0               	movwf	__div_to_l_@quot
  5247  09B9  307F               	movlw	127
  5248  09BA  02A5               	subwf	__div_to_l_@exp1,f
  5249  09BB  30A0               	movlw	160
  5250  09BC  0724               	addwf	__div_to_l_@cntr,w
  5251  09BD  00F6               	movwf	??__div_to_l_
  5252  09BE  0876               	movf	??__div_to_l_,w
  5253  09BF  02A5               	subwf	__div_to_l_@exp1,f
  5254  09C0  3020               	movlw	32
  5255  09C1  00F6               	movwf	??__div_to_l_
  5256  09C2  0876               	movf	??__div_to_l_,w
  5257  09C3  00A4               	movwf	__div_to_l_@cntr
  5258  09C4                     l2062:	
  5259  09C4  3001               	movlw	1
  5260  09C5  00F6               	movwf	??__div_to_l_
  5261  09C6                     u2855:	
  5262  09C6  1003               	clrc
  5263  09C7  0DA0               	rlf	__div_to_l_@quot,f
  5264  09C8  0DA1               	rlf	__div_to_l_@quot+1,f
  5265  09C9  0DA2               	rlf	__div_to_l_@quot+2,f
  5266  09CA  0DA3               	rlf	__div_to_l_@quot+3,f
  5267  09CB  0BF6               	decfsz	??__div_to_l_,f
  5268  09CC  29C6               	goto	u2855
  5269  09CD  3073               	movlw	low __div_to_l_@f2
  5270  09CE  0084               	movwf	4
  5271  09CF  0800               	movf	0,w
  5272  09D0  00F6               	movwf	??__div_to_l_
  5273  09D1  0A84               	incf	4,f
  5274  09D2  0800               	movf	0,w
  5275  09D3  00F7               	movwf	??__div_to_l_+1
  5276  09D4  0A84               	incf	4,f
  5277  09D5  0800               	movf	0,w
  5278  09D6  00F8               	movwf	??__div_to_l_+2
  5279  09D7  0A84               	incf	4,f
  5280  09D8  0800               	movf	0,w
  5281  09D9  00F9               	movwf	??__div_to_l_+3
  5282  09DA  3070               	movlw	low __div_to_l_@f1
  5283  09DB  0084               	movwf	4
  5284  09DC  0800               	movf	0,w
  5285  09DD  00FA               	movwf	??__div_to_l_+4
  5286  09DE  0A84               	incf	4,f
  5287  09DF  0800               	movf	0,w
  5288  09E0  00FB               	movwf	??__div_to_l_+5
  5289  09E1  0A84               	incf	4,f
  5290  09E2  0800               	movf	0,w
  5291  09E3  00FC               	movwf	??__div_to_l_+6
  5292  09E4  0A84               	incf	4,f
  5293  09E5  0800               	movf	0,w
  5294  09E6  00FD               	movwf	??__div_to_l_+7
  5295  09E7  0879               	movf	??__div_to_l_+3,w
  5296  09E8  027D               	subwf	??__div_to_l_+7,w
  5297  09E9  1D03               	skipz
  5298  09EA  29F5               	goto	u2865
  5299  09EB  0878               	movf	??__div_to_l_+2,w
  5300  09EC  027C               	subwf	??__div_to_l_+6,w
  5301  09ED  1D03               	skipz
  5302  09EE  29F5               	goto	u2865
  5303  09EF  0877               	movf	??__div_to_l_+1,w
  5304  09F0  027B               	subwf	??__div_to_l_+5,w
  5305  09F1  1D03               	skipz
  5306  09F2  29F5               	goto	u2865
  5307  09F3  0876               	movf	??__div_to_l_,w
  5308  09F4  027A               	subwf	??__div_to_l_+4,w
  5309  09F5                     u2865:	
  5310  09F5  1C03               	skipc
  5311  09F6  2A1A               	goto	l421
  5312  09F7  3073               	movlw	low __div_to_l_@f2
  5313  09F8  0084               	movwf	4
  5314  09F9  0800               	movf	0,w
  5315  09FA  00F6               	movwf	??__div_to_l_
  5316  09FB  0A84               	incf	4,f
  5317  09FC  0800               	movf	0,w
  5318  09FD  00F7               	movwf	??__div_to_l_+1
  5319  09FE  0A84               	incf	4,f
  5320  09FF  0800               	movf	0,w
  5321  0A00  00F8               	movwf	??__div_to_l_+2
  5322  0A01  0A84               	incf	4,f
  5323  0A02  0800               	movf	0,w
  5324  0A03  00F9               	movwf	??__div_to_l_+3
  5325  0A04  3070               	movlw	low __div_to_l_@f1
  5326  0A05  0084               	movwf	4
  5327  0A06  0876               	movf	??__div_to_l_,w
  5328  0A07  0280               	subwf	0,f
  5329  0A08  0A84               	incf	4,f
  5330  0A09  0877               	movf	??__div_to_l_+1,w
  5331  0A0A  1C03               	skipc
  5332  0A0B  0F77               	incfsz	??__div_to_l_+1,w
  5333  0A0C  0280               	subwf	0,f
  5334  0A0D  0A84               	incf	4,f
  5335  0A0E  0878               	movf	??__div_to_l_+2,w
  5336  0A0F  1C03               	skipc
  5337  0A10  0F78               	incfsz	??__div_to_l_+2,w
  5338  0A11  0280               	subwf	0,f
  5339  0A12  0A84               	incf	4,f
  5340  0A13  0879               	movf	??__div_to_l_+3,w
  5341  0A14  1C03               	skipc
  5342  0A15  0A79               	incf	??__div_to_l_+3,w
  5343  0A16  0280               	subwf	0,f
  5344  0A17  3003               	movlw	3
  5345  0A18  0284               	subwf	4,f
  5346  0A19  1420               	bsf	__div_to_l_@quot,0
  5347  0A1A                     l421:	
  5348  0A1A  3070               	movlw	low __div_to_l_@f1
  5349  0A1B  0084               	movwf	4
  5350  0A1C  1003               	clrc
  5351  0A1D  0D80               	rlf	0,f
  5352  0A1E  0A84               	incf	4,f
  5353  0A1F  0D80               	rlf	0,f
  5354  0A20  0A84               	incf	4,f
  5355  0A21  0D80               	rlf	0,f
  5356  0A22  0A84               	incf	4,f
  5357  0A23  0D80               	rlf	0,f
  5358  0A24  0384               	decf	4,f
  5359  0A25  0384               	decf	4,f
  5360  0A26  0384               	decf	4,f
  5361  0A27  3001               	movlw	1
  5362  0A28  02A4               	subwf	__div_to_l_@cntr,f
  5363  0A29  1D03               	btfss	3,2
  5364  0A2A  29C4               	goto	l2062
  5365  0A2B  1FA5               	btfss	__div_to_l_@exp1,7
  5366  0A2C  2A4B               	goto	l2080
  5367  0A2D  0825               	movf	__div_to_l_@exp1,w
  5368  0A2E  3A80               	xorlw	128
  5369  0A2F  3E9F               	addlw	159
  5370  0A30  1803               	skipnc
  5371  0A31  2A3B               	goto	l2078
  5372  0A32  3000               	movlw	0
  5373  0A33  00F3               	movwf	?__div_to_l_+3
  5374  0A34  3000               	movlw	0
  5375  0A35  00F2               	movwf	?__div_to_l_+2
  5376  0A36  3000               	movlw	0
  5377  0A37  00F1               	movwf	?__div_to_l_+1
  5378  0A38  3000               	movlw	0
  5379  0A39  00F0               	movwf	?__div_to_l_
  5380  0A3A  0008               	return
  5381  0A3B                     l2078:	
  5382  0A3B  3001               	movlw	1
  5383  0A3C                     u2905:	
  5384  0A3C  1003               	clrc
  5385  0A3D  0CA3               	rrf	__div_to_l_@quot+3,f
  5386  0A3E  0CA2               	rrf	__div_to_l_@quot+2,f
  5387  0A3F  0CA1               	rrf	__div_to_l_@quot+1,f
  5388  0A40  0CA0               	rrf	__div_to_l_@quot,f
  5389  0A41  3EFF               	addlw	-1
  5390  0A42  1D03               	skipz
  5391  0A43  2A3C               	goto	u2905
  5392  0A44  3001               	movlw	1
  5393  0A45  00F6               	movwf	??__div_to_l_
  5394  0A46  0876               	movf	??__div_to_l_,w
  5395  0A47  07A5               	addwf	__div_to_l_@exp1,f
  5396  0A48  1903               	btfsc	3,2
  5397  0A49  2A66               	goto	l2090
  5398  0A4A  2A3B               	goto	l2078
  5399  0A4B                     l2080:	
  5400  0A4B  3020               	movlw	32
  5401  0A4C  0225               	subwf	__div_to_l_@exp1,w
  5402  0A4D  1C03               	skipc
  5403  0A4E  2A63               	goto	l2088
  5404  0A4F  3000               	movlw	0
  5405  0A50  00F3               	movwf	?__div_to_l_+3
  5406  0A51  3000               	movlw	0
  5407  0A52  00F2               	movwf	?__div_to_l_+2
  5408  0A53  3000               	movlw	0
  5409  0A54  00F1               	movwf	?__div_to_l_+1
  5410  0A55  3000               	movlw	0
  5411  0A56  00F0               	movwf	?__div_to_l_
  5412  0A57  0008               	return
  5413  0A58                     l2086:	
  5414  0A58  3001               	movlw	1
  5415  0A59  00F6               	movwf	??__div_to_l_
  5416  0A5A                     u2935:	
  5417  0A5A  1003               	clrc
  5418  0A5B  0DA0               	rlf	__div_to_l_@quot,f
  5419  0A5C  0DA1               	rlf	__div_to_l_@quot+1,f
  5420  0A5D  0DA2               	rlf	__div_to_l_@quot+2,f
  5421  0A5E  0DA3               	rlf	__div_to_l_@quot+3,f
  5422  0A5F  0BF6               	decfsz	??__div_to_l_,f
  5423  0A60  2A5A               	goto	u2935
  5424  0A61  3001               	movlw	1
  5425  0A62  02A5               	subwf	__div_to_l_@exp1,f
  5426  0A63                     l2088:	
  5427  0A63  08A5               	movf	__div_to_l_@exp1,f
  5428  0A64  1D03               	skipz
  5429  0A65  2A58               	goto	l2086
  5430  0A66                     l2090:	
  5431  0A66  0823               	movf	__div_to_l_@quot+3,w
  5432  0A67  00F3               	movwf	?__div_to_l_+3
  5433  0A68  0822               	movf	__div_to_l_@quot+2,w
  5434  0A69  00F2               	movwf	?__div_to_l_+2
  5435  0A6A  0821               	movf	__div_to_l_@quot+1,w
  5436  0A6B  00F1               	movwf	?__div_to_l_+1
  5437  0A6C  0820               	movf	__div_to_l_@quot,w
  5438  0A6D  00F0               	movwf	?__div_to_l_
  5439  0A6E  0008               	return
  5440  0A6F                     __end_of__div_to_l_:	
  5441                           
  5442                           	psect	text11
  5443  1307                     __ptext11:	
  5444 ;; *************** function ___wmul *****************
  5445 ;; Defined at:
  5446 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul16.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;  multiplier      2    0[COMMON] unsigned int 
  5449 ;;  multiplicand    2    2[COMMON] unsigned int 
  5450 ;; Auto vars:     Size  Location     Type
  5451 ;;  product         2    4[COMMON] unsigned int 
  5452 ;; Return value:  Size  Location     Type
  5453 ;;                  2    0[COMMON] unsigned int 
  5454 ;; Registers used:
  5455 ;;		wreg, status,2, status,0
  5456 ;; Tracked objects:
  5457 ;;		On entry : 0/0
  5458 ;;		On exit  : 0/0
  5459 ;;		Unchanged: 0/0
  5460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5461 ;;      Params:         4       0       0       0       0
  5462 ;;      Locals:         2       0       0       0       0
  5463 ;;      Temps:          0       0       0       0       0
  5464 ;;      Totals:         6       0       0       0       0
  5465 ;;Total ram usage:        6 bytes
  5466 ;; Hardware stack levels used:    1
  5467 ;; This function calls:
  5468 ;;		Nothing
  5469 ;; This function is called by:
  5470 ;;		_sprintf
  5471 ;; This function uses a non-reentrant model
  5472 ;;
  5473                           
  5474                           
  5475                           ;psect for function ___wmul
  5476  1307                     ___wmul:	
  5477                           
  5478                           ;incstack = 0
  5479                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5480  1307  01F4               	clrf	___wmul@product
  5481  1308  01F5               	clrf	___wmul@product+1
  5482  1309                     l2096:	
  5483  1309  1C70               	btfss	___wmul@multiplier,0
  5484  130A  2B11               	goto	l263
  5485  130B  0872               	movf	___wmul@multiplicand,w
  5486  130C  07F4               	addwf	___wmul@product,f
  5487  130D  1803               	skipnc
  5488  130E  0AF5               	incf	___wmul@product+1,f
  5489  130F  0873               	movf	___wmul@multiplicand+1,w
  5490  1310  07F5               	addwf	___wmul@product+1,f
  5491  1311                     l263:	
  5492  1311  3001               	movlw	1
  5493  1312                     u2965:	
  5494  1312  1003               	clrc
  5495  1313  0DF2               	rlf	___wmul@multiplicand,f
  5496  1314  0DF3               	rlf	___wmul@multiplicand+1,f
  5497  1315  3EFF               	addlw	-1
  5498  1316  1D03               	skipz
  5499  1317  2B12               	goto	u2965
  5500  1318  3001               	movlw	1
  5501  1319                     u2975:	
  5502  1319  1003               	clrc
  5503  131A  0CF1               	rrf	___wmul@multiplier+1,f
  5504  131B  0CF0               	rrf	___wmul@multiplier,f
  5505  131C  3EFF               	addlw	-1
  5506  131D  1D03               	skipz
  5507  131E  2B19               	goto	u2975
  5508  131F  0871               	movf	___wmul@multiplier+1,w
  5509  1320  0470               	iorwf	___wmul@multiplier,w
  5510  1321  1D03               	skipz
  5511  1322  2B09               	goto	l2096
  5512  1323  0875               	movf	___wmul@product+1,w
  5513  1324  01F1               	clrf	?___wmul+1
  5514  1325  07F1               	addwf	?___wmul+1,f
  5515  1326  0874               	movf	___wmul@product,w
  5516  1327  01F0               	clrf	?___wmul
  5517  1328  07F0               	addwf	?___wmul,f
  5518  1329  0008               	return
  5519  132A                     __end_of___wmul:	
  5520                           
  5521                           	psect	text12
  5522  0809                     __ptext12:	
  5523 ;; *************** function ___lltoft *****************
  5524 ;; Defined at:
  5525 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lltoft.c"
  5526 ;; Parameters:    Size  Location     Type
  5527 ;;  c               4    8[COMMON] unsigned long 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  exp             1   13[COMMON] unsigned char 
  5530 ;; Return value:  Size  Location     Type
  5531 ;;                  3    8[COMMON] float 
  5532 ;; Registers used:
  5533 ;;		wreg, status,2, status,0, pclath, cstack
  5534 ;; Tracked objects:
  5535 ;;		On entry : 0/0
  5536 ;;		On exit  : 0/0
  5537 ;;		Unchanged: 0/0
  5538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5539 ;;      Params:         4       0       0       0       0
  5540 ;;      Locals:         1       0       0       0       0
  5541 ;;      Temps:          1       0       0       0       0
  5542 ;;      Totals:         6       0       0       0       0
  5543 ;;Total ram usage:        6 bytes
  5544 ;; Hardware stack levels used:    1
  5545 ;; Hardware stack levels required when called:    1
  5546 ;; This function calls:
  5547 ;;		___ftpack
  5548 ;; This function is called by:
  5549 ;;		_sprintf
  5550 ;; This function uses a non-reentrant model
  5551 ;;
  5552                           
  5553                           
  5554                           ;psect for function ___lltoft
  5555  0809                     ___lltoft:	
  5556                           
  5557                           ;incstack = 0
  5558                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
  5559  0809  308E               	movlw	142
  5560  080A  00FC               	movwf	??___lltoft
  5561  080B  087C               	movf	??___lltoft,w
  5562  080C  00FD               	movwf	___lltoft@exp
  5563  080D                     l2232:	
  5564  080D  30FF               	movlw	255
  5565  080E  057B               	andwf	___lltoft@c+3,w
  5566  080F  1903               	btfsc	3,2
  5567  0810  281F               	goto	l2234
  5568  0811  3001               	movlw	1
  5569  0812                     u3285:	
  5570  0812  1003               	clrc
  5571  0813  0CFB               	rrf	___lltoft@c+3,f
  5572  0814  0CFA               	rrf	___lltoft@c+2,f
  5573  0815  0CF9               	rrf	___lltoft@c+1,f
  5574  0816  0CF8               	rrf	___lltoft@c,f
  5575  0817  3EFF               	addlw	-1
  5576  0818  1D03               	skipz
  5577  0819  2812               	goto	u3285
  5578  081A  3001               	movlw	1
  5579  081B  00FC               	movwf	??___lltoft
  5580  081C  087C               	movf	??___lltoft,w
  5581  081D  07FD               	addwf	___lltoft@exp,f
  5582  081E  280D               	goto	l2232
  5583  081F                     l2234:	
  5584  081F  0878               	movf	___lltoft@c,w
  5585  0820  00F0               	movwf	___ftpack@arg
  5586  0821  0879               	movf	___lltoft@c+1,w
  5587  0822  00F1               	movwf	___ftpack@arg+1
  5588  0823  087A               	movf	___lltoft@c+2,w
  5589  0824  00F2               	movwf	___ftpack@arg+2
  5590  0825  087D               	movf	___lltoft@exp,w
  5591  0826  00FC               	movwf	??___lltoft
  5592  0827  087C               	movf	??___lltoft,w
  5593  0828  00F3               	movwf	___ftpack@exp
  5594  0829  01F4               	clrf	___ftpack@sign
  5595  082A  160A  118A  2574   	fcall	___ftpack
  5596  082D  0870               	movf	?___ftpack,w
  5597  082E  00F8               	movwf	?___lltoft
  5598  082F  0871               	movf	?___ftpack+1,w
  5599  0830  00F9               	movwf	?___lltoft+1
  5600  0831  0872               	movf	?___ftpack+2,w
  5601  0832  00FA               	movwf	?___lltoft+2
  5602  0833  0008               	return
  5603  0834                     __end_of___lltoft:	
  5604                           
  5605                           	psect	text13
  5606  13C3                     __ptext13:	
  5607 ;; *************** function ___llmod *****************
  5608 ;; Defined at:
  5609 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\llmod.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  divisor         4    0[COMMON] unsigned long 
  5612 ;;  dividend        4    4[COMMON] unsigned long 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  counter         1    9[COMMON] unsigned char 
  5615 ;; Return value:  Size  Location     Type
  5616 ;;                  4    0[COMMON] unsigned long 
  5617 ;; Registers used:
  5618 ;;		wreg, status,2, status,0
  5619 ;; Tracked objects:
  5620 ;;		On entry : 0/0
  5621 ;;		On exit  : 0/0
  5622 ;;		Unchanged: 0/0
  5623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5624 ;;      Params:         8       0       0       0       0
  5625 ;;      Locals:         1       0       0       0       0
  5626 ;;      Temps:          1       0       0       0       0
  5627 ;;      Totals:        10       0       0       0       0
  5628 ;;Total ram usage:       10 bytes
  5629 ;; Hardware stack levels used:    1
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_sprintf
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           
  5638                           ;psect for function ___llmod
  5639  13C3                     ___llmod:	
  5640                           
  5641                           ;incstack = 0
  5642                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  5643  13C3  0873               	movf	___llmod@divisor+3,w
  5644  13C4  0472               	iorwf	___llmod@divisor+2,w
  5645  13C5  0471               	iorwf	___llmod@divisor+1,w
  5646  13C6  0470               	iorwf	___llmod@divisor,w
  5647  13C7  1903               	skipnz
  5648  13C8  2C06               	goto	l2224
  5649  13C9  01F9               	clrf	___llmod@counter
  5650  13CA  0AF9               	incf	___llmod@counter,f
  5651  13CB                     l2214:	
  5652  13CB  1BF3               	btfsc	___llmod@divisor+3,7
  5653  13CC  2BDB               	goto	l2216
  5654  13CD  3001               	movlw	1
  5655  13CE  00F8               	movwf	??___llmod
  5656  13CF                     u3235:	
  5657  13CF  1003               	clrc
  5658  13D0  0DF0               	rlf	___llmod@divisor,f
  5659  13D1  0DF1               	rlf	___llmod@divisor+1,f
  5660  13D2  0DF2               	rlf	___llmod@divisor+2,f
  5661  13D3  0DF3               	rlf	___llmod@divisor+3,f
  5662  13D4  0BF8               	decfsz	??___llmod,f
  5663  13D5  2BCF               	goto	u3235
  5664  13D6  3001               	movlw	1
  5665  13D7  00F8               	movwf	??___llmod
  5666  13D8  0878               	movf	??___llmod,w
  5667  13D9  07F9               	addwf	___llmod@counter,f
  5668  13DA  2BCB               	goto	l2214
  5669  13DB                     l2216:	
  5670  13DB  0873               	movf	___llmod@divisor+3,w
  5671  13DC  0277               	subwf	___llmod@dividend+3,w
  5672  13DD  1D03               	skipz
  5673  13DE  2BE9               	goto	u3255
  5674  13DF  0872               	movf	___llmod@divisor+2,w
  5675  13E0  0276               	subwf	___llmod@dividend+2,w
  5676  13E1  1D03               	skipz
  5677  13E2  2BE9               	goto	u3255
  5678  13E3  0871               	movf	___llmod@divisor+1,w
  5679  13E4  0275               	subwf	___llmod@dividend+1,w
  5680  13E5  1D03               	skipz
  5681  13E6  2BE9               	goto	u3255
  5682  13E7  0870               	movf	___llmod@divisor,w
  5683  13E8  0274               	subwf	___llmod@dividend,w
  5684  13E9                     u3255:	
  5685  13E9  1C03               	skipc
  5686  13EA  2BF9               	goto	l2220
  5687  13EB  0870               	movf	___llmod@divisor,w
  5688  13EC  02F4               	subwf	___llmod@dividend,f
  5689  13ED  0871               	movf	___llmod@divisor+1,w
  5690  13EE  1C03               	skipc
  5691  13EF  0F71               	incfsz	___llmod@divisor+1,w
  5692  13F0  02F5               	subwf	___llmod@dividend+1,f
  5693  13F1  0872               	movf	___llmod@divisor+2,w
  5694  13F2  1C03               	skipc
  5695  13F3  0F72               	incfsz	___llmod@divisor+2,w
  5696  13F4  02F6               	subwf	___llmod@dividend+2,f
  5697  13F5  0873               	movf	___llmod@divisor+3,w
  5698  13F6  1C03               	skipc
  5699  13F7  0F73               	incfsz	___llmod@divisor+3,w
  5700  13F8  02F7               	subwf	___llmod@dividend+3,f
  5701  13F9                     l2220:	
  5702  13F9  3001               	movlw	1
  5703  13FA                     u3265:	
  5704  13FA  1003               	clrc
  5705  13FB  0CF3               	rrf	___llmod@divisor+3,f
  5706  13FC  0CF2               	rrf	___llmod@divisor+2,f
  5707  13FD  0CF1               	rrf	___llmod@divisor+1,f
  5708  13FE  0CF0               	rrf	___llmod@divisor,f
  5709  13FF  3EFF               	addlw	-1
  5710  1400  1D03               	skipz
  5711  1401  2BFA               	goto	u3265
  5712  1402  3001               	movlw	1
  5713  1403  02F9               	subwf	___llmod@counter,f
  5714  1404  1D03               	btfss	3,2
  5715  1405  2BDB               	goto	l2216
  5716  1406                     l2224:	
  5717  1406  0877               	movf	___llmod@dividend+3,w
  5718  1407  00F3               	movwf	?___llmod+3
  5719  1408  0876               	movf	___llmod@dividend+2,w
  5720  1409  00F2               	movwf	?___llmod+2
  5721  140A  0875               	movf	___llmod@dividend+1,w
  5722  140B  00F1               	movwf	?___llmod+1
  5723  140C  0874               	movf	___llmod@dividend,w
  5724  140D  00F0               	movwf	?___llmod
  5725  140E  0008               	return
  5726  140F                     __end_of___llmod:	
  5727                           
  5728                           	psect	text14
  5729  1516                     __ptext14:	
  5730 ;; *************** function ___lldiv *****************
  5731 ;; Defined at:
  5732 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;  divisor         4    0[COMMON] unsigned long 
  5735 ;;  dividend        4    4[COMMON] unsigned long 
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  quotient        4    9[COMMON] unsigned long 
  5738 ;;  counter         1   13[COMMON] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  4    0[COMMON] unsigned long 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5748 ;;      Params:         8       0       0       0       0
  5749 ;;      Locals:         5       0       0       0       0
  5750 ;;      Temps:          1       0       0       0       0
  5751 ;;      Totals:        14       0       0       0       0
  5752 ;;Total ram usage:       14 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_sprintf
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           
  5762                           ;psect for function ___lldiv
  5763  1516                     ___lldiv:	
  5764                           
  5765                           ;incstack = 0
  5766                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5767  1516  3000               	movlw	0
  5768  1517  00FC               	movwf	___lldiv@quotient+3
  5769  1518  3000               	movlw	0
  5770  1519  00FB               	movwf	___lldiv@quotient+2
  5771  151A  3000               	movlw	0
  5772  151B  00FA               	movwf	___lldiv@quotient+1
  5773  151C  3000               	movlw	0
  5774  151D  00F9               	movwf	___lldiv@quotient
  5775  151E  0873               	movf	___lldiv@divisor+3,w
  5776  151F  0472               	iorwf	___lldiv@divisor+2,w
  5777  1520  0471               	iorwf	___lldiv@divisor+1,w
  5778  1521  0470               	iorwf	___lldiv@divisor,w
  5779  1522  1903               	skipnz
  5780  1523  2D6B               	goto	l2204
  5781  1524  01FD               	clrf	___lldiv@counter
  5782  1525  0AFD               	incf	___lldiv@counter,f
  5783  1526                     l2190:	
  5784  1526  1BF3               	btfsc	___lldiv@divisor+3,7
  5785  1527  2D36               	goto	l2192
  5786  1528  3001               	movlw	1
  5787  1529  00F8               	movwf	??___lldiv
  5788  152A                     u3165:	
  5789  152A  1003               	clrc
  5790  152B  0DF0               	rlf	___lldiv@divisor,f
  5791  152C  0DF1               	rlf	___lldiv@divisor+1,f
  5792  152D  0DF2               	rlf	___lldiv@divisor+2,f
  5793  152E  0DF3               	rlf	___lldiv@divisor+3,f
  5794  152F  0BF8               	decfsz	??___lldiv,f
  5795  1530  2D2A               	goto	u3165
  5796  1531  3001               	movlw	1
  5797  1532  00F8               	movwf	??___lldiv
  5798  1533  0878               	movf	??___lldiv,w
  5799  1534  07FD               	addwf	___lldiv@counter,f
  5800  1535  2D26               	goto	l2190
  5801  1536                     l2192:	
  5802  1536  3001               	movlw	1
  5803  1537  00F8               	movwf	??___lldiv
  5804  1538                     u3185:	
  5805  1538  1003               	clrc
  5806  1539  0DF9               	rlf	___lldiv@quotient,f
  5807  153A  0DFA               	rlf	___lldiv@quotient+1,f
  5808  153B  0DFB               	rlf	___lldiv@quotient+2,f
  5809  153C  0DFC               	rlf	___lldiv@quotient+3,f
  5810  153D  0BF8               	decfsz	??___lldiv,f
  5811  153E  2D38               	goto	u3185
  5812  153F  0873               	movf	___lldiv@divisor+3,w
  5813  1540  0277               	subwf	___lldiv@dividend+3,w
  5814  1541  1D03               	skipz
  5815  1542  2D4D               	goto	u3195
  5816  1543  0872               	movf	___lldiv@divisor+2,w
  5817  1544  0276               	subwf	___lldiv@dividend+2,w
  5818  1545  1D03               	skipz
  5819  1546  2D4D               	goto	u3195
  5820  1547  0871               	movf	___lldiv@divisor+1,w
  5821  1548  0275               	subwf	___lldiv@dividend+1,w
  5822  1549  1D03               	skipz
  5823  154A  2D4D               	goto	u3195
  5824  154B  0870               	movf	___lldiv@divisor,w
  5825  154C  0274               	subwf	___lldiv@dividend,w
  5826  154D                     u3195:	
  5827  154D  1C03               	skipc
  5828  154E  2D5E               	goto	l2200
  5829  154F  0870               	movf	___lldiv@divisor,w
  5830  1550  02F4               	subwf	___lldiv@dividend,f
  5831  1551  0871               	movf	___lldiv@divisor+1,w
  5832  1552  1C03               	skipc
  5833  1553  0F71               	incfsz	___lldiv@divisor+1,w
  5834  1554  02F5               	subwf	___lldiv@dividend+1,f
  5835  1555  0872               	movf	___lldiv@divisor+2,w
  5836  1556  1C03               	skipc
  5837  1557  0F72               	incfsz	___lldiv@divisor+2,w
  5838  1558  02F6               	subwf	___lldiv@dividend+2,f
  5839  1559  0873               	movf	___lldiv@divisor+3,w
  5840  155A  1C03               	skipc
  5841  155B  0F73               	incfsz	___lldiv@divisor+3,w
  5842  155C  02F7               	subwf	___lldiv@dividend+3,f
  5843  155D  1479               	bsf	___lldiv@quotient,0
  5844  155E                     l2200:	
  5845  155E  3001               	movlw	1
  5846  155F                     u3205:	
  5847  155F  1003               	clrc
  5848  1560  0CF3               	rrf	___lldiv@divisor+3,f
  5849  1561  0CF2               	rrf	___lldiv@divisor+2,f
  5850  1562  0CF1               	rrf	___lldiv@divisor+1,f
  5851  1563  0CF0               	rrf	___lldiv@divisor,f
  5852  1564  3EFF               	addlw	-1
  5853  1565  1D03               	skipz
  5854  1566  2D5F               	goto	u3205
  5855  1567  3001               	movlw	1
  5856  1568  02FD               	subwf	___lldiv@counter,f
  5857  1569  1D03               	btfss	3,2
  5858  156A  2D36               	goto	l2192
  5859  156B                     l2204:	
  5860  156B  087C               	movf	___lldiv@quotient+3,w
  5861  156C  00F3               	movwf	?___lldiv+3
  5862  156D  087B               	movf	___lldiv@quotient+2,w
  5863  156E  00F2               	movwf	?___lldiv+2
  5864  156F  087A               	movf	___lldiv@quotient+1,w
  5865  1570  00F1               	movwf	?___lldiv+1
  5866  1571  0879               	movf	___lldiv@quotient,w
  5867  1572  00F0               	movwf	?___lldiv
  5868  1573  0008               	return
  5869  1574                     __end_of___lldiv:	
  5870                           
  5871                           	psect	text15
  5872  15DC                     __ptext15:	
  5873 ;; *************** function ___fttol *****************
  5874 ;; Defined at:
  5875 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;  f1              3   41[BANK0 ] float 
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;  lval            4   50[BANK0 ] unsigned long 
  5880 ;;  exp1            1   54[BANK0 ] unsigned char 
  5881 ;;  sign1           1   49[BANK0 ] unsigned char 
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  4   41[BANK0 ] long 
  5884 ;; Registers used:
  5885 ;;		wreg, status,2, status,0
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/0
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5891 ;;      Params:         0       4       0       0       0
  5892 ;;      Locals:         0       6       0       0       0
  5893 ;;      Temps:          0       4       0       0       0
  5894 ;;      Totals:         0      14       0       0       0
  5895 ;;Total ram usage:       14 bytes
  5896 ;; Hardware stack levels used:    1
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_sprintf
  5901 ;; This function uses a non-reentrant model
  5902 ;;
  5903                           
  5904                           
  5905                           ;psect for function ___fttol
  5906  15DC                     ___fttol:	
  5907                           
  5908                           ;incstack = 0
  5909                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  5910  15DC  1283               	bcf	3,5	;RP0=0, select bank0
  5911  15DD  1303               	bcf	3,6	;RP1=0, select bank0
  5912  15DE  0849               	movf	___fttol@f1,w
  5913  15DF  00CD               	movwf	??___fttol
  5914  15E0  084A               	movf	___fttol@f1+1,w
  5915  15E1  00CE               	movwf	??___fttol+1
  5916  15E2  084B               	movf	___fttol@f1+2,w
  5917  15E3  00CF               	movwf	??___fttol+2
  5918  15E4  1003               	clrc
  5919  15E5  0D4E               	rlf	??___fttol+1,w
  5920  15E6  0D4F               	rlf	??___fttol+2,w
  5921  15E7  00D0               	movwf	??___fttol+3
  5922  15E8  0850               	movf	??___fttol+3,w
  5923  15E9  00D6               	movwf	___fttol@exp1
  5924  15EA  08D6               	movf	___fttol@exp1,f
  5925  15EB  1D03               	skipz
  5926  15EC  2DF6               	goto	l2146
  5927  15ED  3000               	movlw	0
  5928  15EE  00CC               	movwf	?___fttol+3
  5929  15EF  3000               	movlw	0
  5930  15F0  00CB               	movwf	?___fttol+2
  5931  15F1  3000               	movlw	0
  5932  15F2  00CA               	movwf	?___fttol+1
  5933  15F3  3000               	movlw	0
  5934  15F4  00C9               	movwf	?___fttol
  5935  15F5  0008               	return
  5936  15F6                     l2146:	
  5937  15F6  0849               	movf	___fttol@f1,w
  5938  15F7  00CD               	movwf	??___fttol
  5939  15F8  084A               	movf	___fttol@f1+1,w
  5940  15F9  00CE               	movwf	??___fttol+1
  5941  15FA  084B               	movf	___fttol@f1+2,w
  5942  15FB  00CF               	movwf	??___fttol+2
  5943  15FC  3017               	movlw	23
  5944  15FD                     u3065:	
  5945  15FD  1003               	clrc
  5946  15FE  0CCF               	rrf	??___fttol+2,f
  5947  15FF  0CCE               	rrf	??___fttol+1,f
  5948  1600  0CCD               	rrf	??___fttol,f
  5949  1601  3EFF               	addlw	-1
  5950  1602  1D03               	skipz
  5951  1603  2DFD               	goto	u3065
  5952  1604  084D               	movf	??___fttol,w
  5953  1605  00D0               	movwf	??___fttol+3
  5954  1606  0850               	movf	??___fttol+3,w
  5955  1607  00D1               	movwf	___fttol@sign1
  5956  1608  17CA               	bsf	___fttol@f1+1,7
  5957  1609  30FF               	movlw	255
  5958  160A  05C9               	andwf	___fttol@f1,f
  5959  160B  30FF               	movlw	255
  5960  160C  05CA               	andwf	___fttol@f1+1,f
  5961  160D  3000               	movlw	0
  5962  160E  05CB               	andwf	___fttol@f1+2,f
  5963  160F  0849               	movf	___fttol@f1,w
  5964  1610  00D2               	movwf	___fttol@lval
  5965  1611  084A               	movf	___fttol@f1+1,w
  5966  1612  00D3               	movwf	___fttol@lval+1
  5967  1613  084B               	movf	___fttol@f1+2,w
  5968  1614  00D4               	movwf	___fttol@lval+2
  5969  1615  01D5               	clrf	___fttol@lval+3
  5970  1616  308E               	movlw	142
  5971  1617  02D6               	subwf	___fttol@exp1,f
  5972  1618  1FD6               	btfss	___fttol@exp1,7
  5973  1619  2E38               	goto	l2166
  5974  161A  0856               	movf	___fttol@exp1,w
  5975  161B  3A80               	xorlw	128
  5976  161C  3E8F               	addlw	143
  5977  161D  1803               	skipnc
  5978  161E  2E28               	goto	l2164
  5979  161F  3000               	movlw	0
  5980  1620  00CC               	movwf	?___fttol+3
  5981  1621  3000               	movlw	0
  5982  1622  00CB               	movwf	?___fttol+2
  5983  1623  3000               	movlw	0
  5984  1624  00CA               	movwf	?___fttol+1
  5985  1625  3000               	movlw	0
  5986  1626  00C9               	movwf	?___fttol
  5987  1627  0008               	return
  5988  1628                     l2164:	
  5989  1628  3001               	movlw	1
  5990  1629                     u3095:	
  5991  1629  1003               	clrc
  5992  162A  0CD5               	rrf	___fttol@lval+3,f
  5993  162B  0CD4               	rrf	___fttol@lval+2,f
  5994  162C  0CD3               	rrf	___fttol@lval+1,f
  5995  162D  0CD2               	rrf	___fttol@lval,f
  5996  162E  3EFF               	addlw	-1
  5997  162F  1D03               	skipz
  5998  1630  2E29               	goto	u3095
  5999  1631  3001               	movlw	1
  6000  1632  00CD               	movwf	??___fttol
  6001  1633  084D               	movf	??___fttol,w
  6002  1634  07D6               	addwf	___fttol@exp1,f
  6003  1635  1903               	btfsc	3,2
  6004  1636  2E53               	goto	l2176
  6005  1637  2E28               	goto	l2164
  6006  1638                     l2166:	
  6007  1638  3018               	movlw	24
  6008  1639  0256               	subwf	___fttol@exp1,w
  6009  163A  1C03               	skipc
  6010  163B  2E50               	goto	l2174
  6011  163C  3000               	movlw	0
  6012  163D  00CC               	movwf	?___fttol+3
  6013  163E  3000               	movlw	0
  6014  163F  00CB               	movwf	?___fttol+2
  6015  1640  3000               	movlw	0
  6016  1641  00CA               	movwf	?___fttol+1
  6017  1642  3000               	movlw	0
  6018  1643  00C9               	movwf	?___fttol
  6019  1644  0008               	return
  6020  1645                     l2172:	
  6021  1645  3001               	movlw	1
  6022  1646  00CD               	movwf	??___fttol
  6023  1647                     u3125:	
  6024  1647  1003               	clrc
  6025  1648  0DD2               	rlf	___fttol@lval,f
  6026  1649  0DD3               	rlf	___fttol@lval+1,f
  6027  164A  0DD4               	rlf	___fttol@lval+2,f
  6028  164B  0DD5               	rlf	___fttol@lval+3,f
  6029  164C  0BCD               	decfsz	??___fttol,f
  6030  164D  2E47               	goto	u3125
  6031  164E  3001               	movlw	1
  6032  164F  02D6               	subwf	___fttol@exp1,f
  6033  1650                     l2174:	
  6034  1650  08D6               	movf	___fttol@exp1,f
  6035  1651  1D03               	skipz
  6036  1652  2E45               	goto	l2172
  6037  1653                     l2176:	
  6038  1653  0851               	movf	___fttol@sign1,w
  6039  1654  1903               	btfsc	3,2
  6040  1655  2E61               	goto	l2180
  6041  1656  09D2               	comf	___fttol@lval,f
  6042  1657  09D3               	comf	___fttol@lval+1,f
  6043  1658  09D4               	comf	___fttol@lval+2,f
  6044  1659  09D5               	comf	___fttol@lval+3,f
  6045  165A  0AD2               	incf	___fttol@lval,f
  6046  165B  1903               	skipnz
  6047  165C  0AD3               	incf	___fttol@lval+1,f
  6048  165D  1903               	skipnz
  6049  165E  0AD4               	incf	___fttol@lval+2,f
  6050  165F  1903               	skipnz
  6051  1660  0AD5               	incf	___fttol@lval+3,f
  6052  1661                     l2180:	
  6053  1661  0855               	movf	___fttol@lval+3,w
  6054  1662  00CC               	movwf	?___fttol+3
  6055  1663  0854               	movf	___fttol@lval+2,w
  6056  1664  00CB               	movwf	?___fttol+2
  6057  1665  0853               	movf	___fttol@lval+1,w
  6058  1666  00CA               	movwf	?___fttol+1
  6059  1667  0852               	movf	___fttol@lval,w
  6060  1668  00C9               	movwf	?___fttol
  6061  1669  0008               	return
  6062  166A                     __end_of___fttol:	
  6063                           
  6064                           	psect	text16
  6065  12EB                     __ptext16:	
  6066 ;; *************** function ___ftsub *****************
  6067 ;; Defined at:
  6068 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftsub.c"
  6069 ;; Parameters:    Size  Location     Type
  6070 ;;  f2              3   61[BANK0 ] float 
  6071 ;;  f1              3   64[BANK0 ] float 
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;		None
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  3   61[BANK0 ] float 
  6076 ;; Registers used:
  6077 ;;		wreg, status,2, status,0, pclath, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6083 ;;      Params:         0       6       0       0       0
  6084 ;;      Locals:         0       0       0       0       0
  6085 ;;      Temps:          0       0       0       0       0
  6086 ;;      Totals:         0       6       0       0       0
  6087 ;;Total ram usage:        6 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    2
  6090 ;; This function calls:
  6091 ;;		___ftadd
  6092 ;; This function is called by:
  6093 ;;		_sprintf
  6094 ;; This function uses a non-reentrant model
  6095 ;;
  6096                           
  6097                           
  6098                           ;psect for function ___ftsub
  6099  12EB                     ___ftsub:	
  6100                           
  6101                           ;incstack = 0
  6102                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
  6103  12EB  3080               	movlw	128
  6104  12EC  1283               	bcf	3,5	;RP0=0, select bank0
  6105  12ED  1303               	bcf	3,6	;RP1=0, select bank0
  6106  12EE  06DF               	xorwf	___ftsub@f2+2,f
  6107  12EF  0860               	movf	___ftsub@f1,w
  6108  12F0  00D0               	movwf	___ftadd@f1
  6109  12F1  0861               	movf	___ftsub@f1+1,w
  6110  12F2  00D1               	movwf	___ftadd@f1+1
  6111  12F3  0862               	movf	___ftsub@f1+2,w
  6112  12F4  00D2               	movwf	___ftadd@f1+2
  6113  12F5  085D               	movf	___ftsub@f2,w
  6114  12F6  00D3               	movwf	___ftadd@f2
  6115  12F7  085E               	movf	___ftsub@f2+1,w
  6116  12F8  00D4               	movwf	___ftadd@f2+1
  6117  12F9  085F               	movf	___ftsub@f2+2,w
  6118  12FA  00D5               	movwf	___ftadd@f2+2
  6119  12FB  120A  158A  2034   	fcall	___ftadd
  6120  12FE  1283               	bcf	3,5	;RP0=0, select bank0
  6121  12FF  1303               	bcf	3,6	;RP1=0, select bank0
  6122  1300  0850               	movf	?___ftadd,w
  6123  1301  00DD               	movwf	?___ftsub
  6124  1302  0851               	movf	?___ftadd+1,w
  6125  1303  00DE               	movwf	?___ftsub+1
  6126  1304  0852               	movf	?___ftadd+2,w
  6127  1305  00DF               	movwf	?___ftsub+2
  6128  1306  0008               	return
  6129  1307                     __end_of___ftsub:	
  6130                           
  6131                           	psect	text17
  6132  0834                     __ptext17:	
  6133 ;; *************** function ___ftadd *****************
  6134 ;; Defined at:
  6135 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftadd.c"
  6136 ;; Parameters:    Size  Location     Type
  6137 ;;  f1              3   48[BANK0 ] float 
  6138 ;;  f2              3   51[BANK0 ] float 
  6139 ;; Auto vars:     Size  Location     Type
  6140 ;;  exp1            1   60[BANK0 ] unsigned char 
  6141 ;;  exp2            1   59[BANK0 ] unsigned char 
  6142 ;;  sign            1   58[BANK0 ] unsigned char 
  6143 ;; Return value:  Size  Location     Type
  6144 ;;                  3   48[BANK0 ] float 
  6145 ;; Registers used:
  6146 ;;		wreg, status,2, status,0, pclath, cstack
  6147 ;; Tracked objects:
  6148 ;;		On entry : 0/0
  6149 ;;		On exit  : 0/0
  6150 ;;		Unchanged: 0/0
  6151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6152 ;;      Params:         0       6       0       0       0
  6153 ;;      Locals:         0       3       0       0       0
  6154 ;;      Temps:          0       4       0       0       0
  6155 ;;      Totals:         0      13       0       0       0
  6156 ;;Total ram usage:       13 bytes
  6157 ;; Hardware stack levels used:    1
  6158 ;; Hardware stack levels required when called:    1
  6159 ;; This function calls:
  6160 ;;		___ftpack
  6161 ;; This function is called by:
  6162 ;;		_main
  6163 ;;		_sprintf
  6164 ;;		___ftsub
  6165 ;; This function uses a non-reentrant model
  6166 ;;
  6167                           
  6168                           
  6169                           ;psect for function ___ftadd
  6170  0834                     ___ftadd:	
  6171                           
  6172                           ;incstack = 0
  6173                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  6174  0834  1283               	bcf	3,5	;RP0=0, select bank0
  6175  0835  1303               	bcf	3,6	;RP1=0, select bank0
  6176  0836  0850               	movf	___ftadd@f1,w
  6177  0837  00D6               	movwf	??___ftadd
  6178  0838  0851               	movf	___ftadd@f1+1,w
  6179  0839  00D7               	movwf	??___ftadd+1
  6180  083A  0852               	movf	___ftadd@f1+2,w
  6181  083B  00D8               	movwf	??___ftadd+2
  6182  083C  1003               	clrc
  6183  083D  0D57               	rlf	??___ftadd+1,w
  6184  083E  0D58               	rlf	??___ftadd+2,w
  6185  083F  00D9               	movwf	??___ftadd+3
  6186  0840  0859               	movf	??___ftadd+3,w
  6187  0841  00DC               	movwf	___ftadd@exp1
  6188  0842  0853               	movf	___ftadd@f2,w
  6189  0843  00D6               	movwf	??___ftadd
  6190  0844  0854               	movf	___ftadd@f2+1,w
  6191  0845  00D7               	movwf	??___ftadd+1
  6192  0846  0855               	movf	___ftadd@f2+2,w
  6193  0847  00D8               	movwf	??___ftadd+2
  6194  0848  1003               	clrc
  6195  0849  0D57               	rlf	??___ftadd+1,w
  6196  084A  0D58               	rlf	??___ftadd+2,w
  6197  084B  00D9               	movwf	??___ftadd+3
  6198  084C  0859               	movf	??___ftadd+3,w
  6199  084D  00DB               	movwf	___ftadd@exp2
  6200  084E  085C               	movf	___ftadd@exp1,w
  6201  084F  1903               	btfsc	3,2
  6202  0850  285D               	goto	l1792
  6203  0851  085B               	movf	___ftadd@exp2,w
  6204  0852  025C               	subwf	___ftadd@exp1,w
  6205  0853  1803               	skipnc
  6206  0854  2864               	goto	l1796
  6207  0855  035C               	decf	___ftadd@exp1,w
  6208  0856  3AFF               	xorlw	255
  6209  0857  075B               	addwf	___ftadd@exp2,w
  6210  0858  00D6               	movwf	??___ftadd
  6211  0859  3019               	movlw	25
  6212  085A  0256               	subwf	??___ftadd,w
  6213  085B  1C03               	skipc
  6214  085C  2864               	goto	l1796
  6215  085D                     l1792:	
  6216  085D  0853               	movf	___ftadd@f2,w
  6217  085E  00D0               	movwf	?___ftadd
  6218  085F  0854               	movf	___ftadd@f2+1,w
  6219  0860  00D1               	movwf	?___ftadd+1
  6220  0861  0855               	movf	___ftadd@f2+2,w
  6221  0862  00D2               	movwf	?___ftadd+2
  6222  0863  0008               	return
  6223  0864                     l1796:	
  6224  0864  085B               	movf	___ftadd@exp2,w
  6225  0865  1903               	btfsc	3,2
  6226  0866  0008               	return
  6227  0867  085C               	movf	___ftadd@exp1,w
  6228  0868  025B               	subwf	___ftadd@exp2,w
  6229  0869  1803               	skipnc
  6230  086A  2873               	goto	l1802
  6231  086B  035B               	decf	___ftadd@exp2,w
  6232  086C  3AFF               	xorlw	255
  6233  086D  075C               	addwf	___ftadd@exp1,w
  6234  086E  00D6               	movwf	??___ftadd
  6235  086F  3019               	movlw	25
  6236  0870  0256               	subwf	??___ftadd,w
  6237  0871  1803               	btfsc	3,0
  6238  0872  0008               	return
  6239  0873                     l1802:	
  6240  0873  3006               	movlw	6
  6241  0874  00D6               	movwf	??___ftadd
  6242  0875  0856               	movf	??___ftadd,w
  6243  0876  00DA               	movwf	___ftadd@sign
  6244  0877  1BD2               	btfsc	___ftadd@f1+2,7
  6245  0878  17DA               	bsf	___ftadd@sign,7
  6246  0879  1BD5               	btfsc	___ftadd@f2+2,7
  6247  087A  175A               	bsf	___ftadd@sign,6
  6248  087B  17D1               	bsf	___ftadd@f1+1,7
  6249  087C  30FF               	movlw	255
  6250  087D  05D0               	andwf	___ftadd@f1,f
  6251  087E  30FF               	movlw	255
  6252  087F  05D1               	andwf	___ftadd@f1+1,f
  6253  0880  3000               	movlw	0
  6254  0881  05D2               	andwf	___ftadd@f1+2,f
  6255  0882  17D4               	bsf	___ftadd@f2+1,7
  6256  0883  30FF               	movlw	255
  6257  0884  05D3               	andwf	___ftadd@f2,f
  6258  0885  30FF               	movlw	255
  6259  0886  05D4               	andwf	___ftadd@f2+1,f
  6260  0887  3000               	movlw	0
  6261  0888  05D5               	andwf	___ftadd@f2+2,f
  6262  0889  085B               	movf	___ftadd@exp2,w
  6263  088A  025C               	subwf	___ftadd@exp1,w
  6264  088B  1803               	skipnc
  6265  088C  28B3               	goto	l1824
  6266  088D                     l1814:	
  6267  088D  3001               	movlw	1
  6268  088E                     u2325:	
  6269  088E  1003               	clrc
  6270  088F  0DD3               	rlf	___ftadd@f2,f
  6271  0890  0DD4               	rlf	___ftadd@f2+1,f
  6272  0891  0DD5               	rlf	___ftadd@f2+2,f
  6273  0892  3EFF               	addlw	-1
  6274  0893  1D03               	skipz
  6275  0894  288E               	goto	u2325
  6276  0895  3001               	movlw	1
  6277  0896  02DB               	subwf	___ftadd@exp2,f
  6278  0897  085B               	movf	___ftadd@exp2,w
  6279  0898  065C               	xorwf	___ftadd@exp1,w
  6280  0899  1903               	skipnz
  6281  089A  28AE               	goto	l1822
  6282  089B  3001               	movlw	1
  6283  089C  02DA               	subwf	___ftadd@sign,f
  6284  089D  085A               	movf	___ftadd@sign,w
  6285  089E  3907               	andlw	7
  6286  089F  1903               	btfsc	3,2
  6287  08A0  28AE               	goto	l1822
  6288  08A1  288D               	goto	l1814
  6289  08A2                     l1820:	
  6290  08A2  3001               	movlw	1
  6291  08A3                     u2355:	
  6292  08A3  1003               	clrc
  6293  08A4  0CD2               	rrf	___ftadd@f1+2,f
  6294  08A5  0CD1               	rrf	___ftadd@f1+1,f
  6295  08A6  0CD0               	rrf	___ftadd@f1,f
  6296  08A7  3EFF               	addlw	-1
  6297  08A8  1D03               	skipz
  6298  08A9  28A3               	goto	u2355
  6299  08AA  3001               	movlw	1
  6300  08AB  00D6               	movwf	??___ftadd
  6301  08AC  0856               	movf	??___ftadd,w
  6302  08AD  07DC               	addwf	___ftadd@exp1,f
  6303  08AE                     l1822:	
  6304  08AE  085C               	movf	___ftadd@exp1,w
  6305  08AF  065B               	xorwf	___ftadd@exp2,w
  6306  08B0  1903               	btfsc	3,2
  6307  08B1  28DC               	goto	l470
  6308  08B2  28A2               	goto	l1820
  6309  08B3                     l1824:	
  6310  08B3  085C               	movf	___ftadd@exp1,w
  6311  08B4  025B               	subwf	___ftadd@exp2,w
  6312  08B5  1803               	skipnc
  6313  08B6  28DC               	goto	l470
  6314  08B7                     l1826:	
  6315  08B7  3001               	movlw	1
  6316  08B8                     u2385:	
  6317  08B8  1003               	clrc
  6318  08B9  0DD0               	rlf	___ftadd@f1,f
  6319  08BA  0DD1               	rlf	___ftadd@f1+1,f
  6320  08BB  0DD2               	rlf	___ftadd@f1+2,f
  6321  08BC  3EFF               	addlw	-1
  6322  08BD  1D03               	skipz
  6323  08BE  28B8               	goto	u2385
  6324  08BF  3001               	movlw	1
  6325  08C0  02DC               	subwf	___ftadd@exp1,f
  6326  08C1  085B               	movf	___ftadd@exp2,w
  6327  08C2  065C               	xorwf	___ftadd@exp1,w
  6328  08C3  1903               	skipnz
  6329  08C4  28D8               	goto	l1834
  6330  08C5  3001               	movlw	1
  6331  08C6  02DA               	subwf	___ftadd@sign,f
  6332  08C7  085A               	movf	___ftadd@sign,w
  6333  08C8  3907               	andlw	7
  6334  08C9  1903               	btfsc	3,2
  6335  08CA  28D8               	goto	l1834
  6336  08CB  28B7               	goto	l1826
  6337  08CC                     l1832:	
  6338  08CC  3001               	movlw	1
  6339  08CD                     u2415:	
  6340  08CD  1003               	clrc
  6341  08CE  0CD5               	rrf	___ftadd@f2+2,f
  6342  08CF  0CD4               	rrf	___ftadd@f2+1,f
  6343  08D0  0CD3               	rrf	___ftadd@f2,f
  6344  08D1  3EFF               	addlw	-1
  6345  08D2  1D03               	skipz
  6346  08D3  28CD               	goto	u2415
  6347  08D4  3001               	movlw	1
  6348  08D5  00D6               	movwf	??___ftadd
  6349  08D6  0856               	movf	??___ftadd,w
  6350  08D7  07DB               	addwf	___ftadd@exp2,f
  6351  08D8                     l1834:	
  6352  08D8  085C               	movf	___ftadd@exp1,w
  6353  08D9  065B               	xorwf	___ftadd@exp2,w
  6354  08DA  1D03               	skipz
  6355  08DB  28CC               	goto	l1832
  6356  08DC                     l470:	
  6357  08DC  1FDA               	btfss	___ftadd@sign,7
  6358  08DD  28EE               	goto	l1838
  6359  08DE  30FF               	movlw	255
  6360  08DF  06D0               	xorwf	___ftadd@f1,f
  6361  08E0  30FF               	movlw	255
  6362  08E1  06D1               	xorwf	___ftadd@f1+1,f
  6363  08E2  30FF               	movlw	255
  6364  08E3  06D2               	xorwf	___ftadd@f1+2,f
  6365  08E4  3001               	movlw	1
  6366  08E5  07D0               	addwf	___ftadd@f1,f
  6367  08E6  3000               	movlw	0
  6368  08E7  1803               	skipnc
  6369  08E8  3001               	movlw	1
  6370  08E9  07D1               	addwf	___ftadd@f1+1,f
  6371  08EA  3000               	movlw	0
  6372  08EB  1803               	skipnc
  6373  08EC  3001               	movlw	1
  6374  08ED  07D2               	addwf	___ftadd@f1+2,f
  6375  08EE                     l1838:	
  6376  08EE  1F5A               	btfss	___ftadd@sign,6
  6377  08EF  2900               	goto	l1842
  6378  08F0  30FF               	movlw	255
  6379  08F1  06D3               	xorwf	___ftadd@f2,f
  6380  08F2  30FF               	movlw	255
  6381  08F3  06D4               	xorwf	___ftadd@f2+1,f
  6382  08F4  30FF               	movlw	255
  6383  08F5  06D5               	xorwf	___ftadd@f2+2,f
  6384  08F6  3001               	movlw	1
  6385  08F7  07D3               	addwf	___ftadd@f2,f
  6386  08F8  3000               	movlw	0
  6387  08F9  1803               	skipnc
  6388  08FA  3001               	movlw	1
  6389  08FB  07D4               	addwf	___ftadd@f2+1,f
  6390  08FC  3000               	movlw	0
  6391  08FD  1803               	skipnc
  6392  08FE  3001               	movlw	1
  6393  08FF  07D5               	addwf	___ftadd@f2+2,f
  6394  0900                     l1842:	
  6395  0900  01DA               	clrf	___ftadd@sign
  6396  0901  0850               	movf	___ftadd@f1,w
  6397  0902  07D3               	addwf	___ftadd@f2,f
  6398  0903  0851               	movf	___ftadd@f1+1,w
  6399  0904  1103               	clrz
  6400  0905  1803               	skipnc
  6401  0906  0A51               	incf	___ftadd@f1+1,w
  6402  0907  1D03               	btfss	3,2
  6403  0908  07D4               	addwf	___ftadd@f2+1,f
  6404  0909  0852               	movf	___ftadd@f1+2,w
  6405  090A  1103               	clrz
  6406  090B  1803               	skipnc
  6407  090C  0A52               	incf	___ftadd@f1+2,w
  6408  090D  1D03               	btfss	3,2
  6409  090E  07D5               	addwf	___ftadd@f2+2,f
  6410  090F  1FD5               	btfss	___ftadd@f2+2,7
  6411  0910  2923               	goto	l1852
  6412  0911  30FF               	movlw	255
  6413  0912  06D3               	xorwf	___ftadd@f2,f
  6414  0913  30FF               	movlw	255
  6415  0914  06D4               	xorwf	___ftadd@f2+1,f
  6416  0915  30FF               	movlw	255
  6417  0916  06D5               	xorwf	___ftadd@f2+2,f
  6418  0917  3001               	movlw	1
  6419  0918  07D3               	addwf	___ftadd@f2,f
  6420  0919  3000               	movlw	0
  6421  091A  1803               	skipnc
  6422  091B  3001               	movlw	1
  6423  091C  07D4               	addwf	___ftadd@f2+1,f
  6424  091D  3000               	movlw	0
  6425  091E  1803               	skipnc
  6426  091F  3001               	movlw	1
  6427  0920  07D5               	addwf	___ftadd@f2+2,f
  6428  0921  01DA               	clrf	___ftadd@sign
  6429  0922  0ADA               	incf	___ftadd@sign,f
  6430  0923                     l1852:	
  6431  0923  0853               	movf	___ftadd@f2,w
  6432  0924  00F0               	movwf	___ftpack@arg
  6433  0925  0854               	movf	___ftadd@f2+1,w
  6434  0926  00F1               	movwf	___ftpack@arg+1
  6435  0927  0855               	movf	___ftadd@f2+2,w
  6436  0928  00F2               	movwf	___ftpack@arg+2
  6437  0929  085C               	movf	___ftadd@exp1,w
  6438  092A  00D6               	movwf	??___ftadd
  6439  092B  0856               	movf	??___ftadd,w
  6440  092C  00F3               	movwf	___ftpack@exp
  6441  092D  085A               	movf	___ftadd@sign,w
  6442  092E  00D7               	movwf	??___ftadd+1
  6443  092F  0857               	movf	??___ftadd+1,w
  6444  0930  00F4               	movwf	___ftpack@sign
  6445  0931  160A  118A  2574   	fcall	___ftpack
  6446  0934  0870               	movf	?___ftpack,w
  6447  0935  1283               	bcf	3,5	;RP0=0, select bank0
  6448  0936  1303               	bcf	3,6	;RP1=0, select bank0
  6449  0937  00D0               	movwf	?___ftadd
  6450  0938  0871               	movf	?___ftpack+1,w
  6451  0939  00D1               	movwf	?___ftadd+1
  6452  093A  0872               	movf	?___ftpack+2,w
  6453  093B  00D2               	movwf	?___ftadd+2
  6454  093C  0008               	return
  6455  093D                     __end_of___ftadd:	
  6456                           
  6457                           	psect	text18
  6458  125D                     __ptext18:	
  6459 ;; *************** function ___ftneg *****************
  6460 ;; Defined at:
  6461 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftneg.c"
  6462 ;; Parameters:    Size  Location     Type
  6463 ;;  f1              3    0[COMMON] float 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;		None
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  3    0[COMMON] float 
  6468 ;; Registers used:
  6469 ;;		wreg
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6475 ;;      Params:         3       0       0       0       0
  6476 ;;      Locals:         0       0       0       0       0
  6477 ;;      Temps:          0       0       0       0       0
  6478 ;;      Totals:         3       0       0       0       0
  6479 ;;Total ram usage:        3 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_sprintf
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           
  6489                           ;psect for function ___ftneg
  6490  125D                     ___ftneg:	
  6491                           
  6492                           ;incstack = 0
  6493                           ; Regs used in ___ftneg: [wreg]
  6494  125D  0872               	movf	___ftneg@f1+2,w
  6495  125E  0471               	iorwf	___ftneg@f1+1,w
  6496  125F  0470               	iorwf	___ftneg@f1,w
  6497  1260  1903               	skipnz
  6498  1261  0008               	return
  6499  1262  3080               	movlw	128
  6500  1263  06F2               	xorwf	___ftneg@f1+2,f
  6501  1264  0008               	return
  6502  1265                     __end_of___ftneg:	
  6503                           
  6504                           	psect	text19
  6505  145C                     __ptext19:	
  6506 ;; *************** function ___ftge *****************
  6507 ;; Defined at:
  6508 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftge.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  ff1             3    0[COMMON] float 
  6511 ;;  ff2             3    3[COMMON] float 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;		None               void
  6516 ;; Registers used:
  6517 ;;		wreg, status,2, status,0
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6523 ;;      Params:         6       0       0       0       0
  6524 ;;      Locals:         0       0       0       0       0
  6525 ;;      Temps:          6       0       0       0       0
  6526 ;;      Totals:        12       0       0       0       0
  6527 ;;Total ram usage:       12 bytes
  6528 ;; Hardware stack levels used:    1
  6529 ;; This function calls:
  6530 ;;		Nothing
  6531 ;; This function is called by:
  6532 ;;		_sprintf
  6533 ;; This function uses a non-reentrant model
  6534 ;;
  6535                           
  6536                           
  6537                           ;psect for function ___ftge
  6538  145C                     ___ftge:	
  6539                           
  6540                           ;incstack = 0
  6541                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  6542  145C  1FF2               	btfss	___ftge@ff1+2,7
  6543  145D  2C83               	goto	l2110
  6544  145E  3000               	movlw	0
  6545  145F  00F6               	movwf	??___ftge
  6546  1460  3000               	movlw	0
  6547  1461  00F7               	movwf	??___ftge+1
  6548  1462  3080               	movlw	128
  6549  1463  00F8               	movwf	??___ftge+2
  6550  1464  0970               	comf	___ftge@ff1,w
  6551  1465  00F9               	movwf	??___ftge+3
  6552  1466  0971               	comf	___ftge@ff1+1,w
  6553  1467  00FA               	movwf	??___ftge+4
  6554  1468  0972               	comf	___ftge@ff1+2,w
  6555  1469  00FB               	movwf	??___ftge+5
  6556  146A  0AF9               	incf	??___ftge+3,f
  6557  146B  1903               	skipnz
  6558  146C  0AFA               	incf	??___ftge+4,f
  6559  146D  1903               	skipnz
  6560  146E  0AFB               	incf	??___ftge+5,f
  6561  146F  0879               	movf	??___ftge+3,w
  6562  1470  07F6               	addwf	??___ftge,f
  6563  1471  087A               	movf	??___ftge+4,w
  6564  1472  1803               	skipnc
  6565  1473  0F7A               	incfsz	??___ftge+4,w
  6566  1474  2C76               	goto	u3001
  6567  1475  2C77               	goto	u3002
  6568  1476                     u3001:	
  6569  1476  07F7               	addwf	??___ftge+1,f
  6570  1477                     u3002:	
  6571  1477  087B               	movf	??___ftge+5,w
  6572  1478  1803               	skipnc
  6573  1479  0F7B               	incfsz	??___ftge+5,w
  6574  147A  2C7C               	goto	u3003
  6575  147B  2C7D               	goto	u3004
  6576  147C                     u3003:	
  6577  147C  07F8               	addwf	??___ftge+2,f
  6578  147D                     u3004:	
  6579  147D  0876               	movf	??___ftge,w
  6580  147E  00F0               	movwf	___ftge@ff1
  6581  147F  0877               	movf	??___ftge+1,w
  6582  1480  00F1               	movwf	___ftge@ff1+1
  6583  1481  0878               	movf	??___ftge+2,w
  6584  1482  00F2               	movwf	___ftge@ff1+2
  6585  1483                     l2110:	
  6586  1483  1FF5               	btfss	___ftge@ff2+2,7
  6587  1484  2CAA               	goto	l2114
  6588  1485  3000               	movlw	0
  6589  1486  00F6               	movwf	??___ftge
  6590  1487  3000               	movlw	0
  6591  1488  00F7               	movwf	??___ftge+1
  6592  1489  3080               	movlw	128
  6593  148A  00F8               	movwf	??___ftge+2
  6594  148B  0973               	comf	___ftge@ff2,w
  6595  148C  00F9               	movwf	??___ftge+3
  6596  148D  0974               	comf	___ftge@ff2+1,w
  6597  148E  00FA               	movwf	??___ftge+4
  6598  148F  0975               	comf	___ftge@ff2+2,w
  6599  1490  00FB               	movwf	??___ftge+5
  6600  1491  0AF9               	incf	??___ftge+3,f
  6601  1492  1903               	skipnz
  6602  1493  0AFA               	incf	??___ftge+4,f
  6603  1494  1903               	skipnz
  6604  1495  0AFB               	incf	??___ftge+5,f
  6605  1496  0879               	movf	??___ftge+3,w
  6606  1497  07F6               	addwf	??___ftge,f
  6607  1498  087A               	movf	??___ftge+4,w
  6608  1499  1803               	skipnc
  6609  149A  0F7A               	incfsz	??___ftge+4,w
  6610  149B  2C9D               	goto	u3021
  6611  149C  2C9E               	goto	u3022
  6612  149D                     u3021:	
  6613  149D  07F7               	addwf	??___ftge+1,f
  6614  149E                     u3022:	
  6615  149E  087B               	movf	??___ftge+5,w
  6616  149F  1803               	skipnc
  6617  14A0  0F7B               	incfsz	??___ftge+5,w
  6618  14A1  2CA3               	goto	u3023
  6619  14A2  2CA4               	goto	u3024
  6620  14A3                     u3023:	
  6621  14A3  07F8               	addwf	??___ftge+2,f
  6622  14A4                     u3024:	
  6623  14A4  0876               	movf	??___ftge,w
  6624  14A5  00F3               	movwf	___ftge@ff2
  6625  14A6  0877               	movf	??___ftge+1,w
  6626  14A7  00F4               	movwf	___ftge@ff2+1
  6627  14A8  0878               	movf	??___ftge+2,w
  6628  14A9  00F5               	movwf	___ftge@ff2+2
  6629  14AA                     l2114:	
  6630  14AA  3080               	movlw	128
  6631  14AB  06F2               	xorwf	___ftge@ff1+2,f
  6632  14AC  3080               	movlw	128
  6633  14AD  06F5               	xorwf	___ftge@ff2+2,f
  6634  14AE  0875               	movf	___ftge@ff2+2,w
  6635  14AF  0272               	subwf	___ftge@ff1+2,w
  6636  14B0  1D03               	skipz
  6637  14B1  0008               	return
  6638  14B2  0874               	movf	___ftge@ff2+1,w
  6639  14B3  0271               	subwf	___ftge@ff1+1,w
  6640  14B4  1D03               	skipz
  6641  14B5  0008               	return
  6642  14B6  0873               	movf	___ftge@ff2,w
  6643  14B7  0270               	subwf	___ftge@ff1,w
  6644  14B8  0008               	return
  6645  14B9                     __end_of___ftge:	
  6646                           
  6647                           	psect	text20
  6648  1265                     __ptext20:	
  6649 ;; *************** function _init_I2C_Master *****************
  6650 ;; Defined at:
  6651 ;;		line 50 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
  6652 ;; Parameters:    Size  Location     Type
  6653 ;;		None
  6654 ;; Auto vars:     Size  Location     Type
  6655 ;;		None
  6656 ;; Return value:  Size  Location     Type
  6657 ;;		None               void
  6658 ;; Registers used:
  6659 ;;		wreg, status,2
  6660 ;; Tracked objects:
  6661 ;;		On entry : 0/0
  6662 ;;		On exit  : 0/0
  6663 ;;		Unchanged: 0/0
  6664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6665 ;;      Params:         0       0       0       0       0
  6666 ;;      Locals:         0       0       0       0       0
  6667 ;;      Temps:          0       0       0       0       0
  6668 ;;      Totals:         0       0       0       0       0
  6669 ;;Total ram usage:        0 bytes
  6670 ;; Hardware stack levels used:    1
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_main
  6675 ;; This function uses a non-reentrant model
  6676 ;;
  6677                           
  6678                           
  6679                           ;psect for function _init_I2C_Master
  6680  1265                     _init_I2C_Master:	
  6681                           
  6682                           ;dumalaganDa_LE7-3.c: 51: TRISC3 = 1;
  6683                           
  6684                           ;incstack = 0
  6685                           ; Regs used in _init_I2C_Master: [wreg+status,2]
  6686  1265  1683               	bsf	3,5	;RP0=1, select bank1
  6687  1266  1303               	bcf	3,6	;RP1=0, select bank1
  6688  1267  1587               	bsf	7,3	;volatile
  6689                           
  6690                           ;dumalaganDa_LE7-3.c: 52: TRISC4 = 1;
  6691  1268  1607               	bsf	7,4	;volatile
  6692                           
  6693                           ;dumalaganDa_LE7-3.c: 53: SSPCON = 0x28;
  6694  1269  3028               	movlw	40
  6695  126A  1283               	bcf	3,5	;RP0=0, select bank0
  6696  126B  1303               	bcf	3,6	;RP1=0, select bank0
  6697  126C  0094               	movwf	20	;volatile
  6698                           
  6699                           ;dumalaganDa_LE7-3.c: 54: SSPCON2 = 0x00;
  6700  126D  1683               	bsf	3,5	;RP0=1, select bank1
  6701  126E  1303               	bcf	3,6	;RP1=0, select bank1
  6702  126F  0191               	clrf	17	;volatile
  6703                           
  6704                           ;dumalaganDa_LE7-3.c: 56: SSPSTAT = 0x00;
  6705  1270  0194               	clrf	20	;volatile
  6706                           
  6707                           ;dumalaganDa_LE7-3.c: 57: SSPADD = 0x09;
  6708  1271  3009               	movlw	9
  6709  1272  0093               	movwf	19	;volatile
  6710  1273  0008               	return
  6711  1274                     __end_of_init_I2C_Master:	
  6712                           
  6713                           	psect	text21
  6714  1350                     __ptext21:	
  6715 ;; *************** function _initLCD *****************
  6716 ;; Defined at:
  6717 ;;		line 32 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
  6718 ;; Parameters:    Size  Location     Type
  6719 ;;		None
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;		None
  6722 ;; Return value:  Size  Location     Type
  6723 ;;		None               void
  6724 ;; Registers used:
  6725 ;;		wreg, status,2, status,0, pclath, cstack
  6726 ;; Tracked objects:
  6727 ;;		On entry : 0/0
  6728 ;;		On exit  : 0/0
  6729 ;;		Unchanged: 0/0
  6730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6731 ;;      Params:         0       0       0       0       0
  6732 ;;      Locals:         0       0       0       0       0
  6733 ;;      Temps:          0       0       0       0       0
  6734 ;;      Totals:         0       0       0       0       0
  6735 ;;Total ram usage:        0 bytes
  6736 ;; Hardware stack levels used:    1
  6737 ;; Hardware stack levels required when called:    2
  6738 ;; This function calls:
  6739 ;;		_delay_ms
  6740 ;;		_instCtrl
  6741 ;; This function is called by:
  6742 ;;		_main
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           
  6747                           ;psect for function _initLCD
  6748  1350                     _initLCD:	
  6749                           
  6750                           ;dumalaganDa_LE7-3.c: 33: delay_ms(1);
  6751                           
  6752                           ;incstack = 0
  6753                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  6754  1350  3001               	movlw	1
  6755  1351  00F0               	movwf	delay_ms@ms_Count
  6756  1352  3000               	movlw	0
  6757  1353  00F1               	movwf	delay_ms@ms_Count+1
  6758  1354  160A  118A  239C  160A  118A  	fcall	_delay_ms
  6759                           
  6760                           ;dumalaganDa_LE7-3.c: 34: instCtrl(0x38);
  6761  1359  3038               	movlw	56
  6762  135A  160A  118A  2298  160A  118A  	fcall	_instCtrl
  6763                           
  6764                           ;dumalaganDa_LE7-3.c: 35: instCtrl(0x08);
  6765  135F  3008               	movlw	8
  6766  1360  160A  118A  2298  160A  118A  	fcall	_instCtrl
  6767                           
  6768                           ;dumalaganDa_LE7-3.c: 36: instCtrl(0x01);
  6769  1365  3001               	movlw	1
  6770  1366  160A  118A  2298  160A  118A  	fcall	_instCtrl
  6771                           
  6772                           ;dumalaganDa_LE7-3.c: 37: instCtrl(0x06);
  6773  136B  3006               	movlw	6
  6774  136C  160A  118A  2298  160A  118A  	fcall	_instCtrl
  6775                           
  6776                           ;dumalaganDa_LE7-3.c: 38: instCtrl(0x0E);
  6777  1371  300E               	movlw	14
  6778  1372  160A  118A  2298   	fcall	_instCtrl
  6779  1375  0008               	return
  6780  1376                     __end_of_initLCD:	
  6781                           
  6782                           	psect	text22
  6783  1298                     __ptext22:	
  6784 ;; *************** function _instCtrl *****************
  6785 ;; Defined at:
  6786 ;;		line 23 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  INST            1    wreg     unsigned char 
  6789 ;; Auto vars:     Size  Location     Type
  6790 ;;  INST            1    6[COMMON] unsigned char 
  6791 ;; Return value:  Size  Location     Type
  6792 ;;		None               void
  6793 ;; Registers used:
  6794 ;;		wreg, status,2, status,0, pclath, cstack
  6795 ;; Tracked objects:
  6796 ;;		On entry : 0/0
  6797 ;;		On exit  : 0/0
  6798 ;;		Unchanged: 0/0
  6799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6800 ;;      Params:         0       0       0       0       0
  6801 ;;      Locals:         1       0       0       0       0
  6802 ;;      Temps:          0       0       0       0       0
  6803 ;;      Totals:         1       0       0       0       0
  6804 ;;Total ram usage:        1 bytes
  6805 ;; Hardware stack levels used:    1
  6806 ;; Hardware stack levels required when called:    1
  6807 ;; This function calls:
  6808 ;;		_delay_ms
  6809 ;; This function is called by:
  6810 ;;		_initLCD
  6811 ;;		_main
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           
  6816                           ;psect for function _instCtrl
  6817  1298                     _instCtrl:	
  6818                           
  6819                           ;incstack = 0
  6820                           ; Regs used in _instCtrl: [wreg+status,2+status,0+pclath+cstack]
  6821                           ;instCtrl@INST stored from wreg
  6822  1298  00F6               	movwf	instCtrl@INST
  6823                           
  6824                           ;dumalaganDa_LE7-3.c: 24: PORTB = INST;
  6825  1299  0876               	movf	instCtrl@INST,w
  6826  129A  1283               	bcf	3,5	;RP0=0, select bank0
  6827  129B  1303               	bcf	3,6	;RP1=0, select bank0
  6828  129C  0086               	movwf	6	;volatile
  6829                           
  6830                           ;dumalaganDa_LE7-3.c: 25: RD0 = 0;
  6831  129D  1008               	bcf	8,0	;volatile
  6832                           
  6833                           ;dumalaganDa_LE7-3.c: 26: RD1 = 0;
  6834  129E  1088               	bcf	8,1	;volatile
  6835                           
  6836                           ;dumalaganDa_LE7-3.c: 27: RD2 = 1;
  6837  129F  1508               	bsf	8,2	;volatile
  6838                           
  6839                           ;dumalaganDa_LE7-3.c: 28: delay_ms(1);
  6840  12A0  3001               	movlw	1
  6841  12A1  00F0               	movwf	delay_ms@ms_Count
  6842  12A2  3000               	movlw	0
  6843  12A3  00F1               	movwf	delay_ms@ms_Count+1
  6844  12A4  160A  118A  239C   	fcall	_delay_ms
  6845                           
  6846                           ;dumalaganDa_LE7-3.c: 29: RD2 = 0;
  6847  12A7  1283               	bcf	3,5	;RP0=0, select bank0
  6848  12A8  1303               	bcf	3,6	;RP1=0, select bank0
  6849  12A9  1108               	bcf	8,2	;volatile
  6850  12AA  0008               	return
  6851  12AB                     __end_of_instCtrl:	
  6852                           
  6853                           	psect	text23
  6854  1285                     __ptext23:	
  6855 ;; *************** function _dataCtrl *****************
  6856 ;; Defined at:
  6857 ;;		line 41 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  DATA            1    wreg     unsigned char 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  DATA            1    6[COMMON] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;		None               void
  6864 ;; Registers used:
  6865 ;;		wreg, status,2, status,0, pclath, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6871 ;;      Params:         0       0       0       0       0
  6872 ;;      Locals:         1       0       0       0       0
  6873 ;;      Temps:          0       0       0       0       0
  6874 ;;      Totals:         1       0       0       0       0
  6875 ;;Total ram usage:        1 bytes
  6876 ;; Hardware stack levels used:    1
  6877 ;; Hardware stack levels required when called:    1
  6878 ;; This function calls:
  6879 ;;		_delay_ms
  6880 ;; This function is called by:
  6881 ;;		_main
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           
  6886                           ;psect for function _dataCtrl
  6887  1285                     _dataCtrl:	
  6888                           
  6889                           ;incstack = 0
  6890                           ; Regs used in _dataCtrl: [wreg+status,2+status,0+pclath+cstack]
  6891                           ;dataCtrl@DATA stored from wreg
  6892  1285  00F6               	movwf	dataCtrl@DATA
  6893                           
  6894                           ;dumalaganDa_LE7-3.c: 42: PORTB = DATA;
  6895  1286  0876               	movf	dataCtrl@DATA,w
  6896  1287  1283               	bcf	3,5	;RP0=0, select bank0
  6897  1288  1303               	bcf	3,6	;RP1=0, select bank0
  6898  1289  0086               	movwf	6	;volatile
  6899                           
  6900                           ;dumalaganDa_LE7-3.c: 43: RD0 = 1;
  6901  128A  1408               	bsf	8,0	;volatile
  6902                           
  6903                           ;dumalaganDa_LE7-3.c: 44: RD1 = 0;
  6904  128B  1088               	bcf	8,1	;volatile
  6905                           
  6906                           ;dumalaganDa_LE7-3.c: 45: RD2 = 1;
  6907  128C  1508               	bsf	8,2	;volatile
  6908                           
  6909                           ;dumalaganDa_LE7-3.c: 46: delay_ms(1);
  6910  128D  3001               	movlw	1
  6911  128E  00F0               	movwf	delay_ms@ms_Count
  6912  128F  3000               	movlw	0
  6913  1290  00F1               	movwf	delay_ms@ms_Count+1
  6914  1291  160A  118A  239C   	fcall	_delay_ms
  6915                           
  6916                           ;dumalaganDa_LE7-3.c: 47: RD2 = 0;
  6917  1294  1283               	bcf	3,5	;RP0=0, select bank0
  6918  1295  1303               	bcf	3,6	;RP1=0, select bank0
  6919  1296  1108               	bcf	8,2	;volatile
  6920  1297  0008               	return
  6921  1298                     __end_of_dataCtrl:	
  6922                           
  6923                           	psect	text24
  6924  139C                     __ptext24:	
  6925 ;; *************** function _delay_ms *****************
  6926 ;; Defined at:
  6927 ;;		line 16 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
  6928 ;; Parameters:    Size  Location     Type
  6929 ;;  ms_Count        2    0[COMMON] unsigned int 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;  j               2    4[COMMON] unsigned int 
  6932 ;;  i               2    2[COMMON] unsigned int 
  6933 ;; Return value:  Size  Location     Type
  6934 ;;		None               void
  6935 ;; Registers used:
  6936 ;;		wreg, status,2
  6937 ;; Tracked objects:
  6938 ;;		On entry : 0/0
  6939 ;;		On exit  : 0/0
  6940 ;;		Unchanged: 0/0
  6941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6942 ;;      Params:         2       0       0       0       0
  6943 ;;      Locals:         4       0       0       0       0
  6944 ;;      Temps:          0       0       0       0       0
  6945 ;;      Totals:         6       0       0       0       0
  6946 ;;Total ram usage:        6 bytes
  6947 ;; Hardware stack levels used:    1
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_instCtrl
  6952 ;;		_initLCD
  6953 ;;		_dataCtrl
  6954 ;;		_main
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           
  6959                           ;psect for function _delay_ms
  6960  139C                     _delay_ms:	
  6961                           
  6962                           ;dumalaganDa_LE7-3.c: 17: unsigned int i,j;
  6963                           ;dumalaganDa_LE7-3.c: 18: for(i=0;i<ms_Count;i++) {
  6964                           
  6965                           ;incstack = 0
  6966                           ; Regs used in _delay_ms: [wreg+status,2]
  6967  139C  01F2               	clrf	delay_ms@i
  6968  139D  01F3               	clrf	delay_ms@i+1
  6969  139E                     l45:	
  6970  139E  0871               	movf	delay_ms@ms_Count+1,w
  6971  139F  0273               	subwf	delay_ms@i+1,w
  6972  13A0  1D03               	skipz
  6973  13A1  2BA4               	goto	u2015
  6974  13A2  0870               	movf	delay_ms@ms_Count,w
  6975  13A3  0272               	subwf	delay_ms@i,w
  6976  13A4                     u2015:	
  6977  13A4  1803               	btfsc	3,0
  6978  13A5  0008               	return
  6979                           
  6980                           ;dumalaganDa_LE7-3.c: 19: for(j=0;j<1000;j++);
  6981  13A6  01F4               	clrf	delay_ms@j
  6982  13A7  01F5               	clrf	delay_ms@j+1
  6983  13A8  3003               	movlw	3
  6984  13A9  0275               	subwf	delay_ms@j+1,w
  6985  13AA  30E8               	movlw	232
  6986  13AB  1903               	skipnz
  6987  13AC  0274               	subwf	delay_ms@j,w
  6988  13AD  1803               	btfsc	3,0
  6989  13AE  2BBC               	goto	l1684
  6990  13AF                     l1682:	
  6991  13AF  3001               	movlw	1
  6992  13B0  07F4               	addwf	delay_ms@j,f
  6993  13B1  1803               	skipnc
  6994  13B2  0AF5               	incf	delay_ms@j+1,f
  6995  13B3  3000               	movlw	0
  6996  13B4  07F5               	addwf	delay_ms@j+1,f
  6997  13B5  3003               	movlw	3
  6998  13B6  0275               	subwf	delay_ms@j+1,w
  6999  13B7  30E8               	movlw	232
  7000  13B8  1903               	skipnz
  7001  13B9  0274               	subwf	delay_ms@j,w
  7002  13BA  1C03               	skipc
  7003  13BB  2BAF               	goto	l1682
  7004  13BC                     l1684:	
  7005  13BC  3001               	movlw	1
  7006  13BD  07F2               	addwf	delay_ms@i,f
  7007  13BE  1803               	skipnc
  7008  13BF  0AF3               	incf	delay_ms@i+1,f
  7009  13C0  3000               	movlw	0
  7010  13C1  07F3               	addwf	delay_ms@i+1,f
  7011  13C2  2B9E               	goto	l45
  7012  13C3                     __end_of_delay_ms:	
  7013                           
  7014                           	psect	text25
  7015  12BE                     __ptext25:	
  7016 ;; *************** function ___lwtoft *****************
  7017 ;; Defined at:
  7018 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwtoft.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  c               2    8[COMMON] unsigned int 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;		None
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  3    8[COMMON] float 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0, pclath, cstack
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7032 ;;      Params:         3       0       0       0       0
  7033 ;;      Locals:         0       0       0       0       0
  7034 ;;      Temps:          1       0       0       0       0
  7035 ;;      Totals:         4       0       0       0       0
  7036 ;;Total ram usage:        4 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; Hardware stack levels required when called:    1
  7039 ;; This function calls:
  7040 ;;		___ftpack
  7041 ;; This function is called by:
  7042 ;;		_main
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           
  7047                           ;psect for function ___lwtoft
  7048  12BE                     ___lwtoft:	
  7049                           
  7050                           ;incstack = 0
  7051                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
  7052  12BE  0878               	movf	___lwtoft@c,w
  7053  12BF  00F0               	movwf	___ftpack@arg
  7054  12C0  0879               	movf	___lwtoft@c+1,w
  7055  12C1  00F1               	movwf	___ftpack@arg+1
  7056  12C2  01F2               	clrf	___ftpack@arg+2
  7057  12C3  308E               	movlw	142
  7058  12C4  00FB               	movwf	??___lwtoft
  7059  12C5  087B               	movf	??___lwtoft,w
  7060  12C6  00F3               	movwf	___ftpack@exp
  7061  12C7  01F4               	clrf	___ftpack@sign
  7062  12C8  160A  118A  2574   	fcall	___ftpack
  7063  12CB  0870               	movf	?___ftpack,w
  7064  12CC  00F8               	movwf	?___lwtoft
  7065  12CD  0871               	movf	?___ftpack+1,w
  7066  12CE  00F9               	movwf	?___lwtoft+1
  7067  12CF  0872               	movf	?___ftpack+2,w
  7068  12D0  00FA               	movwf	?___lwtoft+2
  7069  12D1  0008               	return
  7070  12D2                     __end_of___lwtoft:	
  7071                           
  7072                           	psect	text26
  7073  0003                     __ptext26:	
  7074 ;; *************** function ___ftdiv *****************
  7075 ;; Defined at:
  7076 ;;		line 49 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic\ftdiv.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;  f2              3    0[BANK0 ] float 
  7079 ;;  f1              3    3[BANK0 ] float 
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  f3              3   11[BANK0 ] float 
  7082 ;;  sign            1   15[BANK0 ] unsigned char 
  7083 ;;  exp             1   14[BANK0 ] unsigned char 
  7084 ;;  cntr            1   10[BANK0 ] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  3    0[BANK0 ] float 
  7087 ;; Registers used:
  7088 ;;		wreg, status,2, status,0, pclath, cstack
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7094 ;;      Params:         0       6       0       0       0
  7095 ;;      Locals:         0       6       0       0       0
  7096 ;;      Temps:          0       4       0       0       0
  7097 ;;      Totals:         0      16       0       0       0
  7098 ;;Total ram usage:       16 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    1
  7101 ;; This function calls:
  7102 ;;		___ftpack
  7103 ;; This function is called by:
  7104 ;;		_main
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108                           
  7109                           ;psect for function ___ftdiv
  7110  0003                     ___ftdiv:	
  7111                           
  7112                           ;incstack = 0
  7113                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  7114  0003  1283               	bcf	3,5	;RP0=0, select bank0
  7115  0004  1303               	bcf	3,6	;RP1=0, select bank0
  7116  0005  0823               	movf	___ftdiv@f1,w
  7117  0006  00A6               	movwf	??___ftdiv
  7118  0007  0824               	movf	___ftdiv@f1+1,w
  7119  0008  00A7               	movwf	??___ftdiv+1
  7120  0009  0825               	movf	___ftdiv@f1+2,w
  7121  000A  00A8               	movwf	??___ftdiv+2
  7122  000B  1003               	clrc
  7123  000C  0D27               	rlf	??___ftdiv+1,w
  7124  000D  0D28               	rlf	??___ftdiv+2,w
  7125  000E  00A9               	movwf	??___ftdiv+3
  7126  000F  0829               	movf	??___ftdiv+3,w
  7127  0010  00AE               	movwf	___ftdiv@exp
  7128  0011  08AE               	movf	___ftdiv@exp,f
  7129  0012  1D03               	skipz
  7130  0013  281B               	goto	l2472
  7131  0014  3000               	movlw	0
  7132  0015  00A0               	movwf	?___ftdiv
  7133  0016  3000               	movlw	0
  7134  0017  00A1               	movwf	?___ftdiv+1
  7135  0018  3000               	movlw	0
  7136  0019  00A2               	movwf	?___ftdiv+2
  7137  001A  0008               	return
  7138  001B                     l2472:	
  7139  001B  0820               	movf	___ftdiv@f2,w
  7140  001C  00A6               	movwf	??___ftdiv
  7141  001D  0821               	movf	___ftdiv@f2+1,w
  7142  001E  00A7               	movwf	??___ftdiv+1
  7143  001F  0822               	movf	___ftdiv@f2+2,w
  7144  0020  00A8               	movwf	??___ftdiv+2
  7145  0021  1003               	clrc
  7146  0022  0D27               	rlf	??___ftdiv+1,w
  7147  0023  0D28               	rlf	??___ftdiv+2,w
  7148  0024  00A9               	movwf	??___ftdiv+3
  7149  0025  0829               	movf	??___ftdiv+3,w
  7150  0026  00AF               	movwf	___ftdiv@sign
  7151  0027  08AF               	movf	___ftdiv@sign,f
  7152  0028  1D03               	skipz
  7153  0029  2831               	goto	l2478
  7154  002A  3000               	movlw	0
  7155  002B  00A0               	movwf	?___ftdiv
  7156  002C  3000               	movlw	0
  7157  002D  00A1               	movwf	?___ftdiv+1
  7158  002E  3000               	movlw	0
  7159  002F  00A2               	movwf	?___ftdiv+2
  7160  0030  0008               	return
  7161  0031                     l2478:	
  7162  0031  3000               	movlw	0
  7163  0032  00AB               	movwf	___ftdiv@f3
  7164  0033  3000               	movlw	0
  7165  0034  00AC               	movwf	___ftdiv@f3+1
  7166  0035  3000               	movlw	0
  7167  0036  00AD               	movwf	___ftdiv@f3+2
  7168  0037  3089               	movlw	137
  7169  0038  072F               	addwf	___ftdiv@sign,w
  7170  0039  00A6               	movwf	??___ftdiv
  7171  003A  0826               	movf	??___ftdiv,w
  7172  003B  02AE               	subwf	___ftdiv@exp,f
  7173  003C  0823               	movf	___ftdiv@f1,w
  7174  003D  00A6               	movwf	??___ftdiv
  7175  003E  0824               	movf	___ftdiv@f1+1,w
  7176  003F  00A7               	movwf	??___ftdiv+1
  7177  0040  0825               	movf	___ftdiv@f1+2,w
  7178  0041  00A8               	movwf	??___ftdiv+2
  7179  0042  3010               	movlw	16
  7180  0043                     u3655:	
  7181  0043  1003               	clrc
  7182  0044  0CA8               	rrf	??___ftdiv+2,f
  7183  0045  0CA7               	rrf	??___ftdiv+1,f
  7184  0046  0CA6               	rrf	??___ftdiv,f
  7185  0047  3EFF               	addlw	-1
  7186  0048  1D03               	skipz
  7187  0049  2843               	goto	u3655
  7188  004A  0826               	movf	??___ftdiv,w
  7189  004B  00A9               	movwf	??___ftdiv+3
  7190  004C  0829               	movf	??___ftdiv+3,w
  7191  004D  00AF               	movwf	___ftdiv@sign
  7192  004E  0820               	movf	___ftdiv@f2,w
  7193  004F  00A6               	movwf	??___ftdiv
  7194  0050  0821               	movf	___ftdiv@f2+1,w
  7195  0051  00A7               	movwf	??___ftdiv+1
  7196  0052  0822               	movf	___ftdiv@f2+2,w
  7197  0053  00A8               	movwf	??___ftdiv+2
  7198  0054  3010               	movlw	16
  7199  0055                     u3665:	
  7200  0055  1003               	clrc
  7201  0056  0CA8               	rrf	??___ftdiv+2,f
  7202  0057  0CA7               	rrf	??___ftdiv+1,f
  7203  0058  0CA6               	rrf	??___ftdiv,f
  7204  0059  3EFF               	addlw	-1
  7205  005A  1D03               	skipz
  7206  005B  2855               	goto	u3665
  7207  005C  0826               	movf	??___ftdiv,w
  7208  005D  00A9               	movwf	??___ftdiv+3
  7209  005E  0829               	movf	??___ftdiv+3,w
  7210  005F  06AF               	xorwf	___ftdiv@sign,f
  7211  0060  3080               	movlw	128
  7212  0061  00A6               	movwf	??___ftdiv
  7213  0062  0826               	movf	??___ftdiv,w
  7214  0063  05AF               	andwf	___ftdiv@sign,f
  7215  0064  17A4               	bsf	___ftdiv@f1+1,7
  7216  0065  30FF               	movlw	255
  7217  0066  05A3               	andwf	___ftdiv@f1,f
  7218  0067  30FF               	movlw	255
  7219  0068  05A4               	andwf	___ftdiv@f1+1,f
  7220  0069  3000               	movlw	0
  7221  006A  05A5               	andwf	___ftdiv@f1+2,f
  7222  006B  17A1               	bsf	___ftdiv@f2+1,7
  7223  006C  30FF               	movlw	255
  7224  006D  05A0               	andwf	___ftdiv@f2,f
  7225  006E  30FF               	movlw	255
  7226  006F  05A1               	andwf	___ftdiv@f2+1,f
  7227  0070  3000               	movlw	0
  7228  0071  05A2               	andwf	___ftdiv@f2+2,f
  7229  0072  3018               	movlw	24
  7230  0073  00A6               	movwf	??___ftdiv
  7231  0074  0826               	movf	??___ftdiv,w
  7232  0075  00AA               	movwf	___ftdiv@cntr
  7233  0076                     l2492:	
  7234  0076  3001               	movlw	1
  7235  0077                     u3675:	
  7236  0077  1003               	clrc
  7237  0078  0DAB               	rlf	___ftdiv@f3,f
  7238  0079  0DAC               	rlf	___ftdiv@f3+1,f
  7239  007A  0DAD               	rlf	___ftdiv@f3+2,f
  7240  007B  3EFF               	addlw	-1
  7241  007C  1D03               	skipz
  7242  007D  2877               	goto	u3675
  7243  007E  0822               	movf	___ftdiv@f2+2,w
  7244  007F  0225               	subwf	___ftdiv@f1+2,w
  7245  0080  1D03               	skipz
  7246  0081  2888               	goto	u3685
  7247  0082  0821               	movf	___ftdiv@f2+1,w
  7248  0083  0224               	subwf	___ftdiv@f1+1,w
  7249  0084  1D03               	skipz
  7250  0085  2888               	goto	u3685
  7251  0086  0820               	movf	___ftdiv@f2,w
  7252  0087  0223               	subwf	___ftdiv@f1,w
  7253  0088                     u3685:	
  7254  0088  1C03               	skipc
  7255  0089  2895               	goto	l2500
  7256  008A  0820               	movf	___ftdiv@f2,w
  7257  008B  02A3               	subwf	___ftdiv@f1,f
  7258  008C  0821               	movf	___ftdiv@f2+1,w
  7259  008D  1C03               	skipc
  7260  008E  0F21               	incfsz	___ftdiv@f2+1,w
  7261  008F  02A4               	subwf	___ftdiv@f1+1,f
  7262  0090  0822               	movf	___ftdiv@f2+2,w
  7263  0091  1C03               	skipc
  7264  0092  0A22               	incf	___ftdiv@f2+2,w
  7265  0093  02A5               	subwf	___ftdiv@f1+2,f
  7266  0094  142B               	bsf	___ftdiv@f3,0
  7267  0095                     l2500:	
  7268  0095  3001               	movlw	1
  7269  0096                     u3695:	
  7270  0096  1003               	clrc
  7271  0097  0DA3               	rlf	___ftdiv@f1,f
  7272  0098  0DA4               	rlf	___ftdiv@f1+1,f
  7273  0099  0DA5               	rlf	___ftdiv@f1+2,f
  7274  009A  3EFF               	addlw	-1
  7275  009B  1D03               	skipz
  7276  009C  2896               	goto	u3695
  7277  009D  3001               	movlw	1
  7278  009E  02AA               	subwf	___ftdiv@cntr,f
  7279  009F  1D03               	btfss	3,2
  7280  00A0  2876               	goto	l2492
  7281  00A1  082B               	movf	___ftdiv@f3,w
  7282  00A2  00F0               	movwf	___ftpack@arg
  7283  00A3  082C               	movf	___ftdiv@f3+1,w
  7284  00A4  00F1               	movwf	___ftpack@arg+1
  7285  00A5  082D               	movf	___ftdiv@f3+2,w
  7286  00A6  00F2               	movwf	___ftpack@arg+2
  7287  00A7  082E               	movf	___ftdiv@exp,w
  7288  00A8  00A6               	movwf	??___ftdiv
  7289  00A9  0826               	movf	??___ftdiv,w
  7290  00AA  00F3               	movwf	___ftpack@exp
  7291  00AB  082F               	movf	___ftdiv@sign,w
  7292  00AC  00A7               	movwf	??___ftdiv+1
  7293  00AD  0827               	movf	??___ftdiv+1,w
  7294  00AE  00F4               	movwf	___ftpack@sign
  7295  00AF  160A  118A  2574   	fcall	___ftpack
  7296  00B2  0870               	movf	?___ftpack,w
  7297  00B3  1283               	bcf	3,5	;RP0=0, select bank0
  7298  00B4  1303               	bcf	3,6	;RP1=0, select bank0
  7299  00B5  00A0               	movwf	?___ftdiv
  7300  00B6  0871               	movf	?___ftpack+1,w
  7301  00B7  00A1               	movwf	?___ftdiv+1
  7302  00B8  0872               	movf	?___ftpack+2,w
  7303  00B9  00A2               	movwf	?___ftdiv+2
  7304  00BA  0008               	return
  7305  00BB                     __end_of___ftdiv:	
  7306                           
  7307                           	psect	text27
  7308  1574                     __ptext27:	
  7309 ;; *************** function ___ftpack *****************
  7310 ;; Defined at:
  7311 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;  arg             3    0[COMMON] unsigned um
  7314 ;;  exp             1    3[COMMON] unsigned char 
  7315 ;;  sign            1    4[COMMON] unsigned char 
  7316 ;; Auto vars:     Size  Location     Type
  7317 ;;		None
  7318 ;; Return value:  Size  Location     Type
  7319 ;;                  3    0[COMMON] float 
  7320 ;; Registers used:
  7321 ;;		wreg, status,2, status,0
  7322 ;; Tracked objects:
  7323 ;;		On entry : 0/0
  7324 ;;		On exit  : 0/0
  7325 ;;		Unchanged: 0/0
  7326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7327 ;;      Params:         5       0       0       0       0
  7328 ;;      Locals:         0       0       0       0       0
  7329 ;;      Temps:          3       0       0       0       0
  7330 ;;      Totals:         8       0       0       0       0
  7331 ;;Total ram usage:        8 bytes
  7332 ;; Hardware stack levels used:    1
  7333 ;; This function calls:
  7334 ;;		Nothing
  7335 ;; This function is called by:
  7336 ;;		___ftadd
  7337 ;;		___ftdiv
  7338 ;;		___ftmul
  7339 ;;		___lltoft
  7340 ;;		___lwtoft
  7341 ;; This function uses a non-reentrant model
  7342 ;;
  7343                           
  7344                           
  7345                           ;psect for function ___ftpack
  7346  1574                     ___ftpack:	
  7347                           
  7348                           ;incstack = 0
  7349                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7350  1574  0873               	movf	___ftpack@exp,w
  7351  1575  1903               	btfsc	3,2
  7352  1576  2D7C               	goto	l1648
  7353  1577  0872               	movf	___ftpack@arg+2,w
  7354  1578  0471               	iorwf	___ftpack@arg+1,w
  7355  1579  0470               	iorwf	___ftpack@arg,w
  7356  157A  1D03               	skipz
  7357  157B  2D8F               	goto	l1654
  7358  157C                     l1648:	
  7359  157C  3000               	movlw	0
  7360  157D  00F0               	movwf	?___ftpack
  7361  157E  3000               	movlw	0
  7362  157F  00F1               	movwf	?___ftpack+1
  7363  1580  3000               	movlw	0
  7364  1581  00F2               	movwf	?___ftpack+2
  7365  1582  0008               	return
  7366  1583                     l1652:	
  7367  1583  3001               	movlw	1
  7368  1584  00F5               	movwf	??___ftpack
  7369  1585  0875               	movf	??___ftpack,w
  7370  1586  07F3               	addwf	___ftpack@exp,f
  7371  1587  3001               	movlw	1
  7372  1588                     u1905:	
  7373  1588  1003               	clrc
  7374  1589  0CF2               	rrf	___ftpack@arg+2,f
  7375  158A  0CF1               	rrf	___ftpack@arg+1,f
  7376  158B  0CF0               	rrf	___ftpack@arg,f
  7377  158C  3EFF               	addlw	-1
  7378  158D  1D03               	skipz
  7379  158E  2D88               	goto	u1905
  7380  158F                     l1654:	
  7381  158F  30FE               	movlw	254
  7382  1590  0572               	andwf	___ftpack@arg+2,w
  7383  1591  1903               	btfsc	3,2
  7384  1592  2DAA               	goto	l441
  7385  1593  2D83               	goto	l1652
  7386  1594                     l1656:	
  7387  1594  3001               	movlw	1
  7388  1595  00F5               	movwf	??___ftpack
  7389  1596  0875               	movf	??___ftpack,w
  7390  1597  07F3               	addwf	___ftpack@exp,f
  7391  1598  3001               	movlw	1
  7392  1599  07F0               	addwf	___ftpack@arg,f
  7393  159A  3000               	movlw	0
  7394  159B  1803               	skipnc
  7395  159C  3001               	movlw	1
  7396  159D  07F1               	addwf	___ftpack@arg+1,f
  7397  159E  3000               	movlw	0
  7398  159F  1803               	skipnc
  7399  15A0  3001               	movlw	1
  7400  15A1  07F2               	addwf	___ftpack@arg+2,f
  7401  15A2  3001               	movlw	1
  7402  15A3                     u1925:	
  7403  15A3  1003               	clrc
  7404  15A4  0CF2               	rrf	___ftpack@arg+2,f
  7405  15A5  0CF1               	rrf	___ftpack@arg+1,f
  7406  15A6  0CF0               	rrf	___ftpack@arg,f
  7407  15A7  3EFF               	addlw	-1
  7408  15A8  1D03               	skipz
  7409  15A9  2DA3               	goto	u1925
  7410  15AA                     l441:	
  7411  15AA  30FF               	movlw	255
  7412  15AB  0572               	andwf	___ftpack@arg+2,w
  7413  15AC  1903               	btfsc	3,2
  7414  15AD  2DB9               	goto	l1664
  7415  15AE  2D94               	goto	l1656
  7416  15AF                     l1662:	
  7417  15AF  3001               	movlw	1
  7418  15B0  02F3               	subwf	___ftpack@exp,f
  7419  15B1  3001               	movlw	1
  7420  15B2                     u1945:	
  7421  15B2  1003               	clrc
  7422  15B3  0DF0               	rlf	___ftpack@arg,f
  7423  15B4  0DF1               	rlf	___ftpack@arg+1,f
  7424  15B5  0DF2               	rlf	___ftpack@arg+2,f
  7425  15B6  3EFF               	addlw	-1
  7426  15B7  1D03               	skipz
  7427  15B8  2DB2               	goto	u1945
  7428  15B9                     l1664:	
  7429  15B9  1FF1               	btfss	___ftpack@arg+1,7
  7430  15BA  2DAF               	goto	l1662
  7431  15BB  1873               	btfsc	___ftpack@exp,0
  7432  15BC  2DC3               	goto	l447
  7433  15BD  30FF               	movlw	255
  7434  15BE  05F0               	andwf	___ftpack@arg,f
  7435  15BF  307F               	movlw	127
  7436  15C0  05F1               	andwf	___ftpack@arg+1,f
  7437  15C1  30FF               	movlw	255
  7438  15C2  05F2               	andwf	___ftpack@arg+2,f
  7439  15C3                     l447:	
  7440  15C3  1003               	clrc
  7441  15C4  0CF3               	rrf	___ftpack@exp,f
  7442  15C5  0873               	movf	___ftpack@exp,w
  7443  15C6  00F5               	movwf	??___ftpack
  7444  15C7  01F6               	clrf	??___ftpack+1
  7445  15C8  01F7               	clrf	??___ftpack+2
  7446  15C9  3010               	movlw	16
  7447  15CA                     u1975:	
  7448  15CA  1003               	clrc
  7449  15CB  0DF5               	rlf	??___ftpack,f
  7450  15CC  0DF6               	rlf	??___ftpack+1,f
  7451  15CD  0DF7               	rlf	??___ftpack+2,f
  7452  15CE  3EFF               	addlw	-1
  7453  15CF  1D03               	skipz
  7454  15D0  2DCA               	goto	u1975
  7455  15D1  0875               	movf	??___ftpack,w
  7456  15D2  04F0               	iorwf	___ftpack@arg,f
  7457  15D3  0876               	movf	??___ftpack+1,w
  7458  15D4  04F1               	iorwf	___ftpack@arg+1,f
  7459  15D5  0877               	movf	??___ftpack+2,w
  7460  15D6  04F2               	iorwf	___ftpack@arg+2,f
  7461  15D7  0874               	movf	___ftpack@sign,w
  7462  15D8  1903               	btfsc	3,2
  7463  15D9  0008               	return
  7464  15DA  17F2               	bsf	___ftpack@arg+2,7
  7465  15DB  0008               	return
  7466  15DC                     __end_of___ftpack:	
  7467                           
  7468                           	psect	text28
  7469  124E                     __ptext28:	
  7470 ;; *************** function _I2C_Stop *****************
  7471 ;; Defined at:
  7472 ;;		line 72 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;		None
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;		None
  7477 ;; Return value:  Size  Location     Type
  7478 ;;		None               void
  7479 ;; Registers used:
  7480 ;;		wreg, status,2, status,0, pclath, cstack
  7481 ;; Tracked objects:
  7482 ;;		On entry : 0/0
  7483 ;;		On exit  : 0/0
  7484 ;;		Unchanged: 0/0
  7485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7486 ;;      Params:         0       0       0       0       0
  7487 ;;      Locals:         0       0       0       0       0
  7488 ;;      Temps:          0       0       0       0       0
  7489 ;;      Totals:         0       0       0       0       0
  7490 ;;Total ram usage:        0 bytes
  7491 ;; Hardware stack levels used:    1
  7492 ;; Hardware stack levels required when called:    1
  7493 ;; This function calls:
  7494 ;;		_I2C_Wait
  7495 ;; This function is called by:
  7496 ;;		_main
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500                           
  7501                           ;psect for function _I2C_Stop
  7502  124E                     _I2C_Stop:	
  7503                           
  7504                           ;dumalaganDa_LE7-3.c: 74: I2C_Wait();
  7505                           
  7506                           ;incstack = 0
  7507                           ; Regs used in _I2C_Stop: [wreg+status,2+status,0+pclath+cstack]
  7508  124E  160A  118A  2255   	fcall	_I2C_Wait
  7509                           
  7510                           ;dumalaganDa_LE7-3.c: 76: PEN = 1;
  7511  1251  1683               	bsf	3,5	;RP0=1, select bank1
  7512  1252  1303               	bcf	3,6	;RP1=0, select bank1
  7513  1253  1511               	bsf	17,2	;volatile
  7514  1254  0008               	return
  7515  1255                     __end_of_I2C_Stop:	
  7516                           
  7517                           	psect	text29
  7518  1247                     __ptext29:	
  7519 ;; *************** function _I2C_Start *****************
  7520 ;; Defined at:
  7521 ;;		line 65 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
  7522 ;; Parameters:    Size  Location     Type
  7523 ;;		None
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;		None
  7526 ;; Return value:  Size  Location     Type
  7527 ;;		None               void
  7528 ;; Registers used:
  7529 ;;		wreg, status,2, status,0, pclath, cstack
  7530 ;; Tracked objects:
  7531 ;;		On entry : 0/0
  7532 ;;		On exit  : 0/0
  7533 ;;		Unchanged: 0/0
  7534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7535 ;;      Params:         0       0       0       0       0
  7536 ;;      Locals:         0       0       0       0       0
  7537 ;;      Temps:          0       0       0       0       0
  7538 ;;      Totals:         0       0       0       0       0
  7539 ;;Total ram usage:        0 bytes
  7540 ;; Hardware stack levels used:    1
  7541 ;; Hardware stack levels required when called:    1
  7542 ;; This function calls:
  7543 ;;		_I2C_Wait
  7544 ;; This function is called by:
  7545 ;;		_main
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           
  7550                           ;psect for function _I2C_Start
  7551  1247                     _I2C_Start:	
  7552                           
  7553                           ;dumalaganDa_LE7-3.c: 67: I2C_Wait();
  7554                           
  7555                           ;incstack = 0
  7556                           ; Regs used in _I2C_Start: [wreg+status,2+status,0+pclath+cstack]
  7557  1247  160A  118A  2255   	fcall	_I2C_Wait
  7558                           
  7559                           ;dumalaganDa_LE7-3.c: 69: SEN = 1;
  7560  124A  1683               	bsf	3,5	;RP0=1, select bank1
  7561  124B  1303               	bcf	3,6	;RP1=0, select bank1
  7562  124C  1411               	bsf	17,0	;volatile
  7563  124D  0008               	return
  7564  124E                     __end_of_I2C_Start:	
  7565                           
  7566                           	psect	text30
  7567  0800                     __ptext30:	
  7568 ;; *************** function _I2C_Send *****************
  7569 ;; Defined at:
  7570 ;;		line 86 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;  data            1    wreg     unsigned char 
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;  data            1    0[COMMON] unsigned char 
  7575 ;; Return value:  Size  Location     Type
  7576 ;;		None               void
  7577 ;; Registers used:
  7578 ;;		wreg, status,2, status,0, pclath, cstack
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7584 ;;      Params:         0       0       0       0       0
  7585 ;;      Locals:         1       0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0
  7587 ;;      Totals:         1       0       0       0       0
  7588 ;;Total ram usage:        1 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; Hardware stack levels required when called:    1
  7591 ;; This function calls:
  7592 ;;		_I2C_Wait
  7593 ;; This function is called by:
  7594 ;;		_main
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           
  7599                           ;psect for function _I2C_Send
  7600  0800                     _I2C_Send:	
  7601                           
  7602                           ;incstack = 0
  7603                           ; Regs used in _I2C_Send: [wreg+status,2+status,0+pclath+cstack]
  7604                           ;I2C_Send@data stored from wreg
  7605  0800  00F0               	movwf	I2C_Send@data
  7606                           
  7607                           ;dumalaganDa_LE7-3.c: 88: I2C_Wait();
  7608  0801  160A  118A  2255   	fcall	_I2C_Wait
  7609                           
  7610                           ;dumalaganDa_LE7-3.c: 90: SSPBUF = data;
  7611  0804  0870               	movf	I2C_Send@data,w
  7612  0805  1283               	bcf	3,5	;RP0=0, select bank0
  7613  0806  1303               	bcf	3,6	;RP1=0, select bank0
  7614  0807  0093               	movwf	19	;volatile
  7615  0808  0008               	return
  7616  0809                     __end_of_I2C_Send:	
  7617                           
  7618                           	psect	text31
  7619  1240                     __ptext31:	
  7620 ;; *************** function _I2C_RepeatedStart *****************
  7621 ;; Defined at:
  7622 ;;		line 79 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;		None
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;		None
  7627 ;; Return value:  Size  Location     Type
  7628 ;;		None               void
  7629 ;; Registers used:
  7630 ;;		wreg, status,2, status,0, pclath, cstack
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7636 ;;      Params:         0       0       0       0       0
  7637 ;;      Locals:         0       0       0       0       0
  7638 ;;      Temps:          0       0       0       0       0
  7639 ;;      Totals:         0       0       0       0       0
  7640 ;;Total ram usage:        0 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; Hardware stack levels required when called:    1
  7643 ;; This function calls:
  7644 ;;		_I2C_Wait
  7645 ;; This function is called by:
  7646 ;;		_main
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           
  7651                           ;psect for function _I2C_RepeatedStart
  7652  1240                     _I2C_RepeatedStart:	
  7653                           
  7654                           ;dumalaganDa_LE7-3.c: 81: I2C_Wait();
  7655                           
  7656                           ;incstack = 0
  7657                           ; Regs used in _I2C_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  7658  1240  160A  118A  2255   	fcall	_I2C_Wait
  7659                           
  7660                           ;dumalaganDa_LE7-3.c: 83: RSEN = 1;
  7661  1243  1683               	bsf	3,5	;RP0=1, select bank1
  7662  1244  1303               	bcf	3,6	;RP1=0, select bank1
  7663  1245  1491               	bsf	17,1	;volatile
  7664  1246  0008               	return
  7665  1247                     __end_of_I2C_RepeatedStart:	
  7666                           
  7667                           	psect	text32
  7668  132A                     __ptext32:	
  7669 ;; *************** function _I2C_Receive *****************
  7670 ;; Defined at:
  7671 ;;		line 93 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
  7672 ;; Parameters:    Size  Location     Type
  7673 ;;  ack             1    wreg     unsigned char 
  7674 ;; Auto vars:     Size  Location     Type
  7675 ;;  ack             1    1[COMMON] unsigned char 
  7676 ;;  temp            1    2[COMMON] unsigned char 
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      unsigned char 
  7679 ;; Registers used:
  7680 ;;		wreg, status,2, status,0, pclath, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7686 ;;      Params:         0       0       0       0       0
  7687 ;;      Locals:         2       0       0       0       0
  7688 ;;      Temps:          1       0       0       0       0
  7689 ;;      Totals:         3       0       0       0       0
  7690 ;;Total ram usage:        3 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    1
  7693 ;; This function calls:
  7694 ;;		_I2C_Wait
  7695 ;; This function is called by:
  7696 ;;		_main
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           
  7701                           ;psect for function _I2C_Receive
  7702  132A                     _I2C_Receive:	
  7703                           
  7704                           ;incstack = 0
  7705                           ; Regs used in _I2C_Receive: [wreg+status,2+status,0+pclath+cstack]
  7706                           ;I2C_Receive@ack stored from wreg
  7707  132A  00F1               	movwf	I2C_Receive@ack
  7708                           
  7709                           ;dumalaganDa_LE7-3.c: 94: unsigned char temp;
  7710                           ;dumalaganDa_LE7-3.c: 95: I2C_Wait();
  7711  132B  160A  118A  2255  160A  118A  	fcall	_I2C_Wait
  7712                           
  7713                           ;dumalaganDa_LE7-3.c: 96: RCEN = 1;
  7714  1330  1683               	bsf	3,5	;RP0=1, select bank1
  7715  1331  1303               	bcf	3,6	;RP1=0, select bank1
  7716  1332  1591               	bsf	17,3	;volatile
  7717                           
  7718                           ;dumalaganDa_LE7-3.c: 97: I2C_Wait();
  7719  1333  160A  118A  2255  160A  118A  	fcall	_I2C_Wait
  7720                           
  7721                           ;dumalaganDa_LE7-3.c: 98: temp = SSPBUF;
  7722  1338  1283               	bcf	3,5	;RP0=0, select bank0
  7723  1339  1303               	bcf	3,6	;RP1=0, select bank0
  7724  133A  0813               	movf	19,w	;volatile
  7725  133B  00F0               	movwf	??_I2C_Receive
  7726  133C  0870               	movf	??_I2C_Receive,w
  7727  133D  00F2               	movwf	I2C_Receive@temp
  7728                           
  7729                           ;dumalaganDa_LE7-3.c: 99: I2C_Wait();
  7730  133E  160A  118A  2255  160A  118A  	fcall	_I2C_Wait
  7731                           
  7732                           ;dumalaganDa_LE7-3.c: 100: ACKDT = (ack)?0:1;
  7733  1343  08F1               	movf	I2C_Receive@ack,f
  7734  1344  1D03               	btfss	3,2
  7735  1345  2B4A               	goto	u3300
  7736  1346  1683               	bsf	3,5	;RP0=1, select bank1
  7737  1347  1303               	bcf	3,6	;RP1=0, select bank1
  7738  1348  1691               	bsf	17,5	;volatile
  7739  1349  2B4D               	goto	l2286
  7740  134A                     u3300:	
  7741  134A  1683               	bsf	3,5	;RP0=1, select bank1
  7742  134B  1303               	bcf	3,6	;RP1=0, select bank1
  7743  134C  1291               	bcf	17,5	;volatile
  7744  134D                     l2286:	
  7745                           
  7746                           ;dumalaganDa_LE7-3.c: 101: ACKEN = 1;
  7747  134D  1611               	bsf	17,4	;volatile
  7748                           
  7749                           ;dumalaganDa_LE7-3.c: 102: return temp;
  7750  134E  0872               	movf	I2C_Receive@temp,w
  7751  134F  0008               	return
  7752  1350                     __end_of_I2C_Receive:	
  7753                           
  7754                           	psect	text33
  7755  1255                     __ptext33:	
  7756 ;; *************** function _I2C_Wait *****************
  7757 ;; Defined at:
  7758 ;;		line 60 in file "D:\JinBus\CpE 3201\Practical Activity #7\CpE 3201-LE7-3\dumalaganDa_LE7-3.c"
  7759 ;; Parameters:    Size  Location     Type
  7760 ;;		None
  7761 ;; Auto vars:     Size  Location     Type
  7762 ;;		None
  7763 ;; Return value:  Size  Location     Type
  7764 ;;		None               void
  7765 ;; Registers used:
  7766 ;;		wreg, status,2
  7767 ;; Tracked objects:
  7768 ;;		On entry : 0/0
  7769 ;;		On exit  : 0/0
  7770 ;;		Unchanged: 0/0
  7771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7772 ;;      Params:         0       0       0       0       0
  7773 ;;      Locals:         0       0       0       0       0
  7774 ;;      Temps:          0       0       0       0       0
  7775 ;;      Totals:         0       0       0       0       0
  7776 ;;Total ram usage:        0 bytes
  7777 ;; Hardware stack levels used:    1
  7778 ;; This function calls:
  7779 ;;		Nothing
  7780 ;; This function is called by:
  7781 ;;		_I2C_Start
  7782 ;;		_I2C_Stop
  7783 ;;		_I2C_RepeatedStart
  7784 ;;		_I2C_Send
  7785 ;;		_I2C_Receive
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           
  7790                           ;psect for function _I2C_Wait
  7791  1255                     _I2C_Wait:	
  7792  1255                     l1920:	
  7793                           ;dumalaganDa_LE7-3.c: 62: while((SSPCON2 & 0x1F) || (SSPSTAT & 0x04));
  7794                           
  7795                           ;incstack = 0
  7796                           ; Regs used in _I2C_Wait: [wreg+status,2]
  7797                           
  7798  1255  1683               	bsf	3,5	;RP0=1, select bank1
  7799  1256  1303               	bcf	3,6	;RP1=0, select bank1
  7800  1257  0811               	movf	17,w	;volatile
  7801  1258  391F               	andlw	31
  7802  1259  1903               	btfsc	3,2
  7803  125A  1914               	btfsc	20,2	;volatile
  7804  125B  2A55               	goto	l1920
  7805  125C  0008               	return
  7806  125D                     __end_of_I2C_Wait:	
  7807  007E                     btemp	set	126	;btemp
  7808  007E                     wtemp	set	126
  7809  007E                     wtemp0	set	126
  7810  0080                     wtemp1	set	128
  7811  0082                     wtemp2	set	130
  7812  0084                     wtemp3	set	132
  7813  0086                     wtemp4	set	134
  7814  0088                     wtemp5	set	136
  7815  007F                     wtemp6	set	127
  7816  007E                     ttemp	set	126
  7817  007E                     ttemp0	set	126
  7818  0081                     ttemp1	set	129
  7819  0084                     ttemp2	set	132
  7820  0087                     ttemp3	set	135
  7821  007F                     ttemp4	set	127
  7822  007E                     ltemp	set	126
  7823  007E                     ltemp0	set	126
  7824  0082                     ltemp1	set	130
  7825  0086                     ltemp2	set	134
  7826  0080                     ltemp3	set	128


Data Sizes:
    Strings     3
    Constant    118
    Data        25
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     77      77
    BANK1            80     38      38
    BANK3            96     49      74
    BANK2            96      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> main@msgTemperature(BANK3[14]), main@msgHumidity(BANK3[11]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 14
		 -> main@msgTemperature(BANK3[14]), main@msgHumidity(BANK3[11]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> main@temperatureStr(BANK3[4]), main@humidityStr(BANK3[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S136$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___lltoft
    _sprintf->__div_to_l_
    _scale->___bmul
    _fround->___bmul
    ___ftmul->___bmul
    ___bmul->___awdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___ftsub->___lltoft
    _initLCD->_instCtrl
    _instCtrl->_delay_ms
    _dataCtrl->_delay_ms
    ___lwtoft->___ftpack
    ___ftdiv->___lwtoft

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___ftmul->___ftdiv
    ___bmul->___awdiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                53    53      0   47331
                                             34 BANK1      4     4      0
                                              0 BANK3     49    49      0
                        _I2C_Receive
                  _I2C_RepeatedStart
                           _I2C_Send
                          _I2C_Start
                           _I2C_Stop
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lwtoft
                           _dataCtrl
                           _delay_ms
                            _initLCD
                    _init_I2C_Master
                           _instCtrl
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               8     6      2     144
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             50    46      4   33518
                                             67 BANK0     10     6      4
                                              0 BANK1     34    34      0
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               12     9      3    7405
                                             32 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (2) _fround                                              19    16      3    7207
                                             32 BANK0     16    13      3
                            ___awdiv
                            ___awmod
                             ___bmul
                            ___ftmul
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             16    10      6    3746
                                             16 BANK0     16    10      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                             ___bmul (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     560
                                             12 COMMON     1     1      0
                                              4 BANK0      3     2      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1250
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1360
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         16    10      6     409
                                              0 COMMON    10     4      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          20    14      6     552
                                              0 COMMON    14     8      6
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1170
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             6     2      4    1846
                                              8 COMMON     6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     477
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     374
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     411
                                             41 BANK0     14    10      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3139
                                             61 BANK0      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    2988
                                             48 BANK0     13     7      6
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMMON     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     560
                                              0 COMMON    12     6      6
 ---------------------------------------------------------------------------------
 (1) _init_I2C_Master                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              0     0      0     842
                           _delay_ms
                           _instCtrl
 ---------------------------------------------------------------------------------
 (1) _instCtrl                                             1     1      0     432
                                              6 COMMON     1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (1) _dataCtrl                                             1     1      0     432
                                              6 COMMON     1     1      0
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             6     4      2     410
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             4     1      3    1852
                                              8 COMMON     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             16    10      6    2216
                                              0 BANK0     16    10      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1724
                                              0 COMMON     8     3      5
 ---------------------------------------------------------------------------------
 (1) _I2C_Stop                                             0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Start                                            0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Send                                             1     1      0      22
                                              0 COMMON     1     1      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_RepeatedStart                                    0     0      0       0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Receive                                          3     3      0      45
                                              0 COMMON     3     3      0
                           _I2C_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Receive
     _I2C_Wait
   _I2C_RepeatedStart
     _I2C_Wait
   _I2C_Send
     _I2C_Wait
   _I2C_Start
     _I2C_Wait
   _I2C_Stop
     _I2C_Wait
   ___ftadd
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
   ___ftdiv
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___bmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     ___ftdiv (ARG)
       ___ftpack
       ___lwtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lwtoft (ARG)
       ___ftpack
   ___lwtoft
     ___ftpack
   _dataCtrl
     _delay_ms
   _delay_ms
   _initLCD
     _delay_ms
     _instCtrl
       _delay_ms
   _init_I2C_Master
   _instCtrl
     _delay_ms
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___bmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftdiv (ARG)
         ___ftpack
         ___lwtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___bmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___bmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             ___ftdiv (ARG)
               ___ftpack
               ___lwtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___bmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___bmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___ftdiv (ARG)
             ___ftpack
             ___lwtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___bmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___bmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___ftdiv (ARG)
           ___ftpack
           ___lwtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
   _strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     31      4A       9       77.1%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     26      26       7       47.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4D      4D       5       96.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      CB      12        0.0%
ABS                  0      0      CB       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Mar 28 13:27:30 2023

                         pc 0002              ___bmul@product 0025          __size_of_I2C_Start 0007  
               __CFG_CP$OFF 0000                          l45 139E                          l86 0D1C  
              ___awdiv@sign 0021                          fsr 0004         ___wmul@multiplicand 0072  
              ___ftadd@exp1 005C                ___ftadd@exp2 005B                ___ftadd@sign 005A  
                       l137 0280                         l162 05B4                         l421 0A1A  
                       l263 1311                         l441 15AA                         l470 08DC  
                       l447 15C3                         l496 169C                         _RD0 0040  
                       _RD1 0041                         _RD2 0042                         _PEN 048A  
              __CFG_CPD$OFF 0000                         _SEN 0488                         fsr0 0004  
                       indf 0000                ___awmod@sign 0076        __size_of_I2C_Receive 0026  
              __CFG_FOSC$XT 0000                 _sprintf$149 00A3                 _sprintf$578 00A0  
              __CFG_LVP$OFF 0000                ___ftdiv@cntr 002A                ___ftdiv@sign 002F  
                      l2110 1483                        l2014 16DD                        l2006 16BD  
                      l2200 155E                        l2032 1716                        l2024 16F9  
                      l2114 14AA                        l2034 1721                        l2026 1709  
                      l2204 156B                        l2220 13F9                        l2052 097D  
                      l2036 1724                        l2214 13CB                        l2062 09C4  
                      l2046 095E                        l2302 0282                        l2216 13DB  
                      l2224 1406                        l2232 080D                        l2080 0A4B  
                      l2304 0298                        l2146 15F6                        l2234 081F  
                      l2090 0A66                        l2410 063B                        l2500 0095  
                      l2180 1661                        l2172 1645                        l2164 1628  
                      l2404 0622                        l2174 1650                        l2166 1638  
                      l2190 1526                        l2086 0A58                        l2078 0A3B  
                      l1710 14C5                        l2422 0688                        l2350 042F  
                      l2342 03CC                        l2334 035F                        l2318 02ED  
                      l2176 1653                        l2192 1536                        l2096 1309  
                      l2088 0A63                        l2416 0655                        l1802 0873  
                      l2442 07C2                        l2362 0484                        l2346 03E9  
                      l2450 0262                        l1652 1583                        l1820 08A2  
                      l1716 14D0                        l2436 07A9                        l2444 07C7  
                      l2452 07EB                        l2460 137B                        l2286 134D  
                      l1662 15AF                        l1654 158F                        l1822 08AE  
                      l1814 088D                        l1742 150F                        l1734 14FC  
                      l1726 14D8                        l2374 04CE                        l2358 046D  
                      l2462 1386                        l1920 1255                        l1664 15B9  
                      l1656 1594                        l1648 157C                        l2472 001B  
                      l1832 08CC                        l1824 08B3                        l1728 14E6  
                      l2392 0593                        l2384 0543                        l1682 13AF  
                      l1842 0900                        l1834 08D8                        l1826 08B7  
                      l1738 1507                        l1754 1419                        l2378 053D  
                      l2298 027D                        l2570 0E86                        l2492 0076  
                      l1684 13BC                        l1852 0923                        l1780 1455  
                      l1772 1442                        l1692 12B5                        l2478 0031  
                      l1838 08EE                        l1766 1426                        l1758 1420  
                      l1862 1745                        l1942 0225                        l1934 019B  
                      l2590 0FB6                        l1792 085D                        l1768 1434  
                      l1776 144D                        l1688 12AF                        l1880 179A  
                      l2568 0E63                        l1796 0864                        l1892 17C2  
                      l1884 17AA                        l1868 175B                        l1964 0BA3  
                      l2588 0F93                        l1982 0CEF                        l1958 0B35  
                      l1992 1684                        l1896 17D2                        l1976 0C81  
                      l1968 0BC2                        STR_1 107C                        STR_2 107C  
                      u2015 13A4                        u3001 1476                        u2105 14F3  
                      u3002 1477                        u3003 147C                        u2115 14FD  
                      u3004 147D                        u3021 149D                        u2205 1443  
                      u3022 149E                        u3023 14A3                        u3024 14A4  
                      u2075 14DB                        u3300 134A                        u2325 088E  
                      u3125 1647                        u3205 155F                        u2415 08CD  
                      u2095 14E7                        u2175 1429                        u3065 15FD  
                      u2505 1779                        u2355 08A3                        u3235 13CF  
                      u2195 143A                        u3165 152A                        u3405 03F4  
                      u3095 1629                        u3255 13E9                        u2535 17AB  
                      u3415 043A                        u1905 1588                        u2385 08B8  
                      u3185 1538                        u3265 13FA                        u2545 17B3  
                      u3195 154D                        u3515 05C4                        u1925 15A3  
                      u3285 0812                        u2725 16BF                        u3445 046B  
                      u3365 0307                        u3710 0D3C                        u2815 1718  
                      u2735 16D0                        u2495 1767                        u3535 0644  
                      u3720 0D51                        u1945 15B2                        u2905 0A3C  
                      u2745 16DE                        u2585 17D3                        u3545 0651  
                      u2595 17DB                        u3475 0548                        u3565 06FD  
                      u3485 0585                        u1975 15CA                        u3655 0043  
                      u2935 0A5A                        u2855 09C6                        u3575 076F  
                      u3735 0E71                        u3665 0055                        u2865 09F5  
                      u2785 16FA                        u3745 0FA1                        u3675 0077  
                      _RCEN 048B                        u3685 0088                        u2965 1312  
                      u3695 0096                        u2975 1319                        _RSEN 0489  
              __CFG_WRT$OFF 0000                        _main 0D0E                ___ftpack@arg 0070  
              ___ftpack@exp 0073            __end_of_I2C_Send 0809                        btemp 007E  
          __end_of_I2C_Wait 125D            __end_of_I2C_Stop 1255               __CFG_BOREN$ON 0000  
                      ltemp 007E                        start 0000                        ttemp 007E  
                      wtemp 007E           ___bmul@multiplier 0026                ___ftmul@cntr 003E  
              ___ftmul@sign 003F                ___fttol@exp1 0056                ___fttol@lval 0052  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
           __end_of___awdiv 1516             __end_of___ftadd 093D               __CFG_WDTE$OFF 0000  
           __end_of___awmod 145C             __end_of___ftdiv 00BB             __end_of___ftneg 1265  
           __end_of___lldiv 1574             __end_of___ftmul 1800             ___awdiv@divisor 0077  
           __end_of___llmod 140F             __end_of___ftsub 1307             __end_of___fttol 166A  
           ___awdiv@counter 0020                       _PORTB 0006                       _TRISB 0086  
                     _TRISD 0088               __CFG_PWRTE$ON 0000                ___lltoft@exp 007D  
           __end_of_initLCD 1376             __end_of_dpowers 102E                       _scale 0A6F  
             ___ftpack@sign 0074          main@temperatureStr 01B3                       main@i 01BF  
         __end_of_I2C_Start 124E                       pclath 000A                       ltemp0 007E  
                     ltemp1 0082                       ltemp2 0086                       ltemp3 0080  
                     ttemp0 007E                       ttemp1 0081                       ttemp2 0084  
                     ttemp3 0087                       ttemp4 007F                       status 0003  
                     wtemp0 007E                       wtemp1 0080                       wtemp2 0082  
                     wtemp3 0084                       wtemp4 0086                       wtemp5 0088  
                     wtemp6 007F             __end_of_sprintf 07F0             __initialization 07F0  
              __end_of_main 1000                      ??_main 00C2               ___fttol@sign1 0051  
      __size_of__tdiv_to_l_ 00C3            ___llmod@dividend 0074                      ?_scale 0040  
          ___awdiv@dividend 0079            __end_of___ftpack 15DC            __end_of___lltoft 0834  
          __end_of___lwtoft 12D2                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
          __end_of_dataCtrl 1298            __end_of_delay_ms 13C3            __end_of__powers_ 107C  
                    ___bmul 12AB                      ___ftge 145C                      ___wmul 1307  
                 ??___awdiv 007B                   ??___ftadd 0056                   ??___awmod 0074  
                 ??___ftdiv 0026                   ??___ftneg 0073                   ??___lldiv 0078  
                 ??___ftmul 0036                   ??___llmod 0078                   ??___ftsub 007E  
                 ??___fttol 004D    __size_of_init_I2C_Master 000F                      _fround 00BB  
          ___awdiv@quotient 0022             ___awmod@divisor 0070            __end_of_instCtrl 12AB  
           ___awmod@counter 0075                      _strlen 1376       ___ftmul@f3_as_product 003B  
                 ??_initLCD 0077                   ?_I2C_Send 0070                   ?_I2C_Wait 0070  
                 ?_I2C_Stop 0070                   ??_sprintf 0067     __end_of__initialization 07FC  
                ___ftadd@f1 0050                  ___ftadd@f2 0053                  ___ftge@ff1 0070  
                ___ftge@ff2 0073                  ___ftdiv@f1 0023                  ___ftdiv@f2 0020  
                ___ftdiv@f3 002B                  ___ftneg@f1 0070         ___bmul@multiplicand 0024  
                ___ftmul@f1 0030                  ___ftmul@f2 0033                  ___ftsub@f1 0060  
                ___ftsub@f2 005D                  ___fttol@f1 0049              __pcstackCOMMON 0070  
              __pidataBANK3 12D2                  ___lltoft@c 0078               __end_of_scale 0D0E  
                ___lwtoft@c 0078                  __div_to_l_ 093D                  ??_I2C_Send 0070  
                ??_I2C_Wait 0070                  ??_I2C_Stop 0070             __div_to_l_@exp1 0025  
           __div_to_l_@cntr 0024                sprintf@integ 00B8                     ??_scale 0043  
           __div_to_l_@quot 0020               __div_to_l_@f1 0070               __div_to_l_@f2 0073  
                __pmaintext 0D0E                     ?___bmul 0024                     ?___ftge 0070  
                   ?___wmul 0070                     ?_fround 0040                   ?___ftpack 0070  
             ??_I2C_Receive 0070                I2C_Send@data 0070                   ?___lltoft 0078  
                   ?_strlen 0070                   ?___lwtoft 0078                   ?_dataCtrl 0070  
         ??_init_I2C_Master 0070                   ?_delay_ms 0070                     _SSPCON2 0091  
                   _SSPSTAT 0094                  __stringtab 1000            delay_ms@ms_Count 0070  
                 ?_instCtrl 0070                   _I2C_Start 1247              I2C_Receive@ack 0071  
         __end_of__npowers_ 1055              main@humidityFl 01A9             __size_of___bmul 0013  
           __size_of___ftge 005D                     ___awdiv 14B9                     ___ftadd 0834  
                   ___awmod 140F                     ___ftdiv 0003                     ___ftneg 125D  
                   ___lldiv 1516             __size_of___wmul 0023                     ___ftmul 172D  
                   ___llmod 13C3                     ___ftsub 12EB                     ___fttol 15DC  
                _fround$575 004C                  _fround$576 0049                  ??___ftpack 0075  
           __size_of_fround 019C                  ??___lltoft 007C                     __ptext1 1376  
                   __ptext2 0257                     __ptext3 0A6F                     __ptext4 00BB  
                   __ptext5 172D                     __ptext6 12AB                     __ptext7 140F  
                   __ptext8 14B9                     __ptext9 166A                  ??___lwtoft 007B  
           __size_of_strlen 0026                     _initLCD 1350                 ?__div_to_l_ 0070  
        main@msgTemperature 0190                     _dpowers 1006                  ??_dataCtrl 0076  
          ___awmod@dividend 0072                  ??_delay_ms 0072         __end_of_I2C_Receive 1350  
                   _sprintf 0257        end_of_initialization 07FC                  ??_instCtrl 0076  
                ?_I2C_Start 0070             ___lldiv@divisor 0070             ___lldiv@counter 007D  
            __tdiv_to_l_@f1 0070              __tdiv_to_l_@f2 0073                     strlen@s 0077  
             ??__tdiv_to_l_ 0076           __size_of_I2C_Send 0009           __size_of_I2C_Wait 0008  
         __size_of_I2C_Stop 0007                instCtrl@INST 0076                 ___ftdiv@exp 002E  
       __size_of__div_to_l_ 0132                 ___ftmul@exp 003A              __end_of___bmul 12BE  
            __end_of___ftge 14B9              __end_of___wmul 132A                 _I2C_Receive 132A  
         main@temperatureFl 01AC              __end_of_fround 0257              __end_of_strlen 139C  
       start_initialization 07F0         __end_of__tdiv_to_l_ 172D                dataCtrl@DATA 0076  
           ___llmod@divisor 0070                 ??_I2C_Start 0070             ___llmod@counter 0079  
                  ??___bmul 007C                    ??___ftge 0076                    ??___wmul 0074  
                init_fetch0 1274             _init_I2C_Master 1265               sprintf@vd_151 00AC  
         _I2C_RepeatedStart 1240                 __pdataBANK3 01C1                    ??_fround 0043  
        ?_I2C_RepeatedStart 0070                    ??_strlen 0072                  fround@prec 004F  
         __size_of___ftpack 0068           __size_of___lltoft 002B                   ___latbits 0002  
         __size_of___lwtoft 0014               __pcstackBANK0 0020               __pcstackBANK1 00A0  
             __pcstackBANK3 0190         ??_I2C_RepeatedStart 0070         __end_of__stringdata 107F  
         __size_of_dataCtrl 0013           __size_of_delay_ms 0027                 sprintf@_val 00B4  
               sprintf@flag 00B0                 sprintf@fval 00BE                 sprintf@prec 00B2  
         __size_of_instCtrl 0013   __end_of_I2C_RepeatedStart 1247                    ?___awdiv 0077  
                  ?___ftadd 0050                    ?___awmod 0070                    ?___ftdiv 0020  
                  ?___ftneg 0070                    ?___lldiv 0070                    ?___ftmul 0030  
                  ?___llmod 0070                    ?___ftsub 005D                   __npowers_ 102E  
                  ?___fttol 0049                   __pstrings 1000                 __tdiv_to_l_ 166A  
              ??__div_to_l_ 0076                    ?_initLCD 0070                    _I2C_Send 0800  
                  _I2C_Wait 1255                    _I2C_Stop 124E                   _scale$577 0045  
                  ?_sprintf 0063              __size_of_scale 029F              ___wmul@product 0074  
                 delay_ms@i 0072                   delay_ms@j 0074     __end_of_init_I2C_Master 1274  
        __end_of__div_to_l_ 0A6F                   main@F1272 01CF                   main@F1274 01C1  
               __stringbase 1005                 __stringdata 107C           ___wmul@multiplier 0070  
           I2C_Receive@temp 0072             main@msgHumidity 019E  __size_of_I2C_RepeatedStart 0007  
           main@humidityStr 01AF            __size_of___awdiv 005D            __size_of___ftadd 0109  
          __size_of___awmod 004D            __size_of___ftdiv 00B8            __size_of___ftneg 0008  
          __size_of___lldiv 005E            __size_of___ftmul 00D3            __size_of___llmod 004C  
          __size_of___ftsub 001C            __size_of___fttol 008E                    ___ftpack 1574  
        __end_of__stringtab 1006                    ___lltoft 0809                ?_I2C_Receive 0070  
                  ___lwtoft 12BE                  sprintf@exp 00BB                    _dataCtrl 1285  
          __size_of_initLCD 0026                    _delay_ms 139C                    __ptext10 093D  
                  __ptext11 1307                    __ptext20 1265                    __ptext12 0809  
                  __ptext21 1350                    __ptext13 13C3                    __ptext30 0800  
                  __ptext22 1298                    __ptext14 1516                    __ptext31 1240  
                  __ptext23 1285                    __ptext15 15DC                    __ptext32 132A  
                  __ptext24 139C                    __ptext16 12EB                    __ptext33 1255  
                  __ptext25 12BE                    __ptext17 0834                    __ptext26 0003  
                  __ptext18 125D                    __ptext27 1574                    __ptext19 145C  
                  __ptext28 124E                    __ptext29 1247                    __powers_ 1055  
          __size_of_sprintf 0599               __size_of_main 02F2                    _instCtrl 1298  
          ?_init_I2C_Master 0070                    main@LSBH 01B7                    main@MSBH 01BB  
                  main@LSBT 01B9                    main@MSBT 01BD                    init_ram0 1278  
                  scale@scl 0048                   sprintf@ap 00A7            __tdiv_to_l_@exp1 0025  
                 sprintf@vd 00A8            __tdiv_to_l_@cntr 0024                   sprintf@sp 00BD  
          __tdiv_to_l_@quot 0020            ___lldiv@dividend 0074                   stringcode 1000  
              ?__tdiv_to_l_ 0070                    sprintf@c 00C1                    sprintf@f 0063  
          ___lldiv@quotient 0079                    strlen@cp 0076                    stringdir 1000  
                  stringtab 1000  
